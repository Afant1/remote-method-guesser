#################################################################################
# Created by Jake Miller (@theBumbleSec)
# Source: https://github.com/BishopFox/rmiscout
#
# MIT License
# 
# Copyright (c) 2020 BishopFox
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#################################################################################

android.os.IBinder getActivityForTask(int task, boolean onlyRoot); 6649983110770298278; -1; false
boolean addAdministrator(int projectId, String email); -8012224260476050337; 4; false
boolean addBizApp(long bizId); 4229134116320892609; -1; false
boolean addBizAppPath(long bizaccesspathId); -2520607746324506838; -1; false
boolean addBizServer(long bizsvrId); 4153446795366845454; -1; false
boolean addComposerToSong(String username, int song_id, int composer_id); -5309371579485473671; 0; false
boolean addContact(String email, int myid); -3112693450250466148; 0; false
boolean addDocumentProfile(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DocumentProfile documentProfile); 6937601078707763469; 0; false
boolean addFlight(int xid, String flightNum, int numSeats, int price); 6571314505657932026; 4; false
boolean addFriend(String Player, String Friend); 7850440849754562157; 0; false
boolean addGuildtoAlliance(int aId, int guildId); -320584586683529821; -1; false
boolean addLevel(int projectId, int goal); 4726693419561951647; -1; false
boolean addNewRouter(String deviceId); 6483181781916477442; 0; false
boolean addPrinter(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Printer printer); -5411943063302862025; 0; false
boolean addRequestFriend(String email, int myid); 8910048486572959659; 0; false
boolean addReward(int projectId, int levelId, String description, int value); -1355024286708180675; 8; false
boolean addRooms(int xid, String location, int numRooms, int price); -4524391877409500889; 4; false
boolean addSongToAlbum(String username, int song_id, int album_id); -2757714224651997938; 0; false
boolean addSongToPlaylist(String username, int song_id, int playlist_id); -2399928522730383111; 0; false
boolean addStudioToAlbum(String username, int album_id, int studio_id); 9206416151708494741; 0; false
boolean areTransmitItemsAvailableForDeletion(java.lang.String carrier, java.lang.String shipper); 2802499324137131830; 0; false
boolean associateFacebook(java.util.LinkedHashMap data); 5210178359934591380; 0; false
boolean bestaetigeLieferung(int lieferungsNummer); 7804423983059565342; -1; false
boolean[] booleanArrayTest(boolean v[]); -1057105943651738801; 0; false
boolean[][] booleanMultiArrayTest(boolean[][] v); 2320585283648994758; 0; false
boolean booleanReturn(boolean b); -5099110186627407992; -1; false
boolean booleanTest(boolean v); 2271351313622572187; -1; false
boolean buyReward(int rewardId, String email); -5790256873394744888; 4; false
boolean cancelAuction (long id); -6026566901071383094; -1; false
boolean cancelProject(int projectId); 1144168216209383431; -1; false
boolean cardSelected(String gameID, int turnCount, String code, String playerName); 4427019323824025121; 0; false
boolean changeLevelGoal(int projectId, int levelId, int goal); 4375386874757445231; -1; false
boolean changePlaylistPosition(String username, int song_id, int position); 4169833998817823237; 0; false
boolean checkBeurt(String sessionToken); -5656632266381053798; 0; false
boolean checkFacebook(String username); -4424932295709392581; 0; false
boolean checkingIsOnlyEmailBusy(String emailField); 1213619247047270689; 0; false
boolean checkingRemindedPassword(String email); 2236006671478525717; 0; false
boolean checkItemIDExist(int itemID); -5038576992988256737; -1; false
boolean clearLocks(int xid); 1161107832794020991; -1; false
boolean clearWindowContentFrameStats(android.os.IBinder token); -3316880437938215011; 0; false
boolean clockIn(String strClient); 8019914960593459349; 0; false
boolean commit(int id); -6620902439307205562; -1; false
boolean comprobarMovimiento(int mov); -8515083495993276104; -1; false
boolean connecter(int i); -6179080416833466627; -1; false
boolean connection(int s); -6981260246354532775; -1; false
boolean connexionPseudoEtMDP(String pseudo, String motDePasse); 938740666699063673; 0; false
boolean containsReader(String readerName); -8110882234738489100; 0; false
boolean convertFromTranslucent(android.os.IBinder token); -5803194769916823507; 0; false
boolean convertToTranslucent(android.os.IBinder token); -650366371368633461; 0; false
boolean createProject(String name, String description, String date, String goal, String userEmail); 8866933260279435064; 0; false
boolean deleteAccessFuntion(java.util.Collection accessFunctionvec); -5446899473051460313; 0; false
boolean deleteAccessWindow(java.util.Collection accessWindowVec); 1442924680322294081; 0; false
boolean deleteAccessWindow(java.util.Collection accessWindowVec, java.util.Collection accessFunctionvec); 7195513126114777645; 0; false
boolean deleteAddressCategory(int category_id); 7449330462581330755; -1; false
boolean deleteAlbum(String username, int albumID); 8406890092651594198; 0; false
boolean deleteAllAccessFuntion(java.util.Collection accessFunctionvec); 1892715506590667518; 0; false
boolean deleteArtist(String username, int artistID); -4516146241208493872; 0; false
boolean deleteBizApp(long bizId); 84421676157752325; -1; false
boolean deleteBizAppPath(long bizaccesspathId); 2893730450177568828; -1; false
boolean deleteBizServer(long bizsvrId); -2638371719593820780; -1; false
boolean deleteCalendar(String calName); 4621799193941576495; 0; false
boolean deleteDeviceMonitorItem(java.util.Hashtable deviceItem); -6004615148430259350; 0; false
boolean deleteDictionaryEntries(int dictionaryID); 7076488204352028841; -1; false
boolean deleteDocumentProfile(int profile_id); 1196466669248906051; -1; false
boolean deleteFlight(int xid, String flightNum); -6609710264392396836; 4; false
boolean deleteInterfaceMonitorItem(java.util.Hashtable deviceItem); -6626113427196877680; 0; false
boolean deleteJobs(java.util.List jobKeys); 7613446947728959209; 0; false
boolean deleteLabel(String username, int labelID); -724484467369843680; 0; false
boolean deleteLineMonitorItem(java.util.Hashtable deviceItem); -7157491849361686174; 0; false
boolean deleteMachine(java.lang.String machineName); -7347655876699939662; 0; false
boolean deleteMachineProfile(int profile_id); -2892290284416426601; -1; false
boolean deleteMenuPlat(int id_menu, int id_plat); -3619504239416734122; -1; false
boolean deleteMusician(String username, int musicianID); -2400841465267188569; 0; false
boolean deleteNettingConfig(int id); 1393976805016019490; -1; false
boolean deletePlaylist(String username, int playlistID); -4278491436514427853; 0; false
boolean deletePopulationDataset(int populationDatasetID); 244053646974651524; -1; false
boolean deletePrinter(int printer_id); 8901587215395617728; -1; false
boolean deleteProperty(long sessionId, com.borland.sctm.ws.planning.entities.PropertyValue property); -134940997241343546; 8; false
boolean deleteRequest(String reciverEmail, int requestId, boolean type); 8593034394103738102; 0; false
boolean deleteRouter(java.util.ArrayList deviceIds); -2037100567631898537; 0; false
boolean deleteRouter(String deviceIp); -7850197789942799281; 0; false
boolean deleteSong(String username, int songID); -5331352678027716425; 0; false
boolean deleteSQL( String sql, String beanName); -7314370410257503618; 0; false
boolean deleteStudio(String username, int studioID); -1841012190969442787; 0; false
boolean[][] deplacementPossible(String identifiant, int x, int y); 2299759305306014138; 0; false
boolean deplacerPion(String identifiant, int x, int y, int newX, int newY); 3102523546557808781; 0; false
boolean destroyInputConsumer(String name); -8533407925559489467; 0; false
boolean DisableDeviceConfigurePolling(java.util.Hashtable deviceIps); -3301780157252268; 0; false
boolean DisableDevicePerformancePolling(java.util.ArrayList deviceIps); -1505799121092697411; 0; false
boolean DisableDevicePerformancePolling(String collectorId); -4726149449885595823; 0; false
boolean DisableDevicePolling(java.util.Hashtable devices); -6202764958668570727; 0; false
boolean DisableDeviceRttPolling(java.util.ArrayList deviceIps); -8536569864769398025; 0; false
boolean DisableInterfacePerformancePolling(java.util.ArrayList deviceIps); -6607118365427125641; 0; false
boolean DisableLinePerformancePolling(java.util.ArrayList deviceIps); -2465249835525667888; 0; false
boolean DisableLineStatusPolling(java.util.ArrayList deviceIps, java.util.ArrayList linIds); 6928377132858993632; 0; false
boolean disableRouter(String deviceIp); 1130222989187214394; 0; false
boolean editAlbum(String username, int albumID, String update); -7927147098862024414; 0; false
boolean editArtist(String username, int artistID, String update); -7647280374779841953; 0; false
boolean edit_auction(java.util.LinkedHashMap data, String username); -8735155238292029529; 0; false
boolean editLabel(String username, int labelID, String update); 4499747659717184763; 0; false
boolean editMusician(String username, int musicianID, String update); -8930688468301607525; 0; false
boolean editSong(String username, int songID, String update); 2897114775891746806; 0; false
boolean editStudio(String username, int studioID, String update); -404921441774168085; 0; false
boolean EnableDeviceConfigurePolling(java.util.Hashtable devices); 5614015835870587863; 0; false
boolean EnableDevicePerformancePolling(java.util.ArrayList deviceIps); -8799962606060548303; 0; false
boolean EnableDevicePerformancePolling(String collectorId); -7466115160986738977; 0; false
boolean EnableDevicePolling(java.util.Hashtable devices); -165743639284756088; 0; false
boolean EnableDeviceRttPolling(java.util.ArrayList deviceIps); -8946496062314598773; 0; false
boolean EnableInterfacePerformancePolling(java.util.ArrayList deviceIps); -5804673651845383880; 0; false
boolean EnableLinePerformancePolling(java.util.ArrayList deviceIps); -7296906618176972225; 0; false
boolean EnableLineStatusPolling(java.util.ArrayList lineIds); 6732429161133776888; 0; false
boolean enableRouter(String deviceIp); -8461910193708863029; 0; false
boolean estAttenduPourJouer(String identifiant); 6126038060410821211; 0; false
boolean estCliquable(String identifiant, int x, int y); 9017354402331511851; 0; false
boolean finishActivityAffinity(android.os.IBinder token); -4583788188832369582; 0; false
boolean getEnd(int game); 8899896617685030624; -1; false
boolean getFeature(String name); -5541594990815335316; 0; false
boolean getLightState(int room); -2730151097948052873; -1; false
boolean getPackageAskScreenCompat(String packageName); 8900206900200692014; 0; false
boolean getResult(String sessionToken); 4428317918752063533; 0; false
boolean getRights(int id); 3266615458359042740; -1; false
boolean getShutterState(int room); -7084348317954441402; -1; false
boolean getStatus(int id); 9187953401781729305; -1; false
boolean giveawayReward(int pledgeId, String emailReceiver); 8260304295682836343; 4; false
boolean groupExists(java.lang.String in0); 5385556684852713696; 0; false
boolean hasGraficosTablas(Integer idTabla); -7089143311482433403; 0; false
boolean hasKeys(int[] arg0, boolean[] arg1); -757526859679589106; 0; false
boolean hasTablasReportes(Integer idReporte); -5414275571769043145; 0; false
boolean heeftWinkelcentrum(int spelerID); 9052922354967171128; -1; false
boolean idCheak(String id); -7816963633554143941; 0; false
boolean iniciarSesion(String nick, int pan, int avt); -6735161489770135254; 0; false
boolean InsererPrecription(int i, int j, int k); 8115331546057929215; -1; false
boolean insertPlayer(String username, String password, String email); 7439227703175395176; 0; false
boolean interrupt(String fireInstanceId); 256262298724115780; 0; false
boolean isAddAccepted(int myId, int userId, boolean isAccept); -5013098726593661490; -1; false
boolean isAppForeground(int uid); 7511151593528098403; -1; false
boolean isAppInstalled(String packageName); 8270670747889952220; 0; false
boolean isAppPid(int pid); -899512621958967223; -1; false
boolean isAppProcess(String processName); 1328500003246300687; 0; false
boolean isAppRunning(String packageName, int userId); -671019894309442490; 0; false
boolean isAttributeDefault(int index); -4362675008851984690; -1; false
boolean isBackgroundVisibleBehind(android.os.IBinder token); -5125135106298990851; 0; false
boolean isBlocked(String pathStr); 7331225155217005391; 0; false
boolean isConnected(int callSessionType, int callType); -651484186650856598; -1; false
boolean isConnected(int characterId); -8417180183412524069; -1; false
boolean isDirectoryExist(String pathStr); 2112258952193230917; 0; false
boolean isEditor(String username); -719196996162046435; 0; false
boolean isHeadsUpEnabledForProcess(int pid); -8424714020413834316; -1; false
boolean isImmersive(android.os.IBinder token); -7230501470841468991; 0; false
boolean isInHomeStack(int taskId); 2825027669714563181; -1; false
boolean isInMultiWindowMode(android.os.IBinder token); 9199814511712904724; 0; false
boolean isInPictureInPictureMode(android.os.IBinder token); 1342693022303038748; 0; false
boolean isNotNeedRRN(int i); -7626381041982852644; -1; false
boolean isObbMounted(String rawPath); 2391444091050838284; 0; false
boolean isObsolete(java.lang.String termId, java.lang.String ontologyName); 7519298057576873192; 0; false
boolean isOutsidePackageVisible(String pkg); 8017927131274158391; 0; false
boolean isPackageInForeground(String packageName); -6828263530353906853; 0; false
boolean isPackageLaunched(int userId, String packageName); 3319455075213613381; 4; false
boolean Is_Perfect_Square(int n); -3342447499310595476; -1; false
boolean IsRejectedWork(int nDevID); 7072270166544116108; -1; false
boolean isReservationExist(int xid, String resKey); -7893782255156905201; 4; false
boolean isReserved(String userID, String address); 4520001451343947915; 0; false
boolean isRootVoiceInteraction(android.os.IBinder token); 1709280630577884644; 0; false
boolean isSecureContainerMounted(String id); 2940219315958300430; 0; false
boolean isTopOfTask(android.os.IBinder token); -3601381091498985723; 0; false
boolean isValide(int player); 970264434192525343; -1; false
boolean isVAServiceToken(android.os.IBinder token); -1285250678749673189; 0; false
boolean isWakeLockLevelSupported(int level); 3185625696890023138; -1; false
boolean itemExists(java.lang.String in0, int in1); 8720026448356312913; 0; false
boolean joueurParticipeAUnePartie(String pseudoJoueur, java.util.ArrayList listeParties); -4398233251949725054; 0; false
boolean killPids(int[] pids, String reason); 2945368444760733713; 0; false
boolean killPids(int[] pids, String reason, boolean secure); -6317884478527999199; 0; false
boolean killProcessesBelowForeground(String reason); -7696316656679799399; 0; false
boolean koopKaart(int spelerId, int kaartId); -3506898881356957254; -1; false
boolean koopPretpark(int spelerId); 1914320557277728269; -1; false
boolean koopRadioStation(int spelerId); 4235674870021815348; -1; false
boolean koopTreinstation(int spelerId); 1273754878560503221; -1; false
boolean koopWinkelcentrum(int spelerId); -5771188174784871579; -1; false
boolean KT_Fibonaci(int n); -7225360410619946861; -1; false
boolean KT_SoChinhPhuong(int n); 3685441402586222209; -1; false
boolean leaveGameQueue(String gameID, String playerName); 1621620629466854327; 0; false
boolean listeContientPartie(java.util.ArrayList liste, String nomPartie); 8543662185525472342; 0; false
boolean loginCheck(String id, String pw); -2365406233765538466; 0; false
boolean login_client(java.util.LinkedHashMap data); -2367597354060249285; 0; false
boolean login(String email, String password); -3488153054972647034; 0; false
boolean loginUsuario(String email, String password); -3240510766092163415; 0; false
boolean logoutClient(String username); 4936142704571774607; 0; false
boolean makeChat(String ct_tm_id); -1142728525118763987; 0; false
boolean makeEditor(String username, String editor_username); 6141599432475954954; 0; false
boolean moveActivityTaskToBack(android.os.IBinder token, boolean nonRoot); -6567220069564557651; 0; false
boolean movePiece(String login, int line, int column, int lineBis, int columnBis); -8349994709054964098; 0; false
boolean nicCheak(String nic); 7122720818479023153; 0; false
boolean occuper(int id_lit); -7057130559413541350; -1; false
boolean onActivityDestroyed(int userId, android.os.IBinder token); -4601196262601350504; 4; false
boolean partieEnAttente(String idJ1); -7821961274702555193; 0; false
boolean prepare_crash(int xid, long timeout); 5248791274332920050; -1; false
boolean prepare(int xid); -8463204142736292605; -1; false
boolean prepareToCommit(int xid); -3476009939336624770; -1; false
boolean pseudoEstDisponible(String pseudo); -6569377262120329343; 0; false
boolean putMenuPlat(int id_plat, int id_menu, int id_groupe); -8877278342144205218; -1; false
boolean register_client(java.util.LinkedHashMap data); 7599072045943218554; 0; false
boolean register(String name, String email, String password); -2938229320835994907; 0; false
boolean releaseActivityInstance(android.os.IBinder token); 245797973507527300; 0; false
boolean remoteResultExists(int idx); -4763301244224081311; -1; false
boolean removeComposerFromSong(String username, int song_id, int composer_id); 1821773442684747398; 0; false
boolean removeDirectoryRecursive(String pathStr); 5217372783292174935; 0; false
boolean removeDirectory(String pathStr); -6477061889448306809; 0; false
boolean removeFacebook (String username); 5291251042211936109; 0; false
boolean removeGlobalJobListener(String name); -1647208649631240932; 0; false
boolean removeGuildFromAlliance(int aId, int guildId); -1321072528481014526; -1; false
boolean removeJobListener(String name); -1791615026186070730; 0; false
boolean removeLevel(int levelId); -5932197241709889130; -1; false
boolean removeMusicianFromArtist(String username, int artist_id, int musician_id); -2282003819230243102; 0; false
boolean removePartie(String id); 3237334081739592161; 0; false
boolean removeReward(int rewardId); 8124823401065303379; -1; false
boolean removeSongFromAlbum(String username, int song_id, int album_id); 7518766147876010069; 0; false
boolean removeSongFromPlaylist(String username, int song_id, int playlist_id); 3749802544276592622; 0; false
boolean removeStudioFromAlbum(String username, int album_id, int studio_id); 9048315460957541732; 0; false
boolean removeSubTask(int taskId, int subTaskIndex); -7381372960870645579; -1; false
boolean removeTask(int taskId); -3081175664734200236; -1; false
boolean removeTask(int taskId, int flags); -5201745033174915617; -1; false
boolean removeTriggerListener(String name); 6164681776053435325; 0; false
boolean renamePlaylist(String username, int playlist_id, String name); 7168489136511586704; 0; false
boolean requestVisibleBehind(android.os.IBinder token, boolean visible); -7756504482758299162; 0; false
boolean resultsExist(String resultsType); -2039687291903347858; 0; false
boolean reviewAlbum(String username, int albumID, int score, String review); 2786608217056734655; 0; false
boolean saveFile(java.io.Serializable data, String fileName); 6350784307134937531; 0; false
boolean saveObject(Class objectClass, Integer id, java.util.Map map); -1331040549824226460; 0; false
boolean saveObject(Class objectClass, java.util.Map map); -6691725731700432871; 0; false
boolean saveObject(java.util.Map map); 8744954748314203347; 0; false
boolean setAllianceNotice(int aId, String notice); 2407663293866433135; 4; false
boolean setAllianceRanks(int aId, String[] ranks); -7220398697747702494; 4; false
boolean setComplexClass(Class cls); -4664027127687828751; 0; false
boolean setDropBoxToken(String username, String token); -8567469741019308442; 0; false
boolean setGame(String sessionToken); 7524238609355720006; 0; false
boolean setGuildAllianceId(int gId, int aId); -1944486446921381632; -1; false
boolean setIndoorEnabled(boolean z); 959289688792117700; -1; false
boolean setInputMethodEnabled(String arg0, boolean arg1); -2509725981458152184; 0; false
boolean setOrderCommented(String orderID); 587877817422814108; 0; false
boolean setPowerSaveMode(boolean mode); 4437627587941747702; -1; false
boolean setSwitchStatusPolling(int status, long interval); 1936310711420308017; -1; false
boolean setYieldFunction(Class cls, Object target, String methName); 6489295443030655416; 0; false
boolean shouldOfferSwitchingToNextInputMethod(android.os.IBinder arg0); 4554490522715080329; 0; false
boolean shouldUpRecreateTask(android.os.IBinder token, String destAffinity); -3464293091453599775; 0; false
boolean shutdown(int timeout); -5290423311331197357; -1; false
boolean SignIn(String a, String b); 6284728738918242134; 0; false
boolean startExecution(long sessionId, int executionDefId, java.lang.String version, java.lang.String build, java.lang.String execServerHostName, int execServerPort); -7686435223478789772; 12; false
boolean startGame(String string); 1039178790820083390; 0; false
boolean startViewServer(int arg0); -3539182079329315004; -1; false
boolean switchToLastInputMethod(android.os.IBinder arg0); 4023136672162312537; 0; false
boolean switchToNextInputMethod(android.os.IBinder arg0, boolean arg1); 635253334657976652; 0; false
boolean targetTaskAffinityMatchesActivity(android.os.IBinder token, String destAffinity); -2950754629915815191; 0; false
boolean timerToStart(long tEnd); 8130452956572380108; -1; false
boolean togglePlaylistPublic(String username, int playlistID); 8262137710881778941; 0; false
boolean unexportObject(boolean b); -3221787862284997174; -1; false
boolean uninstallPackage(String packageName); -5158304754774800213; 0; false
boolean unreserveFlights(java.util.List flightNumList, String custName, int xid); 4699952955695953007; 0; false
boolean unscheduleJobs(java.util.List triggerKeys); 1385849655203364760; 0; false
boolean updateAlmEventSuppressBufferTimeout(long timeout); 8236123725213177001; -1; false
boolean updateApplicationSettings(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ApplicationSettings applicationSettings); 2371181593422674505; 0; false
boolean updateDatabasePollingStart(java.util.ArrayList dburlList); -8573872531054021016; 0; false
boolean updateDataManagement(java.util.Properties dataProps); -4018718912165922492; 0; false
boolean updateDeviceMonitorItem(java.util.Hashtable deviceItem); 4257795432518801872; 0; false
boolean updateDevicePollingInterval(java.util.Hashtable deviceInterval); 3025710371336633889; 0; false
boolean updateDeviceThreshold(java.util.ArrayList deviceIps); 3118362597344864011; 0; false
boolean updateDocumentProfile(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DocumentProfile documentProfile); -9076416786405733145; 0; false
boolean updateEmailAttachedConversationCount(int count); -5291756894903044894; -1; false
boolean updateInterfaceMonitorItem(java.util.Hashtable deviceItem); -5779825801479145047; 0; false
boolean updateInterfaceThreshold(java.util.ArrayList deviceIps); 9188381872044187666; 0; false
boolean updateLineMonitorItem(java.util.Hashtable deviceItem); -3232687362540131249; 0; false
boolean updateLines(java.util.ArrayList lineIds); 8076431798631942441; 0; false
boolean updateLineThreshold(java.util.ArrayList deviceIps); 8726090865440786949; 0; false
boolean updateMachine(java.lang.String machineName, int machine_profile_id); 5458002462930919589; 0; false
boolean updateMachineProfile(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.MachineProfile machineProfile); 478752147674637606; 0; false
boolean updatePingParameter(int pingpktCount, int pingpktSize, int pingpktTimeout, int pingdelay); 8014708025463676040; -1; false
boolean updatePlanResumeTime(java.lang.String in0, java.lang.String in1, java.util.Calendar in2); -4432605739505131090; 0; false
boolean updatePrinter(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Printer printer); -6378039406897864491; 0; false
boolean updateProbe(String probeIp, String switchIp); -4590521379675834924; 0; false
boolean updateProperties(long sessionId, com.borland.sctm.ws.planning.entities.PropertyValue[] properties); 6714354197923055734; 8; false
boolean updateProperty(long sessionId, com.borland.sctm.ws.planning.entities.PropertyValue property); 5720643316380110242; 8; false
boolean updatePropertyValue(long sessionId, int nodeId, java.lang.String propertyName, java.lang.String propertyValue); -2610616870964901533; 12; false
boolean updateRouterSampling(String deviceIp, int ratio); 5151984810479529697; 0; false
boolean updateServerPollingStart(java.util.ArrayList serverList); -868389874255246111; 0; false
boolean updateSQL( String sql, String beanName); 2071669057246677421; 0; false
boolean updateTableSplitManagement(java.util.Properties dataProps); -5937459179424642529; 0; false
boolean uploadTestPlan(long sessionId, int projectId, java.lang.String content); 4694330203973013474; 12; false
boolean userExists(java.lang.String in0); 8419227335361877425; 0; false
boolean userNameExists(java.lang.String in0); 4627872497319810077; 0; false
boolean valider(int player); -3763204625119071127; -1; false
boolean varietyOnFields(String cardVariety); 1728854004223289790; 0; false
boolean verifyMail(String email); 3252937877764165465; 0; false
boolean verifyName(String name); -2901838161719655134; 0; false
boolean verifyVote(int cc, int e); -4369484851195307993; -1; false
boolean vindtTegenspeler(String sessionToken); 3940427915113762143; 0; false
boolean vote(int cc, int e, int choice, int port); -8028845793292071383; -1; false
boolean willActivityBeVisible(android.os.IBinder token); 8830125213020046114; 0; false
byte[] byteArrayTest(byte[] v); -2404340123938043243; 0; false
byte[][] byteMultiArrayTest(byte[][] v); -4506154779050630631; 0; false
byte byteReturn(byte b); 5091743314863885885; -1; false
byte byteTest(byte v); 6121076419159353913; -1; false
byte[] downloadPDF(String pdf); -600045586089815549; 0; false
byte[] download(String file); 6161747997992378060; 0; false
byte[] executeGzipQuery(String sqlQuery); 7720030976109497171; 0; false
byte[] executeGzipQuery(String sqlQuery, Object[] params); 6018063307873868748; 0; false
byte[] executeGzipQuery(String[] sqlQuerys); 6925006728452473989; 0; false
byte[] executeGzipQuery(String sqlQuerys[], Object[][] arrParams); 2774644342943626723; 0; false
byte[] export(java.lang.String pid, java.lang.String format, java.lang.String context); -5253686731285865835; 0; false
byte[] exportObject(java.lang.String pid); 1554217111532573756; 0; false
byte fileOrDirectory(String path); 6176887716200119017; 0; false
byte[] getByteString(int missing); -2316216654832746041; -1; false
byte[] getData(int len); -6316819470406046809; -1; false
byte[] getGZipData(Class objectClass, Integer[] ids, String[] fields); -1501022783149862540; 0; false
byte[] getGZipData(Class objectClass, Integer[] ids, String[] fields, String[] fieldsOrderBy); 4748785212322007135; 0; false
byte[] getGZipData(Class objectClass, String[] fields); 305466592056771718; 0; false
byte[] getGZipData(Class objectClass, String[] fields, String[] fieldsOrderBy); -8324633560829157925; 0; false
byte[] getlogimg(String imgName); -9013478558664857199; 0; false
byte[] getObjectXML(java.lang.String pid); 3072956264361740712; 0; false
byte[] getTransactionsStatus(int[] xids); 7412348324373155606; 0; false
byte[] retrieveResultsAsZip(String resultsType); 2605884788090615495; 0; false
char charReturn(char c); -7798142647421012367; -1; false
char[] getTextCharacters(int[] holderForStartAndLength); -2958007576510888795; 0; false
cn.b2m.eucp.sdkhttp.Mo[] getMO(java.lang.String arg0, java.lang.String arg1); 7795862294132866480; 0; false
cn.b2m.eucp.sdkhttp.StatusReport[] getReport(java.lang.String arg0, java.lang.String arg1); 3166057603722898153; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddMachineProfileResponse addMachineProfile(java.lang.String machineProfileName, int profile_id); 1437980537173453494; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddMachineResponse addMachine(java.lang.String machineName, int profile_id); 808597644734413560; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddressRecord getAddressRecord(int address_id); 5527968379674077072; -1; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddressRecord[] searchAddressBook(int category_id, java.lang.String search_1_value, java.lang.String search_1_value_field, java.lang.String search_1_sort_by, java.lang.String search_2_value, java.lang.String search_2_value_field, java.lang.String search_2_sort_by); -7196090201901944903; 4; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.BatchRequest getBatchShipmentErrors(java.lang.String batchReference); -921639372885258879; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.BatchRequest getStagedBatch(java.lang.String batchReference); -8334337533851026600; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.BatchResponse processBatchByRequest(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.BatchRequest batchRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ProcessBatchMode batchMode, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params); -2352581492197072854; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.BatchResponse processBatch(java.lang.String batchReference, int batchMode, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintRequest printRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params); 2040095193452131862; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ClientSettings getSettings(java.lang.String user_id, java.lang.String machineName); 7736003916717731696; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseOutBySymbolsAndPrintResponse closeOutBySymbolsAndPrint(java.lang.String carrier, java.lang.String shipper, java.lang.String[] closeOutItems, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintRequest printRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params); -9210397564038347078; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseOutBySymbolsResponse closeOutBySymbols(java.lang.String carrier, java.lang.String shipper, java.lang.String[] closeOutItems, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params); 3377519154326217143; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseOutItem[] getCloseOutItems(java.lang.String carrier, java.lang.String shipper); -8801482828029980596; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DocumentProfile getDocumentProfile(int profile_id); 4773138543095023217; -1; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetNameAddressValidationCandidatesWithParamsResponse getNameAddressValidationCandidatesWithParams(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NameAddress na, boolean useSimpleNameAddress, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params); -8132118700917926637; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Holiday[] getHolidays(java.lang.String carrier, java.lang.String origin_country); 8275463261356848535; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LicenseValidationResponse[] validateEntitlements(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LicenseValidationRequest[] license_ids); 3842980642547837097; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LoadBatchResponse loadBatch(java.lang.String batchReference, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentRequest shipmentRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params); -6193738915230277480; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LoadResponse load(java.lang.String key, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentRequest shipmentRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params); 7302432116875125853; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.MachineProfile getMachine(java.lang.String machineName); -4432393100308389037; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.MachineProfile getMachineProfile(int profile_id); 6667564991997894056; -1; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ModifyPackageListResult modifyPackageList(java.lang.String carrier, int[] msnlist, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] packageAttributes); -3055373439985495707; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NameAddress getShipperNameAddress(java.lang.String shipper); 3328489657302930247; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NameAddressValidationCandidate[] getNameAddressValidationCandidates(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NameAddress na, boolean useSimpleNameAddress); 730862454504667595; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByConsigneeReference(java.lang.String consignee_reference); -7389151504021245173; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByConsigneeReferenceWithCount(java.lang.String consignee_reference, int recordsToReturn); -2010792486975428824; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByFilter(java.lang.String filter, int recordsToReturn, java.lang.String order_by); 2282873143888406307; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByFilters(java.lang.String[] filters, int recordsToReturn, java.lang.String order_by); -6909767243229067069; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package searchByGlobalMsn(long global_msn); -6729580788326546695; -1; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByShipFileID(long shipFileID, java.lang.String carrier, int recordsToReturn); 7555945031933738346; 8; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByShipperAndShipdateAndStatus(java.lang.String shipper, java.lang.String shipdate, int recordsToReturn, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchCloseoutStatus searchCloseoutStatus); -5411874584001791604; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByShipperAndShipdate(java.lang.String shipper, java.lang.String shipdate); 1736518972288841163; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByShipperAndShipdateWithCount(java.lang.String shipper, java.lang.String shipdate, int recordsToReturn); 992682418675221146; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByShipperReference(java.lang.String shipper_reference); 8813914918248967897; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByShipperReferenceWithCount(java.lang.String shipper_reference, int recordsToReturn); -9065024780273489514; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package searchByTrackingNumber(java.lang.String trackingNumber); 979540568175496809; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByTrackingNumberWithCount(java.lang.String trackingNumber, int recordsToReturn); 9215305985952449472; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintDocumentResponse printDocument(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDocument document, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Printer printer, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params); 5046487027744252393; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Printer getPrinter(int printer_id); -4768519909729754187; -1; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintPositionDocumentXmlResponse printPositionDocumentXml(java.lang.String pos_doc_xml, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Printer printerSettings, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params); 8314392145788650675; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintRequestResponse printRequest(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintRequest printRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params); 3656309824304303322; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RateResponse rate(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentRequest request, java.lang.String service, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params); -2369731964412588375; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RateServicesResponse rateServices(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentRequest request, java.lang.String[] services, int sortType, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params); 1657167918860885295; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReProcessResponse reProcess(java.lang.String carrier, int[] msnlist); -2413574050633147226; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReShipResponse reShip(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package packageToReship, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params); -3511753189259139762; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentRequest loadBatchItem(java.lang.String batchReference, java.lang.String batchItemReference, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params); -6269619138327061043; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentResponse shipBatchItem(java.lang.String batchReference, java.lang.String batchItemReference, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params); 7621034484044996958; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipOrderResponse shipOrder(java.lang.String value, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentRequest shipmentRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params); 8762883288791256999; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipResponse ship(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentRequest request, boolean shipWithoutTransaction, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params); -2977224897547773675; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxCurrency getCurrencyByCountry(java.lang.String country_symbol); 1998825800012827166; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getCarriersbyShippers(java.lang.String[] shippers); 6725322810770948011; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getDeleteTransmitItemsList(java.lang.String carrier, java.lang.String shipper); -284615891385799756; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getHistoryItemList(java.lang.String carrier, java.lang.String shipper); -4615921497998246195; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getServicesbyCarriers(java.lang.String[] carriers); -761448576355237765; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getShipFileDocuments(java.lang.String carrier); -3374788401850312288; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getTransmitItems(java.lang.String carrier, java.lang.String shipper); -8776799285110556583; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] inspectNameAddress(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NameAddress na); -830815364081628418; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] transmitItem(java.lang.String carrier, java.lang.String shipper, java.lang.String itemToTransmit, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params); 3293193324597793536; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] transmitItems(java.lang.String carrier, java.lang.String shipper, java.lang.String[] itemsToTransmit, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params); 5540593542155707371; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDoc[] getDocumentFormats(java.lang.String carrier); 8260581356813681593; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDocument[] printBatch(java.lang.String batchReference, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintRequest printRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params); -5310542240164030648; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxReturn addShipmentToBatch(java.lang.String batchReference, java.lang.String batchItemReference, int sequenceNumber, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.BatchLoadType loadType, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentRequest shipmentRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params); -5273289628110262507; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxReturn createBatch(java.lang.String batchReference); -1933358589200834534; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxReturn deleteAddressRecord(int address_id); -5039116671747612083; -1; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxReturn deleteCommodityContent(int address_id); 5424204867095360840; -1; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxReturn getBatchCount(java.lang.String batchReference); -1868425423880703396; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxReturn insertAddressRecord(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddressRecord addressRecord); 3555119458594357860; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxReturn insertCommondityContent(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CommodityContent commodityContent); 8453834753385710526; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxReturn removeBatchItem(java.lang.String batchReference, java.lang.String batchItemReference); 3571096877526428401; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxReturn removeBatch(java.lang.String batchReference); 8700014695864445034; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxReturn updateAddressRecord(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddressRecord addressRecord); 639664110363243052; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxReturn updateCommondityContent(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CommodityContent commodityContent); 1352036605608369523; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.StageBatchResponse stageBatch(java.lang.String batchReference, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentRequest shipmentRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params); -5863585818065875625; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.VoidPackageByGlobalMsnResponse voidPackageByGlobalMsn(long global_msn, java.lang.String carrier, java.lang.String shipper, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params); -7736650290740754084; 8; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.VoidPackageByTrackingNumberResponse voidPackageByTrackingNumber(java.lang.String trackingNumber, java.lang.String carrier, java.lang.String shipper, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params); 6686586945786681289; 0; false
com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.VoidPackagesByGlobalMsnListResponse voidPackagesByGlobalMsnList(long[] msnList, java.lang.String carrier, java.lang.String shipper, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params); -7638529046513344697; 0; false
com.borland.sctm.ws.planning.entities.Attribute[] addAttributes(long sessionId, int projectId, com.borland.sctm.ws.planning.entities.Attribute[] attributes); -3051236588350496909; 12; false
com.borland.sctm.ws.planning.entities.Attribute[] getAttributes(long sessionId, int projectId); 3851320614899910784; -1; false
com.borland.sctm.ws.planning.entities.Attribute[] updateAttributes(long sessionId, int projectId, com.borland.sctm.ws.planning.entities.Attribute[] attributes); -9185500470550410274; 12; false
com.borland.sctm.ws.planning.entities.CustomStepProperty[] getCustomStepPropertyNames(long id, int projectId); 3016624723505359761; -1; false
com.borland.sctm.ws.planning.entities.DataSet[] getDataSetForDataSource(long sessionId, int dataSourceId); 7591971796640769956; -1; false
com.borland.sctm.ws.planning.entities.DataSource[] getDataSourcesForProject(long sessionId, java.lang.String projectId); 92160301125786726; 8; false
com.borland.sctm.ws.planning.entities.ManualTestStep[] getManualTestSteps(long sessionId, int testId); 2397291319935519915; -1; false
com.borland.sctm.ws.planning.entities.NamedEntity[] getTestContainers(long id, int projectId); -6842989801722578127; -1; false
com.borland.sctm.ws.planning.entities.Project getCurrentProject(long sessionId); -923987571007280253; -1; false
com.borland.sctm.ws.planning.entities.Project getProject(long sessionId, java.lang.String projectId); 6508705801600498354; 8; false
com.borland.sctm.ws.planning.entities.Project[] getProjects(long sessionId); 5045199144935398929; -1; false
com.borland.sctm.ws.planning.entities.PropertyMetaInfo getPropertyInfo(long sessionId, java.lang.String nodeTypeId, java.lang.String propertyId); -8985329430554428810; 8; false
com.borland.sctm.ws.planning.entities.PropertyValue getProperty(long sessionId, java.lang.String nodeId, java.lang.String propertyId); -3955630163491008052; 8; false
com.borland.sctm.ws.planning.entities.TestDefinitionResult[] getExecutionResult(long sessionId, int executionDefId, long executionTimestamp, java.lang.String execServerHostName, int execServerPort); 7697823060841798958; 20; false
com.granicus.xsd.CameraData getCamera(int cameraID); -143542697906637362; -1; false
com.granicus.xsd.ClipData getClipByUID(java.lang.String clipUID); 5842034605598734336; 0; false
com.granicus.xsd.ClipData getClip(int clipID); -8823004362498567787; -1; false
com.granicus.xsd.ClipData[] getClipsByForeignID(int foreignID); -6450449323633682890; -1; false
com.granicus.xsd.ClipData[] getClips(int folderID); -412919059929224516; -1; false
com.granicus.xsd.Document fetchAttachment(int metaDataID); 70306467591866965; -1; false
com.granicus.xsd.EventData getEventByUID(java.lang.String eventUID); 696447674715221760; 0; false
com.granicus.xsd.EventData getEvent(int eventID); -7894799167219212825; -1; false
com.granicus.xsd.EventData[] getEventsByForeignID(int foreignID); -5043726700526903007; -1; false
com.granicus.xsd.FolderData getFolder(int folderID); -5985113079168732328; -1; false
com.granicus.xsd.FolderData[] getFoldersByType(java.lang.String type); -2365908227932962670; 0; false
com.granicus.xsd.KeyMapping[] addClipMetaData(int clipID, com.granicus.xsd.MetaDataData metaDataData); -3362428815454419998; 4; false
com.granicus.xsd.KeyMapping[] addEventMetaData(int eventID, com.granicus.xsd.MetaDataData metaDataData); 2798523073011157650; 4; false
com.granicus.xsd.KeyMapping[] importClipMetaData(int clipID, com.granicus.xsd.MetaDataData[] metaData, boolean clearExisting, boolean asTree); -5981616275677097729; 4; false
com.granicus.xsd.KeyMapping[] importEventMetaData(int eventID, com.granicus.xsd.MetaDataData[] metaData, boolean clearExisting, boolean asTree); 6077412547601710280; 4; false
com.granicus.xsd.MetaDataData[] getClipIndicesByUID(java.lang.String clipUID); 7343062429784177593; 0; false
com.granicus.xsd.MetaDataData[] getClipIndices(int clipID); 1155159320546177654; -1; false
com.granicus.xsd.MetaDataData[] getClipMetaDataByUID(java.lang.String clipUID); 877720962887031931; 0; false
com.granicus.xsd.MetaDataData[] getClipMetaData(int clipID); 3511180133633311573; -1; false
com.granicus.xsd.MetaDataData[] getEventMetaDataByUID(java.lang.String eventUID); 3769514051100627231; 0; false
com.granicus.xsd.MetaDataData[] getEventMetaData(int eventID); -6917128785121346507; -1; false
com.granicus.xsd.MetaDataData getMetaDataByUID(java.lang.String metaDataUID); 1059638497511361495; 0; false
com.granicus.xsd.MetaDataData getMetaData(int metaDataID); 1515989580396419073; -1; false
com.granicus.xsd.MinutesDocumentData[] getClipMinutesDocuments(int clipID); -994171438866153526; -1; false
com.granicus.xsd.PublishClipResult publishClip(com.granicus.xsd.PublishClipData publishClipData); 8608547030173879875; 0; false
com.granicus.xsd.ServerData getServer(int serverID); 936948339531245031; -1; false
com.granicus.xsd.ServerInterfaceData getFolderUploadInterface(int folderID); -8978528680082782972; -1; false
com.granicus.xsd.TemplateData getTemplate(int templateID); 2796375739781617798; -1; false
com.granicus.xsd.ViewData getView(int viewID); 3367890391845206706; -1; false
com.ibm.websphere.samples.daytrader.HoldingDataBean getHolding(java.lang.Integer holdingID); 288494238290542089; 0; false
com.ibm.websphere.samples.daytrader.HoldingDataBean[] getHoldings(java.lang.String userID); -6351323276638869743; 0; false
com.ibm.websphere.samples.daytrader.OrderDataBean buy(java.lang.String userID, java.lang.String symbol, double quantity, int orderProcessingMode); -1797431756694082413; 0; false
com.ibm.websphere.samples.daytrader.OrderDataBean completeOrder(java.lang.Integer orderID, boolean twoPhase); -8322365720260921775; 0; false
com.ibm.websphere.samples.daytrader.OrderDataBean[] getClosedOrders(java.lang.String userID); -6162134249799181650; 0; false
com.ibm.websphere.samples.daytrader.OrderDataBean[] getOrders(java.lang.String userID); 8851010169708246398; 0; false
com.ibm.websphere.samples.daytrader.OrderDataBean sell(java.lang.String userID, java.lang.Integer holdingID, int orderProcessingMode); -6047233227246353044; 0; false
com.ibm.websphere.samples.daytrader.QuoteDataBean createQuote(java.lang.String symbol, java.lang.String companyName, java.math.BigDecimal price); -1348028476393700372; 0; false
com.ibm.websphere.samples.daytrader.QuoteDataBean getQuote(java.lang.String symbol); 3787714891728194294; 0; false
com.ibm.websphere.samples.daytrader.QuoteDataBean updateQuotePriceVolume(java.lang.String symbol, java.math.BigDecimal newPrice, double sharesTraded); -7774839011098373861; 0; false
com.ibm.websphere.samples.daytrader.RunStatsDataBean resetTrade(boolean deleteAll); -4487275776452931489; -1; false
com.profitbricks.api.ws.CreateDcResponse createDataCenter(java.lang.String dataCenterName, com.profitbricks.api.ws.Region region); 1185990503156496419; 0; false
com.profitbricks.api.ws.CreateLbResponse createLoadBalancer(com.profitbricks.api.ws.CreateLbRequest request); -7603142315281118017; 0; false
com.profitbricks.api.ws.CreateNicResponse createNic(com.profitbricks.api.ws.CreateNicRequest request); -490868072754612743; 0; false
com.profitbricks.api.ws.CreateServerResponse createServer(com.profitbricks.api.ws.CreateServerRequest request); 8634047285872123609; 0; false
com.profitbricks.api.ws.CreateSnapshotResponse createSnapshot(com.profitbricks.api.ws.CreateSnapshotRequest request); -3299788105027212961; 0; false
com.profitbricks.api.ws.CreateStorageResponse createStorage(com.profitbricks.api.ws.CreateStorageRequest request); 8985694240439109162; 0; false
com.profitbricks.api.ws.DataCenter getDataCenter(java.lang.String dataCenterId); 3930262852991181675; 0; false
com.profitbricks.api.ws.Firewall addFirewallRulesToLoadBalancer(com.profitbricks.api.ws.FirewallRuleRequest[] request, java.lang.String loadBalancerId); 469390381071270809; 0; false
com.profitbricks.api.ws.Firewall addFirewallRulesToNic(com.profitbricks.api.ws.FirewallRuleRequest[] request, java.lang.String nicId); -5304259083012602888; 0; false
com.profitbricks.api.ws.Firewall getFirewall(java.lang.String firewallId); 6058248826429167521; 0; false
com.profitbricks.api.ws.Image getImage(java.lang.String imageId); -1827038416227797659; 0; false
com.profitbricks.api.ws.IpBlockResponse reservePublicIpBlock(int blockSize, com.profitbricks.api.ws.Region region); -3036629610961474508; 4; false
com.profitbricks.api.ws.LoadBalancer getLoadBalancer(java.lang.String loadBalancerId); -92866240081124090; 0; false
com.profitbricks.api.ws.Nic getNic(java.lang.String nicId); 1445382994573589894; 0; false
com.profitbricks.api.ws.Notification[] getNotifications(java.lang.String networkUUID); -1159657397961601843; 0; false
com.profitbricks.api.ws.ProvisioningState getDataCenterState(java.lang.String dataCenterId); 2607821077404955263; 0; false
com.profitbricks.api.ws.RegisterLbServerResponse registerServersOnLoadBalancer(java.lang.String[] serverIds, java.lang.String loadBalancerId); -2641781499726358252; 0; false
com.profitbricks.api.ws.RequestResponse deleteDataCenter(java.lang.String dataCenterId); 6566112993205270991; 0; false
com.profitbricks.api.ws.RequestResponse deleteSnapshot(java.lang.String snapshotId); 1582361274538190352; 0; false
com.profitbricks.api.ws.RequestResponse releasePublicIpBlock(java.lang.String blockId); 7305198702630070070; 0; false
com.profitbricks.api.ws.RequestResponse resetServer(java.lang.String serverId); -6999806225512926302; 0; false
com.profitbricks.api.ws.RequestResponse setImageOsType(java.lang.String imageId, com.profitbricks.api.ws.OsType osType); -8924912831482685811; 0; false
com.profitbricks.api.ws.RequestResponse startServer(java.lang.String serverId); 2861160875305094138; 0; false
com.profitbricks.api.ws.RequestResponse stopServer(java.lang.String serverId); 1850122715885440278; 0; false
com.profitbricks.api.ws.RequestResponse updateSnapshot(com.profitbricks.api.ws.UpdateSnapshotRequest request); -2409087783771980954; 0; false
com.profitbricks.api.ws.Server getServer(java.lang.String serverId); 1011721059501201313; 0; false
com.profitbricks.api.ws.Snapshot getSnapshot(java.lang.String snapshotId); 1964022735574854871; 0; false
com.profitbricks.api.ws.Storage getStorage(java.lang.String storageId); 268603660020127884; 0; false
com.profitbricks.api.ws.VersionResponse activateFirewalls(java.lang.String[] firewallIds); 2077694033516118699; 0; false
com.profitbricks.api.ws.VersionResponse activateLoadBalancingOnServers(java.lang.String loadBalancerId, java.lang.String[] serverIds); -1691584808074232837; 0; false
com.profitbricks.api.ws.VersionResponse addPublicIpToNic(java.lang.String ip, java.lang.String nicId); -394553564724858459; 0; false
com.profitbricks.api.ws.VersionResponse addRomDriveToServer(com.profitbricks.api.ws.RomDriveRequest request); 5433986841143623960; 0; false
com.profitbricks.api.ws.VersionResponse clearDataCenter(java.lang.String dataCenterId); 5942955248756150659; 0; false
com.profitbricks.api.ws.VersionResponse connectStorageToServer(com.profitbricks.api.ws.ConnectStorageRequest request); 2025465984736092442; 0; false
com.profitbricks.api.ws.VersionResponse deactivateFirewalls(java.lang.String[] firewallIds); -5342591222980332003; 0; false
com.profitbricks.api.ws.VersionResponse deactivateLoadBalancingOnServers(java.lang.String loadBalancerId, java.lang.String[] serverIds); 5195939821488403619; 0; false
com.profitbricks.api.ws.VersionResponse deleteFirewalls(java.lang.String[] firewallIds); 5974090191482632844; 0; false
com.profitbricks.api.ws.VersionResponse deleteLoadBalancer(java.lang.String loadBalancerId); -7212790599598466156; 0; false
com.profitbricks.api.ws.VersionResponse deleteNic(java.lang.String nicId); -8589070583236446163; 0; false
com.profitbricks.api.ws.VersionResponse deleteServer(java.lang.String serverId); -474906898985108905; 0; false
com.profitbricks.api.ws.VersionResponse deleteStorage(java.lang.String storageId); -1206524287274657471; 0; false
com.profitbricks.api.ws.VersionResponse deregisterServersOnLoadBalancer(java.lang.String[] serverIds, java.lang.String loadBalancerId); 1681066534107439981; 0; false
com.profitbricks.api.ws.VersionResponse disconnectStorageFromServer(java.lang.String storageId, java.lang.String serverId); 2687223787788790473; 0; false
com.profitbricks.api.ws.VersionResponse removeFirewallRules(java.lang.String[] firewallRuleIds); -8506715284096796361; 0; false
com.profitbricks.api.ws.VersionResponse removePublicIpFromNic(java.lang.String ip, java.lang.String nicId); 2992362045287599846; 0; false
com.profitbricks.api.ws.VersionResponse removeRomDriveFromServer(java.lang.String imageId, java.lang.String serverId); -5626033910637057860; 0; false
com.profitbricks.api.ws.VersionResponse rollbackSnapshot(com.profitbricks.api.ws.RollbackSnapshotRequest request); 7422472237195037658; 0; false
com.profitbricks.api.ws.VersionResponse setInternetAccess(java.lang.String dataCenterId, java.lang.Integer lanId, boolean internetAccess); -7975917664772272513; 0; false
com.profitbricks.api.ws.VersionResponse updateDataCenter(com.profitbricks.api.ws.UpdateDcRequest request); -3346219808876754297; 0; false
com.profitbricks.api.ws.VersionResponse updateLoadBalancer(com.profitbricks.api.ws.UpdateLbRequest request); -1775655954936652426; 0; false
com.profitbricks.api.ws.VersionResponse updateNic(com.profitbricks.api.ws.UpdateNicRequest request); -5506495338127136355; 0; false
com.profitbricks.api.ws.VersionResponse updateServer(com.profitbricks.api.ws.UpdateServerRequest request); -2582393319312419031; 0; false
com.profitbricks.api.ws.VersionResponse updateStorage(com.profitbricks.api.ws.UpdateStorageRequest request); -2389422133998823356; 0; false
double add(double x, double y); 864055858262779977; -1; false
double cos(double x); -2688745164662925045; -1; false
double depositar(int contaId, double valor); -6676471302309528077; -1; false
double divide(double x, double y); 8097593626497421928; -1; false
double[] doubleArrayTest(double[] v); -8717006034390026986; 0; false
double[][] doubleMultiArrayTest(double[][] v); -166343390095469041; 0; false
double doubleReturn(double d); -4100107383295750504; -1; false
double doubleTest(double v); -4940094268588307384; -1; false
double getBalance(java.lang.String arg0, java.lang.String arg1); -2142708346800275373; 0; false
double getDisplacement(java.util.UUID id); 8163037002324088218; 0; false
double getDraft(java.util.UUID id); 1997973343991743868; 0; false
double getEachFee(java.lang.String arg0, java.lang.String arg1); -3946529196834627658; 0; false
double getFreshWaterTankSize(java.util.UUID id); 8228438968974654388; 0; false
double getGenuaSize(java.util.UUID id); -9189896717619642149; 0; false
double getLength(java.util.UUID id); 4491237120606890141; 0; false
double getMainSailSize(java.util.UUID id); -6583308552258259919; 0; false
double getMastHeight(java.util.UUID id); -2938090639197030991; 0; false
double getPNLRealisedOnPosition(int positionID); 7581708676356228516; -1; false
double getSpiSize(java.util.UUID id); -1994155455277597330; 0; false
double getTankSize(java.util.UUID id); 291693536656177709; 0; false
double getWACOnPosition(int positionID); -2576785380394211344; -1; false
double getWasteWaterTankSize(java.util.UUID id); -5492379358246490413; 0; false
double getWidth(java.util.UUID id); 7368382247139361767; 0; false
double mulitply(double x, double y); -2475753349056892126; -1; false
double power(double base, double exponent); 8506610932128216834; -1; false
double sin(double x); -6956958952710442725; -1; false
double sqrt(double x); 2386780115541070115; -1; false
double subtract(double x, double y); -610707357620578750; -1; false
double tan(double x); -307558356739220434; -1; false
double Tinhgiaithua(int n); 3859986481074122285; -1; false
double verificaSaldo(int contaId); -2109684990976055025; -1; false
es.pode.soporte.seguridad.servicios.GrupoTrabajoVO descripcionGrupoTrabajo(java.lang.Long identificador); -6547012360891365385; 0; false
es.pode.soporte.seguridad.servicios.GrupoVO descripcionGrupo(java.lang.Long id); -3871028649850529368; 0; false
es.pode.soporte.seguridad.servicios.RolVO getRol(java.lang.Long id); 1053058862506685246; 0; false
es.pode.soporte.seguridad.servicios.UsuarioActivoVO[] usuariosActivos(es.pode.soporte.seguridad.servicios.ParametroAuditoriaUsuariosVO parametroAuditoriaVO); -1224390241969072164; 0; false
es.pode.soporte.seguridad.servicios.UsuarioVO descripcionUsuario(java.lang.Long id); 4865964962838637283; 0; false
es.pode.soporte.seguridad.servicios.UsuarioVO obtenerDatosUsuario(java.lang.String usuario); -786392255733148439; 0; false
es.pode.soporte.seguridad.servicios.UsuarioVO obtenerUsuarioConOpenId(java.lang.String openIdUrl); -5581964168273319303; 0; false
es.pode.soporte.seguridad.servicios.UsuarioVO obtenerUsuario(java.lang.String nif); -6263590168594211735; 0; false
es.pode.soporte.seguridad.servicios.ValidaBajaGrupoTrabajoVO bajaGrupoTrabajo(java.lang.Long[] ids); -556288587777061445; 0; false
es.pode.soporte.seguridad.servicios.ValidaBajaGrupoVO bajaGrupo(java.lang.Long[] ids); -2282698807665397280; 0; false
es.pode.soporte.seguridad.servicios.ValidaBajaUsuarioVO bajaUsuario(java.lang.Long[] ids, es.pode.soporte.seguridad.servicios.UsuarioVO emailAdmin); 8766057228635657781; 0; false
es.pode.soporte.seguridad.servicios.ValidaBajaUsuarioVO bajaUsuarioPendiente(java.lang.Long[] ids, es.pode.soporte.seguridad.servicios.UsuarioVO emailAdmin); 9007597002069244328; 0; false
float[] floatArrayTest(float[] v); 3570417283646307647; 0; false
float[][] floatMultiArrayTest(float[][] v); 2158636865556551531; 0; false
float floatReturn(float f); -7435783994049592104; -1; false
float floatTest(float v); 4974724557786047006; -1; false
float getAnimationScale(int arg0); 7089099904929436979; -1; false
float getLcAvgLatency(int serviceType); -3326376301352173240; -1; false
float getLcCurLatency95th(int serviceType); -2732609349837896370; -1; false
float getLcCurLatency999th(int serviceType); 2777083729310034445; -1; false
float getLcCurLatency99th(int serviceType); -4813334691240676964; -1; false
float getRealServiceRate(int serviceType); -1922753505956896581; -1; false
float getWindowCompatibilityScale(android.os.IBinder windowToken); -5324573293796812577; 0; false
float kq_TrungBinhMang(int a[]); -6588647052091869806; 0; false
float modificarPozo(float monto); 6354441744156116676; -1; false
int aantalKaart(int spelerID, int kaartID); 2603413988396561200; -1; false
int addAddressCategory(java.lang.String name); -426423717647014239; 0; false
int addAlbum(String username, String name, int artistID); -4996017165144427373; 0; false
int addArtist(String username, String name); 4868467724580400791; 0; false
int addCustomStepProperty(long id, int projectId, int sequenceID, java.lang.String propertyName); -8618201303308897249; 16; false
int addDepartment(String name, String initials, String address, String fac); -804685955364907251; 0; false
int addElection(int type, String title, int ID, String init_date, String final_date, String description, String year); -5165051283965893571; 4; false
int addFaculty(String fac_name, String initials); -555320767566549749; 0; false
int add(int x, int y); -7734458262622125146; -1; false
int addLabel(String username, String name); -4605291047151478108; 0; false
int addList(String name, int ID, int election_id, int op); 7291741295242872031; 0; false
int addMusician(String username, String name); 1766073940731439180; 0; false
int addSong(String username, String name); -6478782357115286334; 0; false
int addStudio(String username, String name); 8070313589723123446; 0; false
int asignarPanel(String nick); -1205062876870413199; 0; false
int associatePTtoElection(int election_id, int port); 6349349089759436089; -1; false
int cancelMOForward(java.lang.String arg0, java.lang.String arg1); 1527795573536496415; 0; false
int changeEncryptionPassword(int type, String password); -1638289472137768037; 4; false
int changePassword(int intID, String strOldPassword, String strNewPassword); 1525005796934195325; 4; false
int chargeUp(java.lang.String arg0, java.lang.String arg1, java.lang.String arg2, java.lang.String arg3); -7331129365751603693; 0; false
int chatIdx(String id); 2225439543556199557; 0; false
int checkFunction(String f); -6838679377629315437; 0; false
int checkPermission(String permName, String pkgName, int userId); -344259803155295382; 0; false
int checkPermissionWithToken(String permission, int pid, int uid, android.os.IBinder callerToken); 4634806584148438103; 0; false
int checkRewardPrice(int rewardId); -5136648896768462870; -1; false
int ChooseDung (int NDung, String NomJ); -7633227521302664736; 4; false
int ClosePc(int lastCloseTime); -261781557393685063; -1; false
int Cong2so(int a, int b); -183574991238694691; -1; false
int ConnectToServ (String nomJ); 1324094162928353389; 0; false
int copyDocumentProfile(int profile_id); 345487956041643450; -1; false
int copyPrinter(int printer_id); 8046271013604111825; -1; false
int countChoosingPictures(String choosedPlace, String email); 1895582860847153481; 0; false
int create_auction(java.util.LinkedHashMap data, String username); -388022787300129088; 0; false
int createCamera(com.granicus.xsd.CameraData cameraData); 4922441515195977282; 0; false
int createEvent(com.granicus.xsd.EventData eventData); 6582305594236215359; 0; false
int createFolder(com.granicus.xsd.FolderData folderData); 7058841248259338551; 0; false
int createGuild(int leaderId, String name); -7100992826653423653; 4; false
int createPlaylist(String username, String name); -3337959224049888182; 0; false
int createServer(com.granicus.xsd.ServerData serverData); -1746429767967846143; 0; false
int createTemplate(com.granicus.xsd.TemplateData templateData); -951610395299483132; 0; false
int createView(com.granicus.xsd.ViewData viewData); 8668969900440437989; 0; false
int decryptStorage(String password); -2210731273373916349; 0; false
int deleteBoard(String bd_id); -2451277960730027602; 0; false
int deleteCustomStepProperty(long id, int projectId, int propertyId); -3960638428212038222; -1; false
int deleteDepartment(String dep); 2909596686809705024; 0; false
int deleteElection(int ID); 169001322185281170; -1; false
int deleteFaculty(String fac); 5633723690956175548; 0; false
int destroySecureContainer(String id, boolean force); -5616970648391195767; 0; false
int disassociatePTtoElection(int election_id, int port); 5031025089041244867; -1; false
int divide(int x, int y); -9029785076348988079; -1; false
Integer createObject(Class objectClass, java.util.Map map); -1649412730608611555; 0; false
Integer createObject(Class objectClass, java.util.Map map, java.util.Map objectEventProperty); 7443511035247341823; 0; false
Integer keyNumberLookup(String key); -3870318617509555313; 0; false
Integer[] wrapperIntArrayTest(Integer v[]); 4075629198348340401; 0; false
Integer wrapperIntegerTest(Integer v); -3048611642512729716; 0; false
int encryptStorage(int type, String password); 8797200820070491146; 4; false
int estadoOperacao(String cnpj); -8414992878132561775; 0; false
int executeUpdate(Class objectClass, String param, Object value, Integer id); -1529331478921350025; 0; false
int executeUpdate(Class objectClass, String[] params, Object[] values, Integer[] ids); -6619688549285846575; 0; false
int[] executeUpdate(String[] sqlQuery); -1232374309916821819; 0; false
int executeUpdate(String sqlQuery); 803751811537573849; 0; false
int[] executeUpdate(String[] sqlQuery, Object[][] params); 3094827270006465345; 0; false
int executeUpdate(String sqlQuery, Object[] params); -3940373578400839902; 0; false
int ExitDung (int Ndung, String NomJ); -7524435217372442622; 4; false
int finalizeSecureContainer(String id); 2012882514310095281; 0; false
int findFirstAvailableTableNumber(int roundNumber); -7955312539218861259; -1; false
int find(int characterId); 5667691610401496039; -1; false
int findPollingTable(int port); 3029109852763825924; -1; false
int findPort(String dep); 9159658335193829916; 0; false
int find(String charName); -6299699417477008174; 0; false
int getActivityDisplayId(android.os.IBinder activityToken); -8286229183386056200; 0; false
int getActivityStackId(android.os.IBinder token); -6442439617242501077; 0; false
int[] getAndereGok(String sessionToken); -5548885762079668196; 0; false
int getAppStartMode(int uid, String packageName); 3656571993134613989; 4; false
int getCloseOutMode(java.lang.String carrier, long global_msn); -8986855395296015236; 0; false
int getCpuPercent(String address); -6867683309987532111; 0; false
int getCreditValue(String userID); 7873063546070796245; 0; false
int getDatabaseCount(); -2055615645272032026; -99; true
int getDbPort(); -7902998765606163282; -99; true
int getDiskPercent(String address); -3335358159223327116; 0; false
int getDPadKeycodeState(int arg0); -6713101156873354433; -1; false
int getDPadScancodeState(int arg0); 7555143311802948402; -1; false
int getFreeDisk(String address); 6620825984230368466; 0; false
int getFreeDisk(String address, String disk); -3919841040373860136; 0; false
int getFwPort(); 1501193112943707587; -99; true
int[] getGameGok(int i, int viewerId); 4324014332319737424; -1; false
int getGame(int i); -1870140374355378011; -1; false
int getIntegrationDefaultFolderId(long sessionId, int projectId); 1928237592783595109; -1; false
int getKeycodeStateForDevice(int arg0, int arg1); -5328070202256963752; -1; false
int getKeycodeState(int arg0); -3522937236505963619; -1; false
int getLaunchedFromUid(android.os.IBinder activityToken); 1148322366670132733; 0; false
int getLocation(String name); 7660019360336389052; 0; false
int getMemPercent(String address); -6115230539228288543; 0; false
int getMode(int userId, String pkg); -6542331068658429177; 4; false
int GetMonsterPv(String NomD, int x, int y); 7106648033468403634; 0; false
int getMun(int type, int ID); -4653169120812282661; -1; false
int getNamespaceCount(int depth); -546045429699045704; -1; false
int get_number_of_genes_by_organism(java.lang.String abbr); 2886432538278614030; 0; false
int getPackageScreenCompatMode(String packageName); -737868669679490409; 0; false
int getPackageUid(String packageName, int userId); 7853985889902304996; 0; false
int getPermissionLevel(java.lang.String assetType, int assetID); 4868312469364963900; 0; false
int getPermitCountOfDivision(String divisionNumber); 3409519315462032843; 0; false
int getPlayerNumber(String name); 6432445576742882069; 0; false
int getRealQueryIntensity(int serviceType); 1436850595140015793; -1; false
int getRealRequestIntensity(int serviceType); 6693887081186677656; -1; false
int[] get_references_by_pathway(java.lang.String pathway_id); 3564195159404911540; 0; false
int getRequestedOrientation(android.os.IBinder token); 3407579800704546794; 0; false
int getRoleOfPlayerInGame(String gameID, String playerName); 8003584776056354051; 0; false
int getScancodeStateForDevice(int arg0, int arg1); 5008039590934381718; -1; false
int getScancodeState(int arg0); 8492717550110194904; -1; false
int getScore(String sessionToken); 5260612732173874687; 0; false
int Getsize(String NomD, int x, int y); -994963579273715238; 0; false
int getSwitchStateForDevice(int arg0, int arg1); -2056651324565943387; -1; false
int getSwitchState(int arg0); 6598666691310099595; -1; false
int getTaskForActivity(android.os.IBinder token, boolean onlyRoot); 4175886591426880049; 0; false
int getTeamOfPlayerInGame(String gameID, String playerName); -2090470973567139573; 0; false
int getTerminalNumber(int i); 7328961133205965673; -1; false
int getThreadHashCode(long addrOrId, boolean isAddress); -6470612449141775229; -1; false
int getToken(String clientname); 7616287197595988613; 0; false
int getTotalDisk(String address); 7869270040002705568; 0; false
int getTrackballKeycodeState(int arg0); 8138280352308155600; -1; false
int getTrackballScancodeState(int arg0); 267341735693635079; -1; false
int getTurnCountOfGame(String gameID, String playerName); -759272007044716568; 0; false
int getTurnOfGame(String gameID, String playerName); 3994908219791724641; 0; false
int getTypeOfCardInGame(String gameID, String code, String playerName); 4695603847528418336; 0; false
int getUidByPid(int pid); -1742551992153860091; -1; false
int getUsedDisk(String address); -4398423378104824658; 0; false
int getVersionCount(); -5758750198675155456; -99; true
int getViewerId(int game); 6007852475555591260; -1; false
int getVMemPercent(String address); 4150257204078767714; 0; false
int[] getVotes(int ID); -5661658032509664819; -1; false
int getYearOfConstruction(java.util.UUID id); 5113938959751889480; 0; false
int getZet(int i, String sessionToken); -342268426860880177; 4; false
int initProcess(String packageName, String processName, int userId); 7912170068872989176; 0; false
int[] intArrayTest(int[] v); 6681521860241797247; 0; false
int[][] intMultiArrayTest(int[][] v); 5965154981470169509; 0; false
int intReturn(int i); -427336498626978759; -1; false
int intReturn(int i, Object o); -1225718259184699508; 4; false
int intTest(int v); -6264683660803249431; -1; false
int IsDungComplete (String NomD); 2899872353115521374; 0; false
int IsMonsterAlive(String NomD, int x, int y); -3288599453689208851; 0; false
int IsRoomEmpty(int x, int y, String NomD); -1283293137406092833; 8; false
int joueurFaitUneOffre(java.util.HashMap listeOffres); 7209077589348543336; 0; false
int kq_CongMang(int a[]); -4565560072774615477; 0; false
int[] kq_Fibonaci(int a[]); 5300507669355981153; 0; false
int[] kq_GiamDan(int a[]); 9222110145560165289; 0; false
int kq_Max(int a[]); 7683078517358613034; 0; false
int kq_Min(int a[]); -3674638532557263358; 0; false
int[] kq_SoChinhPhuong(int a[]); -7721412355440982483; 0; false
int[] kq_TangDan(int a[]); 2809720053076504010; 0; false
int KTChuoiDX(String s); 2319603850015312359; 0; false
int KTnamnhuan(int a); -2300301973491565286; -1; false
int login (int cc, String password); -7923251318871611549; 4; false
int login(String email, String password); -6873271908294423395; 0; false
int logout(java.lang.String arg0, java.lang.String arg1); 2923640181305107262; 0; false
int makeNewChat(String myId, String friendId); -6428228693393141589; 0; false
int MaxValDungMap (String NomD); -359184566032085519; 0; false
int mkdirs(String callingPkg, String path); 6832799335821015879; 0; false
int modifyDepartment(String old, String n, int i); -3920241376941050204; 0; false
int modifyElection(int op, int ID, String change); 4013843061634832386; 8; false
int modifyFaculty(String old, String n, int i); -1586233046889338668; 0; false
int modifyPerson(int op, int cc, String change); -380352240598681752; 8; false
int MonsterAttacked(String NomD, int x, int y); 5631687584874372734; 0; false
int mountSecureContainer(String id, String key, int ownerUid, boolean readOnly); -8476991981254777344; 0; false
int mulitply(int x, int y); -1784405717450721697; -1; false
int[] multiBuddyFind(int charIdFrom, int[] characterIds); -4447116157166628795; 4; false
int MyLife(String NomJ); 139269455128519147; 0; false
int numberOfAddedPictures(String email); 7370808141542730068; 0; false
int numberOfPlayersInCategory(int numCat, java.util.ArrayList alSP); 113904315269920263; 4; false
int numberOfPlayersStrongerOrEqualTo(int rank); -3020667886743673963; -1; false
int obtenerPanel(String nick); 6605335709040405105; 0; false
int OpenPc(int lastWorkTime); 1329876377804481700; -1; false
int PausePc(int lastPauseTime); 6102701722116065731; -1; false
int phbDel(String phb_id); -8926969780001692467; 0; false
int queryCallBarringForServiceClass(int cbType, int serviceClass); -257497025236326155; -1; false
int queryCallBarring(int cbType); 6652665970431185406; -1; false
int queryCallForward(int condition, String number); -3713741125106614219; 4; false
int queryCFForServiceClass(int condition, String number, int serviceClass); -6723262332012601236; 4; false
int queryCount(java.lang.String[] in0, java.lang.String in1); 7698169500543962991; 0; false
int[] queryCounts(java.lang.String[] in0, java.lang.String[] in1); -8859570184099926380; 0; false
int queryInt(String table, String query, String query2); 4098383174370044157; 0; false
int registDetailInfo(java.lang.String arg0, java.lang.String arg1, java.lang.String arg2, java.lang.String arg3, java.lang.String arg4, java.lang.String arg5, java.lang.String arg6, java.lang.String arg7, java.lang.String arg8, java.lang.String arg9); 5998869641740724547; 0; false
int registerClipUpload(com.granicus.xsd.ClipData clipData, int serverID); 8680541879648357117; 0; false
int registerPerson(int type, String name, String department, String p, String address, int phone, int CC, String CCdate); 500541176741619581; 4; false
int registEx(java.lang.String arg0, java.lang.String arg1, java.lang.String arg2); 4072724662608464122; 0; false
int removeObjects(Class objectClass, Integer[] ids); 8368122028746313042; 0; false
int removeObjects(Class objectClass, java.util.Map objectEventProperty, Integer[] ids); 4498813599729439347; 0; false
int removePerson(int cc); 7616116056731553548; -1; false
int renameSecureContainer(String oldId, String newId); 8836417698286714761; 0; false
int reportDel(String re_id); 3745320126996956810; 0; false
int resizeSecureContainer(String id, int sizeMb, String key); 8948441090643971299; 0; false
int sacar(int contaId, double qtd); -5900080278863657300; -1; false
int saveAccessFuntion(java.util.Collection accessFunctionVec); 2832183960313311952; 0; false
int saveAccessWindow(java.util.Collection accessWindowVec); 6850319810258411494; 0; false
int searchElection(int ID); 6747799962236615634; -1; false
int searchList(int ID); 2875600689359747622; -1; false
int sendSMS(java.lang.String arg0, java.lang.String arg1, java.lang.String arg2, java.lang.String[] arg3, java.lang.String arg4, java.lang.String arg5, java.lang.String arg6, int arg7, long arg8); -5029781787805579651; 0; false
int serialPwdUpd(java.lang.String arg0, java.lang.String arg1, java.lang.String arg2, java.lang.String arg3); -3435756477097054658; 0; false
int setIntensity(int intensity, int serviceType); 5866254735336880486; -1; false
int setMOForwardEx(java.lang.String arg0, java.lang.String arg1, java.lang.String[] arg2); 4190148777589594493; 0; false
int setMOForward(java.lang.String arg0, java.lang.String arg1, java.lang.String arg2); -2673774883782854480; 0; false
int[][] setSelection(int x, int y, int taille, int player); -6559816068984710129; -1; false
int Songay(int n, int nam); 5242465997084645652; -1; false
int subtract(int x, int y); 4215395162136402095; -1; false
int SwitchRoom (String NomD, String NomJ, int x, int y); 4596416096368633655; 0; false
int toArchive(Class objectClass, Integer objectid); -5764312203706972199; 0; false
int toArchive(Class objectClass, Integer objectid, java.util.Map object); 4663409346169138332; 0; false
int transferir(int idOrigem, int idDestino, double valor); -4056979686827621135; -1; false
int unmountSecureContainer(String id, boolean force); -284767067448226012; 0; false
int updateCallBarringForServiceClass(int cbType, int action, int serviceClass, String[] barrList); 2177963023950141125; 12; false
int updateCallBarring(int cbType, int action, String[] barrList); -6797905374240466105; 8; false
int updateCallForward(int action, int condition, String number, int serviceClass, int timeSeconds); 9222807137556304911; 8; false
int updateCallWaiting(boolean enable, int serviceClass); -207255471148432571; -1; false
int updateCLIP(boolean enable); 7707365964842186881; -1; false
int updateCLIR(int clirMode); 9017144561275922109; -1; false
int updateCOLP(boolean enable); 8960744878120256877; -1; false
int updateCOLR(int presentation); 8927749038136627123; -1; false
int updateLinkToPosting(int linkTo, int postingID); 325050104661191257; -1; false
int[][] validerSelection(int player); 3066527586707037952; -1; false
int verifyEncryptionPassword(String password); 8809089723189068262; 0; false
int WriteMsg(String Msg, String NomJ, int x, int y, String NomD); 8604308712998384618; 0; false
java.io.InputStream get(long guidObject); 3674260959946621123; -1; false
java.io.Reader getReader(String readerName); 8574774301074207818; 0; false
java.io.Serializable doActivityAction(String instanceId, String tracingTag, String actionName, java.io.Serializable[] parameters, Class[] parameterTypes); -9102653528712299520; 0; false
java.io.Serializable getActivityInstanceProperty(String instanceId, String tracingTag, String propertyName); 5438932411207039496; 0; false
java.io.Serializable getActivityPropertyFromInstance(String defVerId, String tracingTag, String propertyName); 6102228808227492195; 0; false
java.io.Serializable getActivityProperty(String defVerId, String tracingTag, String propertyName); 7115689958781923643; 0; false
java.io.Serializable getProcessVariable(String instanceId, String scope, String varKey); 6059962912287747315; 0; false
java.io.Serializable loadFile(String fileName); 5939395747249217548; 0; false
java.io.Serializable lookup(String key); -24197972751897603; 0; false
java.lang.Boolean existeDescripcion(java.lang.String descripcion, java.lang.Long id); -7438439361646321861; 0; false
java.lang.Boolean existeNombreTrabajo(java.lang.String nombre, java.lang.Long id); -9179527186828766478; 0; false
java.lang.Boolean existeUsuario(java.lang.String usuario); 385195347250007608; 0; false
java.lang.Boolean nuevaClave(es.pode.soporte.seguridad.servicios.UsuarioVO emailNIF); 8278362619794984185; 0; false
java.lang.Boolean obtenerUsuariosGrupo(java.lang.Long id); -2353219288151510235; 0; false
java.lang.Boolean obtenerUsuariosGrupoTrabajo(java.lang.Long id); 7465639394054449785; 0; false
java.lang.Boolean[] wrapperBooleanArrayTest(java.lang.Boolean[] v); 1550973600803673853; 0; false
java.lang.Boolean wrapperBooleanTest(java.lang.Boolean v); 1705519407251731425; 0; false
java.lang.Byte[] wrapperByteArrayTest(java.lang.Byte[] v); -3993510323894197956; 0; false
java.lang.Byte wrapperByteTest(java.lang.Byte v); 2200399237785773194; 0; false
java.lang.Double[] wrapperDoubleArrayTest(java.lang.Double[] v); -5661746890300682832; 0; false
java.lang.Double wrapperDoubleTest(java.lang.Double v); 1035320499081838107; 0; false
java.lang.Float[] wrapperFloatArrayTest(java.lang.Float[] v); 5004680667707779498; 0; false
java.lang.Float wrapperFloatTest(java.lang.Float v); 2299350791166175095; 0; false
java.lang.Long altaGrupo(es.pode.soporte.seguridad.servicios.GrupoVO grupoVO); 7485731559052268524; 0; false
java.lang.Long altaGrupoTrabajo(es.pode.soporte.seguridad.servicios.GrupoTrabajoVO grupoTrabajo); 3435716817179109882; 0; false
java.lang.Long altaUsuario(es.pode.soporte.seguridad.servicios.UsuarioVO usuario, es.pode.soporte.seguridad.servicios.UsuarioVO adminVO); -17052981632487041; 0; false
java.lang.Long modificarGrupoTrabajo(es.pode.soporte.seguridad.servicios.GrupoTrabajoVO grupoTrabajo); 7412118825948132504; 0; false
java.lang.Long[] wrapperLongArrayTest(java.lang.Long v[]); -7633866794191866564; 0; false
java.lang.Long wrapperLongTest(java.lang.Long v); 2259024106743344625; 0; false
java.lang.Short[] wrapperShortArrayTest(java.lang.Short v[]); -5990745396817979167; 0; false
java.lang.Short wrapperShortTest(java.lang.Short v); 6035784568788113394; 0; false
java.lang.String acceptTask(java.lang.String in0, int in1, java.lang.String in2, boolean in3); -7924124265863603385; 0; false
java.lang.String activation(java.lang.String xml); -7135346848023769080; 0; false
java.lang.String addCheckBillByTaskUid(java.lang.String in0, int in1); -2005021259335840289; 0; false
java.lang.String addMaintTask(java.lang.String in0, java.lang.String in1, java.lang.String in2, java.lang.String in3); -4221218385882707151; 0; false
java.lang.String addSpecialPartBillForWip(int in0, java.lang.String in1, java.lang.String in2); -8523056099131198941; 4; false
java.lang.String alertStationSign(java.lang.String in0); 2627300863291423445; 0; false
java.lang.String backToWarehouse(java.lang.String in0, java.lang.String in1, java.lang.String in2); 6055824461145396440; 0; false
java.lang.String balanceToAraccnt(java.lang.String xml); 4024184332179952769; 0; false
java.lang.String bconv(java.lang.String string); 7792313946647078140; 0; false
java.lang.String bfind(java.lang.String string); -7214992500674728092; 0; false
java.lang.String bget(java.lang.String string); 1439473640009133202; 0; false
java.lang.String bindVip(java.lang.String xml); 6475100404130491396; 0; false
java.lang.String binfo(java.lang.String db); -2007064025901908488; 0; false
java.lang.String btit(java.lang.String string); 6269761757340068713; 0; false
java.lang.String cancelMaintTask(java.lang.String in0, java.lang.String in1); -1762753635548425092; 0; false
java.lang.String checkCusNo(java.lang.String xml); 3088758836870658558; 0; false
java.lang.String checkOut(java.lang.String xml); 2761528201411471552; 0; false
java.lang.String checkProfile(java.lang.String xml); -7992023618690879615; 0; false
java.lang.String cloneItem(java.lang.String in0, int in1, boolean in2); -35996374924132135; 0; false
java.lang.String CNJSNdbs(java.lang.String date); 393456880115577075; 0; false
java.lang.String CNJSSydt(java.lang.String date); 1174113408323803677; 0; false
java.lang.String CNJSSyrbByDwdmRq(java.lang.String dwdm, java.lang.String date); 8993535375266747752; 0; false
java.lang.String CNJSSyrb(java.lang.String wellNo); -4450057910208960239; 0; false
java.lang.String CNJSZjdt(java.lang.String date); 2567585268257337477; 0; false
java.lang.String CNJSZjrbByDwdmRq(java.lang.String dwdm, java.lang.String date); 1241438286623217027; 0; false
java.lang.String CNJSZjrb(java.lang.String wellNo); -7642528184003787211; 0; false
java.lang.String color_pathway_by_elements(java.lang.String pathway_id, int[] element_list, java.lang.String[] fg_color_list, java.lang.String[] bg_color_list); 7169220954129060842; 0; false
java.lang.String color_pathway_by_objects(java.lang.String pathway_id, java.lang.String[] object_id_list, java.lang.String[] fg_color_list, java.lang.String[] bg_color_list); -2933152251024774776; 0; false
java.lang.String consumptionDetail(java.lang.String xml); -962011277496599888; 0; false
java.lang.String convert_mol_to_kcf(java.lang.String mol_text); -2907991183234316440; 0; false
java.lang.String createTopic(java.lang.String in0, java.lang.String in1, int in2); -4802227690948346922; 0; false
java.lang.String delCardnoConsumes(java.lang.String xml); 3058936505530308989; 0; false
java.lang.String drillingData(java.lang.String date); -6412152077834715299; 0; false
java.lang.String editItem(java.lang.String in0, int in1, boolean in2); 22164823270011267; 0; false
java.lang.String enviarCorreoBaja(es.pode.soporte.seguridad.servicios.UsuarioVO usuario); 3902467933825624485; 0; false
java.lang.String facetCount(java.lang.String in0, java.lang.String[] in1, java.lang.String in2, java.lang.String[] in3); -7994394810793908140; 0; false
java.lang.String feedbackTask(java.lang.String in0); -2595354745446978716; 0; false
java.lang.String finishCheckTask(java.lang.String in0, java.lang.String in1); -8874912367623474858; 0; false
java.lang.String finishMaintTask(java.lang.String in0, java.lang.String in1); -6302957562549046180; 0; false
java.lang.String forgetPassword(java.lang.String xml); -6759983620238184464; 0; false
java.lang.String FWC_IF_Barcode_Pay_Cancel(java.lang.String xml); -4672207778648178126; 0; false
java.lang.String FWC_IF_Barcode_Pay(java.lang.String xml); -2862979094406792695; 0; false
java.lang.String FWC_IF_Barcode_Pay_Query(java.lang.String xml); 3246426947362556352; 0; false
java.lang.String FWC_IF_Barcode_Pay_Refund(java.lang.String xml); -7693149127131185100; 0; false
java.lang.String FWC_IF_Get_AlipayTrades_Month(java.lang.String xml); 4747956000516831681; 0; false
java.lang.String FWC_IF_Get_OrderDetail(java.lang.String xml); -7283044726582822850; 0; false
java.lang.String FWC_IF_Get_WxTrades_Month(java.lang.String xml); -5618301963228244780; 0; false
java.lang.String FWC_IF_Qrcode_Pay_Cancel(java.lang.String xml); 3306046182703291080; 0; false
java.lang.String FWC_IF_Qrcode_Pay(java.lang.String xml); 4275931677210255363; 0; false
java.lang.String FWC_IF_Qrcode_Pay_Notify(java.lang.String xml); 507292742814781930; 0; false
java.lang.String FWC_IF_Qrcode_Pay_Query(java.lang.String xml); -2239980409201779892; 0; false
java.lang.String FWC_IF_Qrcode_Pay_Refund(java.lang.String xml); 146947298069499108; 0; false
java.lang.String FWC_IF_Refundment(java.lang.String xml); -333958784463634501; 0; false
java.lang.String getBalanceInfo(java.lang.String xml); 8223045740432257924; 0; false
java.lang.String getBoxDestinationList(java.lang.String in0); 7076818788277212888; 0; false
java.lang.String getBoxDetailByBoxId(java.lang.String in0); 1547447001312488128; 0; false
java.lang.String getBoxSpecialPartDetail(java.lang.String in0); 8551377612921502379; 0; false
java.lang.String getCameraVideoLocation(int cameraID); 5779541627862158310; -1; false
java.lang.String getCardnoConsumes(java.lang.String xml); 1504868123600469484; 0; false
java.lang.String getChallenge(java.lang.String challengeCode); 4979149848150101293; 0; false
java.lang.String getCheckBillByTaskUid(java.lang.String in0, int in1); 3923574167062736737; 0; false
java.lang.String getClipVideoLocation(int clipID); -6368606301829541093; -1; false
java.lang.String getCollection(java.lang.String in0); 1422986871869379930; 0; false
java.lang.String getComment(java.lang.String in0, int in1, java.lang.String in2); -1530175592157560688; 0; false
java.lang.String getComments(java.lang.String in0, int in1, int in2, int in3, int in4); 4118136317120615571; 0; false
java.lang.String[] get_compounds_by_enzyme(java.lang.String enzyme_id); 8101967601070162501; 0; false
java.lang.String[] get_compounds_by_pathway(java.lang.String pathway_id); 5786365493434069445; 0; false
java.lang.String[] get_compounds_by_reaction(java.lang.String reaction_id); 894345061317134463; 0; false
java.lang.String getCurrencyByCountryLocale(java.lang.String country_symbol); 101109444694274802; 0; false
java.lang.String getDbHost(); 6262273396366353975; -99; true
java.lang.String getDbName(); 196491924625830301; -99; true
java.lang.String getDbPwd(); -7866585970429086394; -99; true
java.lang.String getDbType(); 5289118959535328037; -99; true
java.lang.String getDbUid(); -2844648277345791539; -99; true
java.lang.String getDeviceCheckupRecord(java.lang.String in0); -520327528536801514; 0; false
java.lang.String getDeviceInfoByDeviceUid(java.lang.String in0); -4095546069034132079; 0; false
java.lang.String getDeviceStateHistroyInfo(java.lang.String in0); 1392946713310964852; 0; false
java.lang.String getDeviceStateInfo(java.lang.String in0); -5942688178169697653; 0; false
java.lang.String getdic(java.lang.String xml); 8304446308423086281; 0; false
java.lang.String getDispatchedTasksByDeviceUid(java.lang.String in0); 4415367590362489731; 0; false
java.lang.String[] get_drugs_by_pathway(java.lang.String pathway_id); 6329387546729181110; 0; false
java.lang.String getEmployeeByCardId(java.lang.String in0); -2828360763720105193; 0; false
java.lang.String getEmployeeWorkrecByMonth(java.lang.String in0, java.util.Calendar in1, java.util.Calendar in2); -4077109091449941403; 0; false
java.lang.String[] get_enzymes_by_compound(java.lang.String compound_id); 1289752272233432427; 0; false
java.lang.String[] get_enzymes_by_gene(java.lang.String genes_id); -8028943510873250509; 0; false
java.lang.String[] get_enzymes_by_glycan(java.lang.String glycan_id); 734987768023312204; 0; false
java.lang.String[] get_enzymes_by_pathway(java.lang.String pathway_id); -5988822828142937050; 0; false
java.lang.String[] get_enzymes_by_reaction(java.lang.String reaction_id); -587250414766560970; 0; false
java.lang.String getEventVideoLocationByUID(java.lang.String eventUID); 1354295178949110877; 0; false
java.lang.String getEventVideoLocation(int eventID); -8376714388901692948; -1; false
java.lang.String getExecutionResultURL(long sessionId, int executionDefId, long executionTimestamp, java.lang.String execServerHostName, int execServerPort); -1963875359536952935; 20; false
java.lang.String getFileUrl(java.lang.String in0); 2839420248120562317; 0; false
java.lang.String getFwHost(); 3808572914274901187; -99; true
java.lang.String[] get_genes_by_enzyme(java.lang.String enzyme_id, java.lang.String org); -9079317126879913366; 0; false
java.lang.String[] get_genes_by_organism(java.lang.String org, int offset, int limit); -1872676454505446238; 0; false
java.lang.String[] get_genes_by_pathway(java.lang.String pathway_id); -1617214461560879395; 0; false
java.lang.String[] get_glycans_by_enzyme(java.lang.String enzyme_id); -7635627743725748522; 0; false
java.lang.String[] get_glycans_by_pathway(java.lang.String pathway_id); -5643824319504738259; 0; false
java.lang.String[] get_glycans_by_reaction(java.lang.String reaction_id); -3589155714766881611; 0; false
java.lang.String get_html_of_colored_pathway_by_elements(java.lang.String pathway_id, int[] element_list, java.lang.String[] fg_color_list, java.lang.String[] bg_color_list); -5636239018152568902; 0; false
java.lang.String get_html_of_colored_pathway_by_objects(java.lang.String pathway_id, java.lang.String[] object_id_list, java.lang.String[] fg_color_list, java.lang.String[] bg_color_list); -6261700094092935593; 0; false
java.lang.String get_html_of_marked_pathway_by_objects(java.lang.String pathway_id, java.lang.String[] object_id_list); 3833341992988133802; 0; false
java.lang.String getInvIoInfo(java.lang.String in0); -2090458087432274824; 0; false
java.lang.String[] getItemFilenames(java.lang.String in0, int in1, java.lang.String in2, boolean in3); 508745950284078708; 0; false
java.lang.String getItem(java.lang.String in0, int in1, java.lang.String in2); -1801316608026675047; 0; false
java.lang.String[] get_ko_by_gene(java.lang.String genes_id); -5023648639254406685; 0; false
java.lang.String[] get_kos_by_pathway(java.lang.String pathway_id); 106800087585973109; 0; false
java.lang.String getLatestSpecialPartBillForWip(java.lang.String in0); -2697740417852637048; 0; false
java.lang.String[] get_linked_pathways(java.lang.String pathway_id); -7203297067719101928; 0; false
java.lang.String getMainVersion(); 4190678434406299201; -99; true
java.lang.String getMaterialByBarcode(java.lang.String in0); -8504241608866016576; 0; false
java.lang.String getMaterialListByTaskUid(java.lang.String in0); 6306108229565128798; 0; false
java.lang.String getMemberInfo(java.lang.String xml); -5894008124480462236; 0; false
java.lang.String getMetaDataVideoLocation(int metaDataID); 6413587476798883487; -1; false
java.lang.String[] getNextPID(org.apache.axis.types.NonNegativeInteger numPIDs, java.lang.String pidNamespace); 3900102565479135978; 0; false
java.lang.String getNonWorkHourByMonth(java.lang.String in0, java.util.Calendar in1, java.util.Calendar in2); -6573518604574014589; 0; false
java.lang.String[] get_pathways_by_compounds(java.lang.String[] compound_id_list); 2883487277619972307; 0; false
java.lang.String[] get_pathways_by_drugs(java.lang.String[] drug_id_list); -7069924326789507380; 0; false
java.lang.String[] get_pathways_by_enzymes(java.lang.String[] enzyme_id_list); -8259139081962519312; 0; false
java.lang.String[] get_pathways_by_genes(java.lang.String[] genes_id_list); 382933549284209199; 0; false
java.lang.String[] get_pathways_by_glycans(java.lang.String[] glycan_id_list); 6381724440103304648; 0; false
java.lang.String[] get_pathways_by_kos(java.lang.String[] ko_id_list, java.lang.String org); 5478597748931083185; 0; false
java.lang.String[] get_pathways_by_reactions(java.lang.String[] reaction_id_list); -5605427653071446598; 0; false
java.lang.String getPersonalOvertimeWork(java.lang.String in0, java.util.Calendar in1, java.util.Calendar in2); -5248301127371123920; 0; false
java.lang.String getProblemType(java.lang.String in0); -219724538555879325; 0; false
java.lang.String[] getPropertyIds(long sessionId); 4967219349369351525; -1; false
java.lang.String[] getPropertyIds(long sessionId, java.lang.String nodeTypeId, java.lang.String propertyTypeId); -7663918818448062027; 8; false
java.lang.String[] getPropertyTypeIds(long sessionId, java.lang.String nodeTypeId); -5216263829411041683; 8; false
java.lang.String getQualityRecByMonth(java.lang.String in0, java.util.Calendar in1, java.util.Calendar in2); 8972393148060464132; 0; false
java.lang.String[] get_reactions_by_compound(java.lang.String compound_id); -6354870128975125191; 0; false
java.lang.String[] get_reactions_by_enzyme(java.lang.String enzyme_id); -9081246810133851343; 0; false
java.lang.String[] get_reactions_by_glycan(java.lang.String glycan_id); -9172982151363069074; 0; false
java.lang.String[] get_reactions_by_pathway(java.lang.String pathway_id); -7325514606859612017; 0; false
java.lang.String getReservationDetail(java.lang.String xml); -5490430330430553826; 0; false
java.lang.String getRmrate(java.lang.String xml); 556502861177313135; 0; false
java.lang.String getRoomFutureSta(java.lang.String xml); 1629636415089518890; 0; false
java.lang.String getRoomSta(java.lang.String xml); -7916761102853063788; 0; false
java.lang.String getSchema(java.lang.String in0); 8254731755816727768; 0; false
java.lang.String getShiftInfo(java.lang.String in0, java.lang.String in1); 3851856967541105383; 0; false
java.lang.String getSpecialPartDescListByMaterialUsnAndTaskUid(java.lang.String in0, java.lang.String in1, java.lang.String in2); -7362418621494156128; 0; false
java.lang.String getSpecialPartDetailByTaskUid(java.lang.String in0, int in1); -4966929097165170706; 0; false
java.lang.String getStationBoxByDeviceUid(java.lang.String in0); -3286446476884055546; 0; false
java.lang.String getStationInvInfo(java.lang.String in0, java.lang.String in1); 861138142941712026; 0; false
java.lang.String getStationList(java.lang.String in0); -7190788950532683924; 0; false
java.lang.String getStationMaterial(java.lang.String in0, java.lang.String in1, java.lang.String in2); 5072975174984762296; 0; false
java.lang.String getStationToolInvDetail(java.lang.String in0, java.lang.String in1); 6197261529149710464; 0; false
java.lang.String getStationToReturnInvInfo(java.lang.String in0); 1923339171163013105; 0; false
java.lang.String getStationWarehouse(java.lang.String in0); 2107559798203106047; 0; false
java.lang.String getStatus(); 9222340217560959721; -99; true
java.lang.String getTakeOverEmployee(java.lang.String in0); -871298739623068358; 0; false
java.lang.String getTaskFilterCounts(boolean in0); 8315766472821557604; -1; false
java.lang.String getTaskList(java.lang.String in0, int in1, int in2); -3806629725077049393; 0; false
java.lang.String getTaskProcessFiles(java.lang.String in0, java.lang.String in1); 5684583615830918499; 0; false
java.lang.String getTaskTools(java.lang.String in0, java.lang.String in1, java.lang.String in2); -8393897563135750262; 0; false
java.lang.String getTaskWips(java.lang.String in0, java.lang.String in1, java.lang.String in2); -2973124816359080877; 0; false
java.lang.String getTaskWipsSignInfo(java.lang.String in0, java.lang.String in1); -6455541250625577297; 0; false
java.lang.String getTermById(java.lang.String termId, java.lang.String ontologyName); -8574651064196295794; 0; false
java.lang.String getToolInvDetail(java.lang.String in0); -139889524283395260; 0; false
java.lang.String getToolInvInfoByToolType(java.lang.String in0, java.lang.String in1, int in2); 4962401234445268388; 0; false
java.lang.String getToolsByParentId(java.lang.String in0); -7115581215065202475; 0; false
java.lang.String getTopic(java.lang.String in0); -5904796053610517484; 0; false
java.lang.String[] getTransmitItemsAvailableForDeletion(java.lang.String carrier, java.lang.String shipper); 7214040108942234645; 0; false
java.lang.String[] getTransmitItemsByStatus(java.lang.String carrier, java.lang.String shipper, int status); 3671070825484709958; 0; false
java.lang.String getWeightUnitByCountryLocale(java.lang.String country_symbol); -2237116825725086440; 0; false
java.lang.String getWorkReason(java.lang.String in0); -7348446082372142077; 0; false
java.lang.String guestOrderQuery(java.lang.String xml); 8105808355530769301; 0; false
java.lang.String HGQtscdt(java.lang.String date); 8900554190483868334; 0; false
java.lang.String HGThscdt(java.lang.String date); -1324689056354358066; 0; false
java.lang.String IF_Booking_To_Regist(java.lang.String xml); -2804076982295160512; 0; false
java.lang.String IF_Cancel_Booking(java.lang.String xml); -7054409564064275709; 0; false
java.lang.String IF_Cancel_MedicalCard(java.lang.String xml); 5861891036699418481; 0; false
java.lang.String IF_Cancel_Regist(java.lang.String xml); 5592383971640855941; 0; false
java.lang.String IF_Charge_Foregift(java.lang.String xml); 8133887423080617996; 0; false
java.lang.String IF_Charge_MedicalCard(java.lang.String xml); 4826031616096896596; 0; false
java.lang.String IF_Check_Hospital_Trade(java.lang.String xml); -480015924370174757; 0; false
java.lang.String IF_Check_Hospital_Trade_Status(java.lang.String xml); -3489443373567674238; 0; false
java.lang.String IF_Clear_MedicalCard(java.lang.String xml); 6729352323721156902; 0; false
java.lang.String IF_Confirm_AdmissionNumber(java.lang.String xml); -4365260835469036207; 0; false
java.lang.String IF_Confirm_Booking(java.lang.String xml); -4619387129289073828; 0; false
java.lang.String IF_Confirm_MedicalCard(java.lang.String xml); -3446559618163418425; 0; false
java.lang.String IF_Confirm_Regist(java.lang.String xml); -1537654967726874984; 0; false
java.lang.String IF_Create_MedicalCard(java.lang.String xml); -2876756321501213513; 0; false
java.lang.String IF_Get_Bingli_Report_Detail(java.lang.String xml); 3882944564823820848; 0; false
java.lang.String IF_Get_Bingli_Report_List(java.lang.String xml); 3625138831396920572; 0; false
java.lang.String IF_Get_Booking_Dept_NoSource(java.lang.String xml); -7116471123792564410; 0; false
java.lang.String IF_Get_Booking_Doc_Resource(java.lang.String xml); 4146749321554946428; 0; false
java.lang.String IF_Get_Booking_Resource(java.lang.String xml); -582370068234969769; 0; false
java.lang.String IF_Get_Chaosheng_Report_Detail(java.lang.String xml); 7346235766360588712; 0; false
java.lang.String IF_Get_ChaoSheng_Report_List(java.lang.String xml); 3259297734099673225; 0; false
java.lang.String IF_Get_Fangshe_Report_Detail(java.lang.String xml); 5138796228083213088; 0; false
java.lang.String IF_Get_Fangshe_Report_List(java.lang.String xml); -6114672032515477685; 0; false
java.lang.String IF_Get_Hospital_Bank_List(java.lang.String xml); -4525622627365803598; 0; false
java.lang.String IF_Get_Hospital_CardType_List(java.lang.String xml); 4737659550768562355; 0; false
java.lang.String IF_Get_Hospital_CertType_List(java.lang.String xml); 8497514926616775475; 0; false
java.lang.String IF_Get_Hospital_MedicalCard_List(java.lang.String xml); 8716745319248757874; 0; false
java.lang.String IF_Get_Hospital_Trade_List(java.lang.String xml); -3275675833909605182; 0; false
java.lang.String IF_Get_Hospital_Waiting_List(java.lang.String xml); 3216875677363086590; 0; false
java.lang.String IF_Get_InhospitalCost_Patient_List(java.lang.String xml); -7432880598379030526; 0; false
java.lang.String IF_Get_Inhospital_Day_Cost_Detail(java.lang.String xml); -1785864564699536188; 0; false
java.lang.String IF_Get_Inhospital_Day_Cost_List(java.lang.String xml); 6783472193427253988; 0; false
java.lang.String IF_Get_Inhospital_Foregift_Detail(java.lang.String xml); -8288313978196285814; 0; false
java.lang.String IF_Get_Inhospital_Foregift_List(java.lang.String xml); 3401911968474481227; 0; false
java.lang.String IF_Get_Inhospital_Patient_List(java.lang.String xml); 8809109348089769142; 0; false
java.lang.String IF_Get_Inhospital_Total_Cost_Detail(java.lang.String xml); 6797493155442491294; 0; false
java.lang.String IF_Get_Inhospital_Total_Cost_List(java.lang.String xml); 4439717033635132973; 0; false
java.lang.String IF_Get_Jianyan_Report_Detail(java.lang.String xml); -901528475629196920; 0; false
java.lang.String IF_Get_Jianyan_Report_List(java.lang.String xml); 4478341910534626223; 0; false
java.lang.String IF_Get_MedicalCard_Charge_Detail(java.lang.String xml); 2715028817511615144; 0; false
java.lang.String IF_Get_MedicalCard_Charge_List(java.lang.String xml); 7894479462094052445; 0; false
java.lang.String IF_Get_OutPatient_Charged_Trade_Detail(java.lang.String xml); 1682805845971452601; 0; false
java.lang.String IF_Get_OutPatient_Charged_Trade_List(java.lang.String xml); 8780497491588456750; 0; false
java.lang.String IF_Get_OutPatient_UnCharge_Trade_Detail(java.lang.String xml); 1642307354716508684; 0; false
java.lang.String IF_Get_OutPatient_Uncharge_Trade_List(java.lang.String xml); 9211227693346699409; 0; false
java.lang.String IF_Get_Patient_Booking_Detail(java.lang.String xml); -911665003973870165; 0; false
java.lang.String IF_Get_Patient_Booking_List(java.lang.String xml); 8720198078089829939; 0; false
java.lang.String IF_Get_Patient_Regist_Detail(java.lang.String xml); -5653863551031787332; 0; false
java.lang.String IF_Get_Patient_Regist_List(java.lang.String xml); -9083639100293876270; 0; false
java.lang.String IF_Get_Regist_Dept_NoSource(java.lang.String xml); 7704912043127239736; 0; false
java.lang.String IF_Get_Regist_Doc_Resource(java.lang.String xml); -7200335911055714100; 0; false
java.lang.String IF_Get_Regist_Resource(java.lang.String xml); 5848351291779923693; 0; false
java.lang.String IF_Hospitalization_Confirm_Booking(java.lang.String xml); -2763360804513593327; 0; false
java.lang.String IF_Hospitalization_Detail(java.lang.String xml); -5837564316368648517; 0; false
java.lang.String IF_Hospitalization_Get_List(java.lang.String xml); -5898602066028864562; 0; false
java.lang.String IF_LeaveHospital_Confirm(java.lang.String xml); 3094085901710641352; 0; false
java.lang.String IF_LeaveHospital_Detail(java.lang.String xml); 959120551638947292; 0; false
java.lang.String IF_LeaveHospital_Get_List(java.lang.String xml); -1299641214099198294; 0; false
java.lang.String IF_LeaveHospitalSummary_Detail(java.lang.String xml); -3774123562848160612; 0; false
java.lang.String IF_LeaveHospitalSummary_Get_List(java.lang.String xml); 970920430708534669; 0; false
java.lang.String IF_Regist_MedicalCard(java.lang.String xml); -752732445141741597; 0; false
java.lang.String IF_Update_Trade_Status(java.lang.String xml); 945454412802384526; 0; false
java.lang.String inLargeNetworks(java.lang.String date); -4580081595452715400; 0; false
java.lang.String jhcDailyData(java.lang.String date); -4128780423640550231; 0; false
java.lang.String JSTscldt(java.lang.String dwdm, java.lang.String date); -8992878238133348905; 0; false
java.lang.String JSZycldt(java.lang.String dwdm, java.lang.String date); -1041851619201519862; 0; false
java.lang.String[] listarRolesUsuario(java.lang.String usuario); 1232557843924398245; 0; false
java.lang.String listTopics(java.lang.String in0); 6800077329458347323; 0; false
java.lang.String loginWithToken(java.lang.String in0); 8721279123584614842; 0; false
java.lang.String mark_pathway_by_objects(java.lang.String pathway_id, java.lang.String[] object_id_list); -7580747072623925419; 0; false
java.lang.String memberExchange(java.lang.String xml); -8433771707631428012; 0; false
java.lang.String memberProfileUpdate(java.lang.String xml); 2504745579894964036; 0; false
java.lang.String modificarUsuario(es.pode.soporte.seguridad.servicios.UsuarioVO usuario); 8318247707613208007; 0; false
java.lang.String monthlyNaturalGasproDuction(java.lang.String date); -6799220033808054217; 0; false
java.lang.String monthlyNaturalGasproDuctionNew(java.lang.String dwdm, java.lang.String date); -1717833582699618366; 0; false
java.lang.String newItem(java.lang.String in0); -4502681766566322307; 0; false
java.lang.String newVersionItem(java.lang.String in0, int in1, boolean in2); 2875176811683602380; 0; false
java.lang.String[] obtenerListaUsuariosGrupoTrabajo(java.lang.String usuarioGrupoTrabajo); 8892522980440806217; 0; false
java.lang.String paramTest(java.lang.String xml); 4249339135755346229; 0; false
java.lang.String pourTransmission(java.lang.String date); 1223078084232217808; 0; false
java.lang.String rateQueryByCusNo(java.lang.String xml); -201192814817761011; 0; false
java.lang.String rateQuery(java.lang.String xml); 7795700751208271758; 0; false
java.lang.String register(java.lang.String xml); 7053783009111826537; 0; false
java.lang.String rejectTask(java.lang.String in0, int in1, java.lang.String in2, java.lang.String in3, java.lang.String in4, boolean in5); 5276710485170513657; 0; false
java.lang.String resCancel(java.lang.String xml); -337416317863014029; 0; false
java.lang.String reservationCashment(java.lang.String xml); 9125540451279011201; 0; false
java.lang.String reservation(java.lang.String xml); -1484907272345390205; 0; false
java.lang.String reservationPayment(java.lang.String xml); 6926570446816907599; 0; false
java.lang.String reserveTypeAvail(java.lang.String xml); 4369866810178135634; 0; false
java.lang.String resetPassword(java.lang.String xml); -4921064839649567988; 0; false
java.lang.String salesIncomeQuery(java.lang.String xml); -5192823563586995958; 0; false
java.lang.String saveBoxDividedResult(java.lang.String in0, java.lang.String in1); -7111478473287095289; 0; false
java.lang.String saveBoxedResult(java.lang.String in0, java.lang.String in1, java.lang.String in2, java.lang.String in3, java.lang.String in4); 9113601717791401652; 0; false
java.lang.String saveCheckBills(java.lang.String in0); 7935024029406170229; 0; false
java.lang.String saveItem(java.lang.String in0, boolean in1); -2483930402207664640; 0; false
java.lang.String saveSpecialPartBill(java.lang.String in0, java.lang.String in1); 5580779290131841834; 0; false
java.lang.String[] search_compounds_by_composition(java.lang.String composition); 500136435187608225; 0; false
java.lang.String[] search_compounds_by_mass(float mass, float range); -7546903611325869183; -1; false
java.lang.String[] search_compounds_by_name(java.lang.String name); -4823282426945233777; 0; false
java.lang.String[] search_drugs_by_composition(java.lang.String composition); 7568109687400863232; 0; false
java.lang.String[] search_drugs_by_mass(float mass, float range); -8234718203352497073; -1; false
java.lang.String[] search_drugs_by_name(java.lang.String name); 4723408751831017482; 0; false
java.lang.String[] search_glycans_by_composition(java.lang.String composition); -1983540371750414463; 0; false
java.lang.String[] search_glycans_by_mass(float mass, float range); 3834755244171454365; -1; false
java.lang.String[] search_glycans_by_name(java.lang.String name); -7036261763522162496; 0; false
java.lang.String searchItemsFast(java.lang.String in0, java.lang.String[] in1, java.lang.String in2, boolean in3, int in4, boolean in5, int in6, int in7, java.lang.String[] in8); 848579325980359036; 0; false
java.lang.String searchItems(java.lang.String in0, java.lang.String[] in1, java.lang.String in2, boolean in3, int in4, boolean in5, int in6, int in7); 2070200189627863687; 0; false
java.lang.String searchRoomType(java.lang.String xml); -8602656977975069491; 0; false
java.lang.String selectRoomno(java.lang.String xml); 2528139251045859354; 0; false
java.lang.String shiftWorkStation(java.lang.String in0, java.lang.String in1, java.lang.String in2, java.lang.String in3); 2483267328080141878; 0; false
java.lang.String signBoxMaterial(java.lang.String in0, java.lang.String in1, java.lang.String in2); 3887365579975575443; 0; false
java.lang.String signMaterialResource(java.lang.String in0, java.lang.String in1, java.lang.String in2); 2947924143265822885; 0; false
java.lang.String solicitarAltaUsuario(es.pode.soporte.seguridad.servicios.UsuarioVO usuario); -5071942188753807630; 0; false
java.lang.String startCheckTask(java.lang.String in0, java.lang.String in1); 4843688131536147328; 0; false
java.lang.String startMaintTask(java.lang.String in0, java.lang.String in1); -8721950731562096416; 0; false
java.lang.String stationToolOutApply(java.lang.String in0, java.lang.String in1, java.lang.String in2, java.lang.String in3, java.lang.String in4); 4804052359235126432; 0; false
java.lang.String stayIn(java.lang.String xml); -1219652812085549416; 0; false
java.lang.String[] stringArrayTest(java.lang.String[] v); 367125836884729406; 0; false
java.lang.String[][] stringMultiArrayTest(java.lang.String[][] v); -8395052872244991582; 0; false
java.lang.String taskToolOutApply(java.lang.String in0, java.lang.String in1, java.lang.String in2, java.lang.String in3, java.lang.String in4); 533620509709693547; 0; false
java.lang.String taskWipInApply(java.lang.String in0, java.lang.String in1, java.lang.String in2, java.lang.String in3); 6813481112109659214; 0; false
java.lang.String taskWipOutApply(java.lang.String in0, java.lang.String in1, java.lang.String in2, java.lang.String in3); 4438394214913037976; 0; false
java.lang.String trqAnnualOutput(java.lang.String date); -4264227250336581735; 0; false
java.lang.String trqAnnualOutputNew(java.lang.String dwdm, java.lang.String date); -9091654872465177271; 0; false
java.lang.String trqJingJingQi(java.lang.String date); 9163609823638929015; 0; false
java.lang.String trqMonthlyPlan(java.lang.String date); -1407334474876799465; 0; false
java.lang.String trqMonthlyPlanNew(java.lang.String dwdm, java.lang.String date); 1425556786297351958; 0; false
java.lang.String trqOutsourcing(java.lang.String date); 3471291876587660439; 0; false
java.lang.String updateCheckTaskPlanSend(java.lang.String in0, int in1); -8971125036108518476; 0; false
java.lang.String updateDeviceCheckupRecord(java.lang.String in0); 4630229211425880384; 0; false
java.lang.String updateDeviceProblem(java.lang.String in0, java.lang.String in1, java.lang.String in2, java.lang.String in3); -7892177475268936045; 0; false
java.lang.String updateNonWorkHourApplyInfo(java.lang.String in0, java.lang.String in1, java.lang.String in2, java.lang.String in3); 3355733913798860602; 0; false
java.lang.String updateShiftInfo(java.lang.String in0, java.lang.String in1, java.lang.String in2, java.lang.String in3); -3040653589150551346; 0; false
java.lang.String vipClassUp(java.lang.String xml); -5048484191384764370; 0; false
java.lang.String wellSjData(java.lang.String dwdm, java.lang.String date); 3083316851117240819; 0; false
java.lang.String wellZjData(java.lang.String dwdm, java.lang.String date); 2967748310224764221; 0; false
java.lang.String writeDeviceCheckupRecord(java.lang.String in0); -6911642717950842356; 0; false
java.math.BigDecimal[] bigDecimalArrayTest(java.math.BigDecimal[] v); 6856675123548522637; 0; false
java.math.BigDecimal[][] bigDecimalMultiArrayTest(java.math.BigDecimal[][] v); -5700460783790656497; 0; false
java.math.BigDecimal bigDecimalTest(java.math.BigDecimal v); 5731834241836987306; 0; false
java.math.BigInteger bigIntegerTest(java.math.BigInteger v); 4590925999665687446; 0; false
java.util.ArrayList choosingPictures(String choosedPlace, String email); 7994533509739988747; 0; false
java.util.ArrayList choosingPlaces(String email); 6264798235656098565; 0; false
java.util.ArrayList clientList(String userId); 2109258033716030523; 0; false
java.util.ArrayList contactList(int id); 476272806704244450; -1; false
java.util.ArrayList findAuthorizedBodies(String nameAuthorizedBody, String orderBy); -3316562506438636671; 0; false
java.util.ArrayList findBaseRates(String nameBaseRate, String orderBy); 8294847156445043865; 0; false
java.util.ArrayList findByOrgan(String organId); 249150483475547930; 0; false
java.util.ArrayList findByTime(String startTime, String endTime); -8764406404931891553; 0; false
java.util.ArrayList findCustomers(String date); 3792291877688351994; 0; false
java.util.ArrayList findDepartments(String nameDepartment, String orderBy); 1369586334649947002; 0; false
java.util.ArrayList findDocumentsTypes(String nameDocumentsType, String orderBy); -6532384643805318422; 0; false
java.util.ArrayList findMqSchedulerSheetList(Integer departmentKey, String searchStr, String orderBy); 7593805151182931252; 0; false
java.util.ArrayList findPackages(String date); 7278762749729441818; 0; false
java.util.ArrayList findPatternPaidPercentTypes(String namePatternPaidPercentType, String orderBy); -2706169995751242270; 0; false
java.util.ArrayList findPrices(String date); 6503287534791261492; 0; false
java.util.ArrayList findProcessTypeList(String nameProcessType, String orderBy); 3984190258743449509; 0; false
java.util.ArrayList findPunitiveMeasures(String namePunitiveMeasure, String orderBy); 6987121386266472047; 0; false
java.util.ArrayList findPurchaseReturn(String message, String type); -1470839016313870069; 0; false
java.util.ArrayList findPurchase(String message, String type); -8175446745018239664; 0; false
java.util.ArrayList findRatingTypes(String nameRatingType, String orderBy); -4992705325396859671; 0; false
java.util.ArrayList findRegions(String nameRegion, String orderBy); -7540318920797141509; 0; false
java.util.ArrayList findSaleReturn(String message, String type); -5623376613128102133; 0; false
java.util.ArrayList findSale(String message, String type); 4506836357074950954; 0; false
java.util.ArrayList findTargetTypes(String nameTargetType, String orderBy); 4237546527381489401; 0; false
java.util.ArrayList gamesListBefore(int roundNumber); 1298821269762187553; -1; false
java.util.ArrayList gamesList(int roundNumber); -2629973524849992813; -1; false
java.util.ArrayList getAdministrators(int projectId); -4279334855874862616; -1; false
java.util.ArrayList getAllTradeOffers(String username); -62905455717269296; 0; false
java.util.ArrayList getBlockedList(String clientMail); 8697737299172479591; 0; false
java.util.ArrayList getBlockList(String mail); -2128812635015515571; 0; false
java.util.ArrayList getCardsArray(String gameID, String playerName); -8763731889109657219; 0; false
java.util.ArrayList getCommentableOrders (String userID); 2416952569893021216; 0; false
java.util.ArrayList getContactList(String mail); -5002950725905917468; 0; false
java.util.ArrayList getDetailInfo(String address); -7229501312637468160; 0; false
java.util.ArrayList getElectionInformation(int ID); 7125045499704167937; -1; false
java.util.ArrayList GetGames(String username); 8695961215789565507; 0; false
java.util.ArrayList getGlobalPkgWhiteList(int i); 256785849417238467; -1; false
java.util.ArrayList getGrantHaventPermit(String permitNumberPart); 5464281555948641800; 0; false
java.util.ArrayList getMappingList(String strProcessID); -5418813630567923678; 0; false
java.util.ArrayList getMenu(int id); 204420415397524123; -1; false
java.util.ArrayList getMenuPlat(int id); -7858535399825911905; -1; false
java.util.ArrayList getMenu(String name); 6205894567762367869; 0; false
java.util.ArrayList getMyOffer(String username); -3268577454773894318; 0; false
java.util.ArrayList getPartiePourJoueur(String joueur); 5256497892315392332; 0; false
java.util.ArrayList getPlat(boolean images); -4915801697696881777; -1; false
java.util.ArrayList getPlat(int id); 5857918277021841079; -1; false
java.util.ArrayList getPlatMenu(int id); -1633687675490156272; -1; false
java.util.ArrayList getPlat(String name); 236680577038767209; 0; false
java.util.ArrayList getPlayersWhoDidNotShowUp(int roundNumber); 6252665171967042942; -1; false
java.util.ArrayList getProcessInfo(String address); 6170919445616364074; 0; false
java.util.ArrayList getRecord(String search); 1456939434009519033; 0; false
java.util.ArrayList getRecReq(String mail); 2405815388782916305; 0; false
java.util.ArrayList getReedsGezet(int i); -4413096898508951579; -1; false
java.util.ArrayList getSendReq(String mail); 5949397553166381897; 0; false
java.util.ArrayList getSimilarPermitNumbers(String permitNumberPart); -4049601232958381570; 0; false
java.util.ArrayList getSimilarPermitsByName(String namepart); 7179984609025995766; 0; false
java.util.ArrayList getSimilarPermitsByNIC(String nicpart); -2410324702439679666; 0; false
java.util.ArrayList getStageProtectListFromPkg(String str, int i); -436088317774587330; 0; false
java.util.ArrayList getTradeOffer(String username); 7858363522646208130; 0; false
java.util.ArrayList levelRewardsList(int projectId, int levelId); -2729185029386416243; -1; false
java.util.ArrayList matchesList(int roundNumber); -4880504937491147624; -1; false
java.util.ArrayList matchesListUpTo(int roundNumber); 4430208488584170271; -1; false
java.util.ArrayList my_auctions(java.util.LinkedHashMap data, String username); 629997289038224572; 0; false
java.util.ArrayList myProjectsList(String email); -6153915068132717063; 0; false
java.util.ArrayList projectLevelsList(Integer projectId); -5092426978582728564; 0; false
java.util.ArrayList queryCreditRecord(String userID); -3587598139662056077; 0; false
java.util.ArrayList requestFriendList(int id); 6524726257742862103; -1; false
java.util.ArrayList search_auction(java.util.LinkedHashMap data); -2519423417437664888; 0; false
java.util.Calendar[] calendarArrayTest(java.util.Calendar v[]); -5701322770839092705; 0; false
java.util.Calendar[][] calendarMultiArrayTest(java.util.Calendar[][] v); 7338799608609945784; 0; false
java.util.Calendar calendarTest(java.util.Calendar v); -8441185369482663788; 0; false
java.util.Calendar getCalendar(String calName); -3036328226999443398; 0; false
java.util.Collection generateReport(String sql); -7993478798316281156; 0; false
java.util.Collection getAccConfigRuleWhereClause(String where); 6806761442629330140; 0; false
java.util.Collection getAccEventConfigWhereClause(String where); -4292736918125477073; 0; false
java.util.Collection getAccEventLinkonrule(int ruleId); 4671564297692867638; -1; false
java.util.Collection getAccEventLinkonWhereClause(String where); 4030127085659066813; 0; false
java.util.Collection getAction(String tradeStatus); -2388461719808679312; 0; false
java.util.Collection getAllActionsOnStatus(String tradeStatus); 88500425211095831; 0; false
java.util.Collection getAuditedTrade(int tradeID); 9050560568413327687; -1; false
java.util.Collection getChildTrades(int parentID); -305088979002935468; -1; false
java.util.Collection getCoupon(int productID); 4967925412847084822; -1; false
java.util.Collection getCustomTransferRule(int tradeID); -5964745306343909827; -1; false
java.util.Collection getDetailsJob(int jobid); 970377922800921429; -1; false
java.util.Collection getEnvAspTree(String activityID, String classID); 82094290984034098; 0; false
java.util.Collection getFTDReport(String sql); 3843988036121371422; 0; false
java.util.Collection getFutureContract(String productName); -6299046861944428417; 0; false
java.util.Collection getFuturetContract(int productID); -8857290800738802917; -1; false
java.util.Collection getFXPosition(String currencyPair, int bookID); 7320972984192347729; 0; false
java.util.Collection getHosts(long since); -2260873190612338264; -1; false
java.util.Collection getHosts(long since, String type); 1065751622547879986; 8; false
java.util.Collection getHosts(long since, String type, String path); -1383506364826368279; 8; false
java.util.Collection getLiqPosition(int posID); 4077677514208198328; -1; false
java.util.Collection getNettedTransfers(int nettingTransferID); 2725204771169776082; -1; false
java.util.Collection getNettingConfigOnCounterParty(int counterPartyId); -5437244331722769555; -1; false
java.util.Collection getNettingConfigOnWhere(String where); 4201124896593071953; 0; false
java.util.Collection getOnlyAction(int transferID); -8781567163581204005; -1; false
java.util.Collection getOpenPosition(int positionID); -4309477002199819241; -1; false
java.util.Collection getOpenPositionLIFO(int positionID); -2220427905246319911; -1; false
java.util.Collection getOpenPositionOnWhere(String where, String criteria); -2626669881471491456; 0; false
java.util.Collection getPaths(long since); 8060068615802967472; -1; false
java.util.Collection getPaths(long since, String type); 2800745871136490118; 8; false
java.util.Collection getPosting(int postingID); 4680776661001681295; -1; false
java.util.Collection getPostingonWhereClause(int tradeid, String eventType); 7135196144149556023; 4; false
java.util.Collection getPostingonWhereClause(String where); 4506187947878966266; 0; false
java.util.Collection getRulesLinkonFolders(String where); 2978561675180439625; 0; false
java.util.Collection getSummaryEfforts(int nProjectID, String arrProjectIDs, int nStatus, String strFrom, String strTo, int nReportType, int type, String strDeveloperID); -5647163329920338039; 4; false
java.util.Collection getSwiftBICData(String sql); -5261010824146068782; 0; false
java.util.Collection getTaskOnTrade(int trade); -8142034059400505741; -1; false
java.util.Collection getTaskOnTransfer(int transfer); 3109800092382034831; -1; false
java.util.Collection getTimeSheetDummyList(int nDevID); 8923919608698509377; -1; false
java.util.Collection getTimeSheetList(String sIDTimeSheetList); 1795009117316834054; 0; false
java.util.Collection getTradesforReport(String sql); -6943974128247155351; 0; false
java.util.Collection getTransferOnTrade(int tradeID); 872307190233930602; -1; false
java.util.Collection getTransferOnTradeWithNoCancelStatus(int tradeID); -366763945266565489; -1; false
java.util.Collection getTypes(long since); 5485709280956283909; -1; false
java.util.Collection getTypes(long since, String type); -8324144635424402260; 8; false
java.util.Collection getUnRealisedPosition(int posID); -5989681200821378160; -1; false
java.util.Collection getVarReport(String sql); -8515050172876515137; 0; false
java.util.Collection listAllOrderBy(String orderByStmt); 1349436195562906031; 0; false
java.util.Collection queryWhere(String boObjectName, String where); -4544144783720397827; 0; false
java.util.Collection selectAccessFunction(String where); -5074741020546850432; 0; false
java.util.Collection selectAccessWindow(String where); -8989290092505414981; 0; false
java.util.Collection selectALLData( String beanName); -4717097464491196142; 0; false
java.util.Collection selectALLWindowSheet(); 8065930450896687616; -99; true
java.util.Collection selectforOpen(String productype); 5477202568692019976; 0; false
java.util.Collection selectKeyColumns(String columnNames, String beanName); -7030810786988639321; 0; false
java.util.Collection selectKeyColumnsWithWhere(String columnNames, String where, String beanName ); 7344053707167017072; 0; false
java.util.Collection selectLEContactOnWhereClause(String whereClause); -6805199308205993806; 0; false
java.util.Collection selectLEonWhereClause(String whereClause); 1620016817542010349; 0; false
java.util.Collection selectTaskWhere(String sql); 1520861110497157199; 0; false
java.util.Collection selectWFWhere(String sql); 2562041054528236180; 0; false
java.util.Collection selectWhereAttribute(String sql); 3357694467852406001; 0; false
java.util.Collection selectWhere(String sql); -6328560719134546484; 0; false
java.util.Collection selectWhere( String where, String beanName); 955915607153441905; 0; false
java.util.Collection selectWhereTask(String whereClause); -2337268008318666945; 0; false
java.util.Collection selectWindowSheet(String windowName); -5187822950907762929; 0; false
java.util.Collection selectWindowSheet(String windowName, String designType); -3429803375345338453; 0; false
java.util.Collection selectWindowTableModel(String windowName); -2338392989437268360; 0; false
java.util.concurrent.ConcurrentHashMap getFlowDeviceIfHash(String deviceIp); -2110000044575222627; 0; false
java.util.HashMap getAllListsForElec(int ID); 4507708456755174123; -1; false
java.util.HashMap getAllTermsFromOntology(java.lang.String ontologyName); -4564636336930986614; 0; false
java.util.HashMap getAvailableElections(int port); 3628809832465349032; -1; false
java.util.HashMap getBoletim(int cc, int e); -7379707357030327849; -1; false
java.util.HashMap getChildrenFromRoot(java.lang.String rootTermId, java.lang.String ontologyName, java.util.Vector childrenIds); 1166156483820137184; 0; false
java.util.HashMap getInitiationParameterMap(String pvdid); 4000613534226091819; 0; false
java.util.HashMap getListCount(int ID); 4089492595166668548; -1; false
java.util.HashMap getLists(int ID); 7912820622433394906; -1; false
java.util.HashMap getPrefixedTermsByName(java.lang.String partialName, boolean reverseKeyOrder); -6215260922905414272; 0; false
java.util.HashMap getRootTerms(java.lang.String ontologyName); 1550870152342661928; 0; false
java.util.HashMap getTermChildren(java.lang.String termId, java.lang.String ontologyName, int distance, int[] relationTypes); 3745061412161475332; 0; false
java.util.HashMap getTermMetadata(java.lang.String termId, java.lang.String ontologyName); -4728333778178083321; 0; false
java.util.HashMap getTermParents(java.lang.String termId, java.lang.String ontologyName); -3341544209055210447; 0; false
java.util.HashMap getTermRelations(java.lang.String termId, java.lang.String ontologyName); -5543275803778278725; 0; false
java.util.HashMap getTermsByExactName(java.lang.String exactName, java.lang.String ontologyName); 3333188660608441880; 0; false
java.util.HashMap getTermsByName(java.lang.String partialName, java.lang.String ontologyName, boolean reverseKeyOrder); 7595122505270368662; 0; false
java.util.HashMap getTermXrefs(java.lang.String termId, java.lang.String ontologyName); -4000241408432773854; 0; false
java.util.HashMap teamablePlayersHashMap(int roundNumber); 5266741328026557565; -1; false
java.util.Hashtable getActivityDetails(String defVerId, String tracingTag); 3584374758200681289; 0; false
java.util.Hashtable getActivityInstanceDetails(String instanceId, String tracingTag); 5780533359637672117; 0; false
java.util.Hashtable getParametros(String query); 3044799480721307228; 0; false
java.util.Hashtable importProcessAliasCheck(java.io.InputStream is); 3161842125372350876; 0; false
java.util.Hashtable listProcessVariableValues(String instanceId); 1192048728363866500; 0; false
java.util.List[] executeQuery(String[] sqlQuery); 4529769671132643781; 0; false
java.util.List executeQuery(String sqlQuery); -8478996095988372847; 0; false
java.util.List[] executeQuery(String[] sqlQuery, Object[][] params); 3882534464946996738; 0; false
java.util.List executeQuery(String sqlQuery, Object[] params); -8863850648083066130; 0; false
java.util.List getAllCell(int userId, String pkg); -5134360617007218556; 4; false
java.util.List getAnswersByQID(int id); 7699581921003157217; -1; false
java.util.List getAppAssociatedProcess(int i); 3994627300069177306; -1; false
java.util.List getAppAssociatedProcess(String str); 5868320652422341039; 0; false
java.util.List getAppTasks(String callingPackage); 7935785249825126152; 0; false
java.util.List getArchive(Class objectClass, Integer objectid); 9050404511028176209; 0; false
java.util.List getBuffsFromStorage(int cid); 6834504355823280084; -1; false
java.util.List getCamposAll(long limit, long offset); 6294557421870628372; -1; false
java.util.List getCamposPK(java.math.BigDecimal idcampo); -4921357396443883790; 0; false
java.util.List getComentInfo(String bd_id); 6985809704158751753; 0; false
java.util.List getComisionesMozos(String sucursal); -5803326752216964132; 0; false
java.util.List getCooldownsFromStorage(int chrid); 2110206548544150577; -1; false
java.util.List getCosmetics(int playerNumber, int lobbyID); 5595170899531062473; -1; false
java.util.List getCustomerCarReservations(int xid, String custName); 1092843388417503363; 4; false
java.util.List getCustomerFlightReservations(int xid, String custName); 6694489201432763887; 4; false
java.util.List getCustomerRoomReservations(int xid, String custName); 5127299637941523816; 4; false
java.util.List getData(Class objectClass, Integer[] ids, String[] fields); 6130181258582151536; 0; false
java.util.List getData(Class objectClass, Integer[] ids, String[] fields, String[] fieldsOrderBy); 5868299356308489989; 0; false
java.util.List getData(Class objectClass, String[] fields); -6328612633173004895; 0; false
java.util.List getData(Class objectClass, String[] fields, String[] fieldsOrderBy); 1697013238241285552; 0; false
java.util.List getEmpleadosBySucursal(String nombreSucursal); 2077824593922481628; 0; false
java.util.List getExtractedSchemeCard(String clientname); -2241207416414313039; 0; false
java.util.List getFile(String id); 7516608761294168008; 0; false
java.util.List getGraficoAll(long limit, long offset); -7747278205770015746; -1; false
java.util.List getGraficoPK(java.math.BigDecimal idgrafico); 3503859936732357281; 0; false
java.util.List getGrupo(long idGrupo); 7343274259771098504; -1; false
java.util.List getGruposAll(int limit, long offset); -2846650073580060004; -1; false
java.util.List getHours(int id); -8565405383502476392; -1; false
java.util.List getInstalledApps(int flags); -470971564926404562; -1; false
java.util.List getInvitations(String identifiant); 6407958432075091883; 0; false
java.util.List getItems(int id); -5261049245414734794; -1; false
java.util.List getLastEventTypesForHost(long since, String host); 5340328705756265680; 8; false
java.util.List getLastEventTypesForPathWithType(long since, String path, String type); 932667216956328801; 8; false
java.util.List getLastEventTypesForType(long since, String type); 1545517005576723047; 8; false
java.util.List getLesPionsRestants(String identifiant); 4666779583942454685; 0; false
java.util.List getListePionsDepart(String id); -7260526042631312550; 0; false
java.util.List getNeighboringCell(int userId, String pkg); 6245049407714513340; 4; false
java.util.List getOwnedItems(int id, String type); -5794211422921515795; 4; false
java.util.List getParametros(java.util.Hashtable parametros); -7687171786676932375; 0; false
java.util.List getParametrosPK(java.math.BigDecimal idparametro); 789781463934656284; 0; false
java.util.List getParametrosPK(String parametro); 2139994087129496792; 0; false
java.util.List getPlayersinmymatch(String clientname); 7202578795136604269; 0; false
java.util.List getPossibleActions(String clientname); -6245936156044487066; 0; false
java.util.List getPrivateGoalCard(String clientname); 6948804221143275336; 0; false
java.util.List getProcessPkgList(int pid); -7710007177628736204; -1; false
java.util.List getPublicGoalCards(String clientname); -3043025177566105576; 0; false
java.util.List getQuestByLvl(double level); -2674376305694708918; -1; false
java.util.List getQuestionsByTheme(int id); 4107997119280636486; -1; false
java.util.List getRanking(String clientname); -5029619236828335634; 0; false
java.util.List getReportesAll(int limit, long offset); -3769729364231226864; -1; false
java.util.List getReportesPK(long idReporte); -381361633386086225; -1; false
java.util.List getReportesUsuario(long idusuario); 9122745978865947918; -1; false
java.util.List getSchemeCardsoftheotherPlayers(String clientname); 4330451920121077849; 0; false
java.util.List getSchemeCard(String clientname); 4444019292027922761; 0; false
java.util.List getServices(int maxNum, int flags); -1093325279943611013; -1; false
java.util.List getSharedLibraries(String pkgName); 2179947007595254860; 0; false
java.util.List getStudStat(int idstudent); 4555564595282793076; -1; false
java.util.List getSubjectByName(String string); -7550893904447412428; 0; false
java.util.List getTablasAll(int limit, long offset); -3151843421132456654; -1; false
java.util.List getTablasPK(long idTabla); 4559543972770354008; -1; false
java.util.List getTasks(int maxNum, int flags); -2787648258993930640; -1; false
java.util.List getTeamChat(String tm_id); -3173304575640686759; 0; false
java.util.List getThemeListBySubj(int id); -8748578615350726308; -1; false
java.util.List getToolCards(String clientname); -5316369929561883658; 0; false
java.util.List getUsuario(long idUsuario); 8684457044695785954; -1; false
java.util.List getUsuariosAll(int limit, long offset); -3460255644956821127; -1; false
java.util.List getValidarUsuario(String usuario, String password); -6539012847480873197; 0; false
java.util.List getVarsValues(java.util.List varNames); 9019237301094671480; 0; false
java.util.List memList(String tm_id); -4579756071699695377; 0; false
java.util.List mesasDisponibles(String sucursal, int cantPersonas); -740215316836147931; 0; false
java.util.List mesasOcupadas(String sucursal); 3891876907008116058; 0; false
java.util.List obterHistorico(String idNota); -4974619773719865307; 0; false
java.util.List queryDuration(int dBegin, int dEnd); -5385783806586620221; -1; false
java.util.List queryRanking(int rBegin, int rEnd); 2568209980368829986; -1; false
java.util.List querySharedPackages(String packageName); -5073273402929142528; 0; false
java.util.List queryTitle(String pat); -5780083466329770047; 0; false
java.util.List queryYear(int yBegin, int yEnd); 2939195128888932737; -1; false
java.util.List search(String id, String user); 7641652855372758988; 0; false
java.util.List searchStudByFIO(String[] s); 5366246939737754063; 0; false
java.util.List searchStudByNomSvid(String s); 3401550789089661152; 0; false
java.util.List selectMem(String values); -3955431271301498788; 0; false
java.util.List setVarsValues(java.util.List varNames, java.util.List values); 3164985570227893915; 0; false
java.util.List siteSearch(String ip, int manufacturer); 5317776396606018374; 0; false
java.util.List sucheAuftraege(int RechnungsNr); -2352154097448853093; -1; false
java.util.List sucheKunden(String name); 1735193668205977410; 0; false
java.util.List sucheProdukt(String name); 6610884253123030581; 0; false
java.util.List topologicalLinkFound(java.util.List siteInsts, int netWorkId, java.util.List seg); -3801551862721906462; 0; false
java.util.Map getFiledColumns(Class objectClass); 6185055233965987678; 0; false
java.util.Map getJson(Class objectClass, Integer id); 7339462084680833711; 0; false
java.util.Map getLastArchive(Class objectClass, Integer objectid); 447827844164706046; 0; false
java.util.Map getLastValuesForHost(long since, String host); 367229211257753725; 8; false
java.util.Map getLastValuesForHost(long since, String host, String eventType); 5333708915333920295; 8; false
java.util.Map getLastValuesForPathWithType(long since, String path, String type); -4748488034587689348; 8; false
java.util.Map getLastValuesForPathWithType(long since, String path, String type, String eventType); -4449744714469469319; 8; false
java.util.Map getLastValuesForType(long since, String type); -5460214557636506671; 8; false
java.util.Map getLastValuesForType(long since, String type, String eventType); -289312555524063797; 8; false
java.util.Map getMyInvitations(String login); -8197751758774542252; 0; false
java.util.Map getQueryColumns(Class objectClass); 4533377949667755140; 0; false
java.util.Map nextStepGlobalPersonSearch(String idString); -2454406096879282907; 0; false
java.util.Map object(Class objectClass, Integer id); -1145735174087779593; 0; false
java.util.Map[] objects(Class objectClass); 827480079944014740; 0; false
java.util.Map[] objects(Class objectClass, Integer[] ids); 4544704131742710447; 0; false
java.util.Map[] objects(Class objectClass, Integer[] ids, String[] fieldsOrderBy); 4869389910602912925; 0; false
java.util.Map[] objects(Class objectClass, String[] fieldsOrderBy); 3522687934176614363; 0; false
java.util.Vector getB2BConfig(int bookid, String currencypair); -1471699817280420353; 4; false
java.util.Vector getBookWhere(String sql); -2162275013357717581; 0; false
java.util.Vector getMirrorTrades(int mirrorID); -8182952096518587384; -1; false
java.util.Vector getPositionOnWhere(String where, String criteria); 3269704472630773255; 0; false
java.util.Vector getSearchColumn(String type); 2560648413683338751; 0; false
java.util.Vector getTradeRollBackHierarchies(int tradeID); 2322562057005534938; -1; false
java.util.Vector getTradeRollOverHierarchies(int tradeID); -1371696085556061076; -1; false
java.util.Vector obterEmails(String cnpj); -6415343554719806878; 0; false
java.util.Vector obterNotas(String idLote); -1287652516822804639; 0; false
java.util.Vector saveBatchSplitTrades(java.util.Vector splitTrades, java.util.Vector message); 7008105281607434048; 0; false
java.util.Vector saveMesage(java.util.Vector mess, String sqlType); -3396508895594655512; 0; false
java.util.Vector SDIWhere(String sql); 8469132869932617010; 0; false
java.util.Vector selectB2BConfig(int b2bConfigID); -5542103266695602326; -1; false
java.util.Vector selectFeesonTrade(int id); -3249814024274588225; -1; false
keggapi.Definition[] get_genes_by_ko_class(java.lang.String class_id, java.lang.String org, int offset, int limit); -7903377988237529767; 0; false
keggapi.Definition[] get_genes_by_ko(java.lang.String ko_id, java.lang.String org); 7581327851795968116; 0; false
keggapi.Definition[] get_genes_by_motifs(java.lang.String[] motif_id_list, int offset, int limit); -2481097983485920027; 0; false
keggapi.Definition[] get_ko_by_ko_class(java.lang.String class_id); -5668363970179268894; 0; false
keggapi.Definition[] list_ko_classes(java.lang.String class_id); -7154487664356596223; 0; false
keggapi.Definition[] list_pathways(java.lang.String org); -5792344784394733565; 0; false
keggapi.LinkDBRelation[] get_linkdb_between_databases(java.lang.String from_db, java.lang.String to_db, int offset, int limit); 3154557408879025413; 0; false
keggapi.LinkDBRelation[] get_linkdb_by_entry(java.lang.String entry_id, java.lang.String db, int offset, int limit); -8953272457202301269; 0; false
keggapi.MotifResult[] get_motifs_by_gene(java.lang.String genes_id, java.lang.String db); -4834101489228585497; 0; false
keggapi.PathwayElement[] get_elements_by_pathway(java.lang.String pathway_id); -4985704675728685971; 0; false
keggapi.PathwayElementRelation[] get_element_relations_by_pathway(java.lang.String pathway_id); 8470207229532093015; 0; false
keggapi.SSDBRelation[] get_best_best_neighbors_by_gene(java.lang.String genes_id, int offset, int limit); -3791477322445317137; 0; false
keggapi.SSDBRelation[] get_best_neighbors_by_gene(java.lang.String genes_id, int offset, int limit); 5019624997868332605; 0; false
keggapi.SSDBRelation[] get_paralogs_by_gene(java.lang.String genes_id, int offset, int limit); -214970375535868213; 0; false
keggapi.SSDBRelation[] get_reverse_best_neighbors_by_gene(java.lang.String genes_id, int offset, int limit); -5236043578614170502; 0; false
keggapi.StructureAlignment[] search_compounds_by_subcomp(java.lang.String mol, int offset, int limit); -7613080308136731487; 0; false
keggapi.StructureAlignment[] search_drugs_by_subcomp(java.lang.String mol, int offset, int limit); -8401688431145464676; 0; false
keggapi.StructureAlignment[] search_glycans_by_kcam(java.lang.String kcf, java.lang.String program, java.lang.String option, int offset, int limit); 301347052918332946; 0; false
long benchmark(String volId); 3051078997990005905; 0; false
long deposit(long amount); -2019128738032349243; -1; false
long getCacheQuotaBytes(String volumeUuid, int uid); -6677169438097130638; 0; false
long getCacheSizeBytes(String volumeUuid, int uid); -4009653208949841567; 0; false
long getFreeMemory(String address); -4369126631101875567; 0; false
long getFreeVirtualMemory(String address); -7676076185722241332; 0; false
long[] getProcessPss(int[] pids); -7567911369127398627; 0; false
long[] getThreadIntegerRegisterSet(long addrOrId, boolean isAddress); 415307418896960803; -1; false
long getTotalEntidad(String entidad); -6362755681441383742; 0; false
long getTotalMemory(String address); 492074860174150093; 0; false
long getTotalVirtualMemory(String address); -9080061786391515673; 0; false
long getUsedMemory(String address); 7692294998657053013; 0; false
long getUsedVirtualMemory(String address); -6087603900235160769; 0; false
long inputDispatchingTimedOut(int pid, boolean aboveSystem); 8394582749567054436; -1; false
long login(java.util.HashMap loginProperties); -994223686024452833; 0; false
long[] longArrayTest(long[] v); 7254422535437175092; 0; false
long[][] longMultiArrayTest(long[][] v); -4879163413193006468; 0; false
long longReturn(long l); 6961719617257384736; -1; false
long longTest(long v); 6346303855991631126; -1; false
long lookupInProcess(String objectName, String symbol); -7458202875634685637; 0; false
long queryMemoryOverhead(long memorySize, int videoRamSize, int numVcpus); 6655491862679954646; -1; false
long queueExecution(long sessionId, int executionDefId, java.lang.String version, java.lang.String build, java.lang.String execServerHostName, int execServerPort, java.util.HashMap runProperties); 4464828688787240673; 12; false
long withdraw(long amount); 7509278291436169547; -1; false
Object getArray(int type, int depth, String[] heads); 8585293549185659462; 8; false
Object getVarValue(String varName); -7224961888144731600; 0; false
Object[] objectArrayReturn(Object[] o); 4695976066337344237; 0; false
Object objectReturn(int i); -6033657725953521815; -1; false
Object objectReturn(Object o, int i); -2544771966005853462; 0; false
Object pingCMD(String neIP); 4872013474436416458; 0; false
Object[][] retrieveRows(String resultSetID, int from, int to); 2542365400998742318; 0; false
Object setVarValue(String varName, Object value); -2448518831501570541; 0; false
org.hupo.psi.mi.psicquic.ols.soap.model.DataHolder[] getTermsByAnnotationData(java.lang.String ontologyName, java.lang.String annotationType, java.lang.String strValue, double fromDblValue, double toDblValue); -3617453288349016026; 0; false
org.purl.sword.server.fedora.api.Datastream[] getDatastreamHistory(java.lang.String pid, java.lang.String dsID); 7203794746373668611; 0; false
org.purl.sword.server.fedora.api.Disseminator[] getDisseminatorHistory(java.lang.String pid, java.lang.String dissID); 4247632759541613962; 0; false
short[] shortArrayTest(short[] v); -6419956319061254889; 0; false
short[][] shortMultiArrayTest(short[][] v); 8418074561433311959; 0; false
short shortReturn(short s); 4569407075392084378; -1; false
short shortTest(short v); -6045852878950848273; -1; false
String acceptReg(int regNum); -5609250638371311369; -1; false
String addFolder(String folderName, String parentFolder); 2421528929301856196; 0; false
String addFolder(String folderName, String parentFolder, String comCode); 1895145071782522990; 0; false
String addGothaRMIClient(String strClient); 2078273613404403683; 0; false
String addYAWLService(String serviceStr, String sessionHandle); -3851907933609748629; 0; false
String[] affichediag(int i); 6164037651712480769; -1; false
String ajouterTableauBord(String[] capteurList); 1289364320962589060; 0; false
String askToPlayerForEffectToCopy(java.util.List lcards); 4793435366419393029; 0; false
String authenticate(String username, String password); -3388743342204244461; 0; false
String[] blockedBy(String pathStr); 1180709577711185143; 0; false
StringBuffer updateApplianceConfigure(java.util.Properties confProps); -2687444429541419169; 0; false
String camposDelete(java.math.BigDecimal idcampo); -2568412141327158911; 0; false
String cancelWorkItem(String id, String data, String fail, String sessionHandle); 63726477525212469; 0; false
String cerrarSesion(String nick); 288326834766681421; 0; false
String[] changeDirAndListContent(String path); -3306845158834886815; 0; false
String changePassword(String password, String sessionHandle); -5551492747410571212; 0; false
String chatTeamId(String tm_id); -4973590841083322748; 0; false
String checkElegibilityToAddInstances(String workItemID, String sessionHandle); 719774466618019844; 0; false
String checkingIsEmailBusy(String email); -7455731653505616476; 0; false
String checkOut(String username, String pswd); -2952835877651210035; 0; false
String chuanHoaDanhTuRieng(String str); 3149475030149237574; 0; false
String ChuanhoaSpace(String s); 6919932183622044082; 0; false
String chuanHoa(String str); -1282650896188529658; 0; false
String completeWorkItem(String workItemID, String data, String logPredicate, boolean force, String sessionHandle); 8762135636343441823; 0; false
String connect(String userID, String password, long timeOutSeconds); 324578444648653435; 0; false
String consoleExecuteCommand(String cmd); -4650928645268272487; 0; false
String consultarNota(String idNota); -5958598814715595590; 0; false
String consultarNotaXml(String idNota); 6260415446359814081; 0; false
String councilRequest(Integer number); 9033095698924139622; 0; false
String createBoardingHouse(String name, int cap); -8487287890057009434; 0; false
String createGame(String gameID, String creatorName, int numPlayers); 4481068517976218838; 0; false
String createNewInstance(String workItemID, String paramValueForMICreation, String sessionHandle); -5698257412398839392; 0; false
String dataDownLoadActionPerformed(java.util.List siteInstList, int[] a); 6966739475299017971; 0; false
String declineReg(int regNum); -6760938277757029757; -1; false
String describeAllWorkItems(String sessionHandle); -8170592854621794756; 0; false
String describeVarInfo(String varName); -8661040005201061578; 0; false
String describeVars(java.util.List varNames); 2486333683788805811; 0; false
String describeVar(String varName); 2702286087944070869; 0; false
String enviarMensajes(String msj); 3760299440434822316; 0; false
String fileInfo(String username, String filename); -4882556138508634517; 0; false
String findDepartment(String dep); 4684310089305557342; 0; false
String findDep(int port); -6523001617191757205; -1; false
String findFaculty(String f); 876983070274945115; 0; false
String forgetPassword(String mail, String q, String answer); 7185635700981239678; 0; false
String geefWW(String a); 4567024379535930343; 0; false
String getActivityStatus(String instanceId, String tracingTag); 3911512131812990868; 0; false
String getAliasByPackage(String str); 1522791325666259271; 0; false
String getanim(String nom); 282167546368152194; 0; false
String getAppProcessName(int pid); 1156892681910340599; -1; false
String getAttributeName(int index); 6731285840048568082; -1; false
String getAttributeNamespace(int index); 5487172491721956156; -1; false
String getAttributePrefix(int index); -7177237314580808267; -1; false
String getAttributeType(int index); -5279567931275886845; -1; false
String getAttributeValue(int index); -2226758425469430332; -1; false
String getAttributeValue(String namespace, String name); 7325102252537411198; 0; false
String getAvailableWorkItemIDs(String sessionHandle); -1113841435578581840; 0; false
String getBankName(int i); 7720321674061851463; -1; false
String getBoardInfo(String userId); -1611123680933570258; 0; false
String getBoatNameById(java.util.UUID id); 3645915318560383580; 0; false
String getBoatName(java.util.UUID id); -785073967683491042; 0; false
String getBuildProperties(String sessionHandle); -4882890575695133005; 0; false
String getCallingPackage(android.os.IBinder token); 7513287207562083579; 0; false
String getCallingPackageForBroadcast(boolean foreground); -4219018159057823009; -1; false
String getCallingPackage(int userId, android.os.IBinder token); -5727607951777952485; 4; false
String getCallSign(java.util.UUID id); 5389350630693782924; 0; false
String getCashier(int i); -4320075188741707303; -1; false
String getChildrenOfWorkItem(String workItemID, String sessionHandle); 880556147331770872; 0; false
String getClientPassword(String userID, String sessionHandle); 4792334427957810704; 0; false
String getCodeNameOfCard(String gameID, String playerName, int i); -5760333832995433906; 0; false
String getConstructor(java.util.UUID id); -2781233520988342337; 0; false
String getDepartment(int CC); 9149518801275820576; -1; false
String getDossierSuivi(String nom); -2679434352178527378; 0; false
String GetDunMap (String NomJ, String NomD); 906336203300939964; 0; false
String getExternalDBGateways(String sessionHandle); 6480207573899883734; 0; false
String getField(String field); -4167533601442150668; 0; false
String[] getFilesInDirectory(String path); 3105220398358335037; 0; false
String getFilesTree(String path); 4676762962486929340; 0; false
String[] getHead(String pid); -8393612129840603272; 0; false
String getHomePort(java.util.UUID id); -3452811724935770545; 0; false
String getInitialPackage(int pid); -2898885820464847266; -1; false
String getInsurance(java.util.UUID id); -4003622780926847130; 0; false
String getIP(int channel); -8831524668397077742; -1; false
String getLatestSpecVersion(String id, String sessionHandle); 3649463064749971420; 0; false
String getLaunchedFromPackage(android.os.IBinder activityToken); -794799319318499993; 0; false
String getlogdetail(String storeName); 888077929663714679; 0; false
String getMerchCategoryCode(int i); -7025949902395167803; -1; false
String getMerchEngName(int i); 2221073041717622762; -1; false
String getMerchNumber(int i); -6667734500323800664; -1; false
String getMotor(java.util.UUID id); 8896253010874682167; 0; false
String getMountedObbPath(String rawPath); -3523440893692918767; 0; false
String getNameForUid(int uid); 4741123067388947579; -1; false
String getNamespacePrefix(int pos); -6738376592705517506; -1; false
String getNamespace(String prefix); 2827629966203865425; 0; false
String GetNewMsgs(String nomJ, String NomD, int x, int y, int size); 3533684972271291833; 0; false
String getOwner(java.util.UUID id); 1658204182590691104; 0; false
String getPackageForToken(android.os.IBinder token); 3487858771151319887; 0; false
String getPackageForToken(int userId, android.os.IBinder token); -6243419728088635087; 4; false
String[][] getPackages(boolean nnn, boolean www, boolean sss, boolean eee); -5307785145854878294; -1; false
String[] getPackagesForUid(int vuid); 461583989859381233; -1; false
String getPersonBoatNameById(String id); 8403473202349710040; 0; false
String[][] getPrevTours(String un); -7793990526509500518; 0; false
String getProcessVariableInXML(String instanceId, String scope, String varKey); -1422498523502620900; 0; false
String getProperty(String property); 77249282285080913; 0; false
String getRegisterNr(java.util.UUID id); 7818482478020770847; 0; false
String getResource(String resourceId); -5864298939810322715; 0; false
String getRigging(java.util.UUID id); 2582799695358346820; 0; false
String getRoundDicepool(String clientname); -1305435577785297166; 0; false
String getRoundTrack(String clientname); -2353261927173892068; 0; false
String getSailSign(java.util.UUID id); -5798480526577468233; 0; false
String getSecureContainerFilesystemPath(String cid); 52726084590845678; 0; false
String getSecureContainerPath(String id); -5565552124627205339; 0; false
String getServerIP(int i); -3565770602975343617; -1; false
String getSharedFolder(String address); -4284890886789700722; 0; false
String[] getSidebar(String pid); -4869764167468109807; 0; false
String getSpecificationList(String sessionHandle); -9145588568292738340; 0; false
String getStartingDataSnapshot(String workItemID, String sessionHandle); -2721018709519713849; 0; false
String getString(java.util.UUID id); -5094367331870161537; 0; false
String get(String property); 3304158814484152378; 0; false
String getTabBordName(String id); 6079667058859341659; 0; false
String getTerminalID(int i); -4809807557366799997; -1; false
String getToolCardDice(String clientname); -8054501655808738589; 0; false
String getType(java.util.UUID id); 5399333947813366755; 0; false
String getWorkItemOptions(String workItemID, String thisURL, String sessionHandle); 8696445993132833934; 0; false
String getWorkItemsForService(String serviceURI, String sessionHandle); 7560468667187956916; 0; false
String getWorkItem(String workItemID, String sessionHandle); -445575779696163661; 0; false
String getWorkItemsWithIdentifier(String idType, String itemID, String sessionHandle); 6518499781496872204; 0; false
String getYachtclub(java.util.UUID id); 3067322340873787880; 0; false
String getYAWLServiceDocumentation(String yawlServiceURI, String sessionHandle); 7085638196674988751; 0; false
String getYAWLServices(String sessionHandle); 6126122050370729107; 0; false
String graficoDelete(java.math.BigDecimal idgrafico); -5548843811347818364; 0; false
String grupoDelete(long idgrupo); -7032716513048579651; -1; false
String idReturn(String email, String name); -4204540800709576812; 0; false
String initializeProcessIfRequired(String defVerId, String instanceId); 2758767322381633737; 0; false
String initializeProcess(String defVerId); 5654592111609230148; 0; false
String initializeProcess(String defVerId, String instanceName); -126102861669879173; 0; false
String leerMensajes(String nick); 419798538270836016; 0; false
String listFiles(String username); 3613732248943628084; 0; false
String loadSpecification(String specification, String sessionHandle); -4415988807774691472; 0; false
String login_facebook(java.util.LinkedHashMap data); -8866701001695300248; 0; false
String[] lookupDesc(Object[] pkKeys); 6510651223762484256; 0; false
String MaSV_3SoCuoi(String a); 112175494376569297; 0; false
String obterTipoServico(String cnpj); -7835026315791034225; 0; false
String obterXml(String idNota); -376042411061770887; 0; false
String par2var(String parametro); 7222527351153713580; 0; false
String print(String filename, String printer, String username); 528216735961760969; 0; false
String printVarDependencies(String varName); 5109116463326895618; 0; false
String printVarsDependencies(java.util.List varNames); 4707740986150080555; 0; false
String printVars(java.util.List varNames); -3809336516210653015; 0; false
String printVar(String varName); 3190572390735820611; 0; false
String pwReturn(String email, String name, String id); -8542300979026461224; 0; false
String query(String table, String query, String query2); -7783707910032642798; 0; false
String queue(String username); 9110349990068738702; 0; false
String readConfig(String parameter, String username); 2316053176931093077; 0; false
String[] Recuperdate(int i); -2285464896517484675; -1; false
String[][] RecupereExamensPrescrit(int i); 3472814298131025230; -1; false
String[] RecupereExamen(String i); 8162504725836871189; 0; false
String[] RecupereLaborantin(String i); -5396351508325932226; 0; false
String[] RecupereMedecin(String i); 8078371064443114135; 0; false
String[] RecupereNom(int i); 4507045474915206691; -1; false
String[] recupernompat(int i); -4759066436793292247; -1; false
String register(String fName, String lName, String email, String phoneNum, String username, String pswd); 3127791935990952484; 0; false
String rejectAnnouncedEnabledTask(String itemID, String sessionHandle); 6223148721620003837; 0; false
String reportesDelete(long idreporte); 4615741647433728664; -1; false
String restart(String username); 3284679978470793816; 0; false
String restartWorkItem(String workItemID, String sessionHandle); 7098880500494473068; 0; false
String rollbackWorkItem(String workItemID, String sessionHandle); -1093442491292296472; 0; false
String runCommand(String[] args); -3476288922619196038; 0; false
String searchElectionName(int ID); 8550921867907716972; -1; false
String searchPerson(int cc); -3408399841715160916; -1; false
String selectName(String email); -3748744136855934659; 0; false
String selectSurname(String email); -1676879811623740889; 0; false
String selectTradeAttributesAsString(String tradeId); 3536921135632853521; 0; false
String setConfig(String parameter, String value, String username); -830848312847859599; 0; false
String setNotif(String notif); -6090748084172281305; 0; false
String shareSong(String username, int songID, String shared_username); -4699669803816276717; 0; false
String ShowPofDung (int NDung); -1022246153671128464; -1; false
String skipWorkItem(String workItemID, String sessionHandle); 1225937175346480716; 0; false
String[] sortir1(int i); -8366871259178421067; -1; false
String start(String username); 4320718420350105572; 0; false
String startWorkItem(String workItemID, String sessionHandle); 1242679720289602123; 0; false
String status(String username); 1923796253558461115; 0; false
String stop(String username); -8418919655356284076; 0; false
String stringTest(String v); -1321347711450640547; 0; false
String suspendWorkItem(String workItemID, String sessionHandle); 6190863752684239515; 0; false
String tablasDelete(long idtabla); 7896410863036316654; -1; false
String taskRboot(java.util.List siteInsts); 3504957252672626414; 0; false
String topQueue(int jobindex, String username); 2204898329951371349; 4; false
String unsuspendWorkItem(String workItemID, String sessionHandle); 8305322518974808729; 0; false
String uploadjar(byte[] fileContent, String name, String loadpath); -7976804134898717379; 0; false
String uploadLicenseFile(String licensePath, String licenseFile); 7677086313273446564; 0; false
String usuarioDelete(long idusuario); 8648365872573854289; -1; false
String viewProcessInstanceFlowChart(String instanceId, java.util.Map options); 2883118965468977619; 0; false
String votar(String[] listas, String input); -5887225651582730000; 0; false
String webdebugcase(String sign, String executor, String loadpath); 2634486768396769837; 0; false
String WhereIam (String NomJ); -1703341763731207625; 0; false
String WhoIsInMyRoom(String NomJ, String NomD, int x, int y); 725770744598624654; 0; false
String XepLoai(float diem); -2407890259709866107; -1; false
void abandonnerPartie(String identifiant); -5042972963399169043; 0; false
void abort(int id); -3747736329416363051; -1; false
void abreConta(int idConta); -7755458817089064012; -1; false
void acceptDeal(String activePlayer, String dealPartner); 8156184889723522911; 0; false
void acceptFile(String ip, int port, String fileName, String mail); 2060045860862403028; 0; false
void activarUsuario(java.lang.Long id, java.lang.String admin); -7261935294790462955; 0; false
void activityDestroyed(android.os.IBinder token); 2250902416846529904; 0; false
void activityPaused(android.os.IBinder token); 3423750539671728733; 0; false
void activityRelaunched(android.os.IBinder token); 6006455564446099314; 0; false
void activityResumed(android.os.IBinder token); -542404125746404322; 0; false
void activitySlept(android.os.IBinder token); -2193804822424529373; 0; false
void addAnimal(String nom, String maitre, String especee, String race); -5174277844211743832; 0; false
void addAttributeOptions(long sessionId, int projectId, java.lang.String attributeName, com.borland.sctm.ws.planning.entities.AttributeOption[] options); -4936827111139444768; 12; false
void addBoletoXML(String id, String xml); -7459113172463879805; 0; false
void addBuffsToStorage(int chrid, java.util.List toStore); -7024217758515968104; 4; false
void addCalendar(String calName, java.util.Calendar calendar, boolean replace, boolean updateTriggers); -8855049696886593738; 0; false
void addComment(java.lang.String in0, int in1, java.lang.String in2, int in3, boolean in4); 226608404955945769; 0; false
void addComment(String comment, int grade ); -7776919559334218031; 0; false
void addCooldownsToStorage(int chrid, java.util.List toStore); 2101840278905917861; 4; false
void addEvent(Class objectClass, String type, Integer[] ids); 6625212630553512920; 0; false
void addEvent(Class objectClass, String type, java.util.Map objectEventProperty, Integer[] ids); -2009629956626711727; 0; false
void addFile(String name, byte[] file, long imageLength, String latitude, String longitude, String email, String place); 3433839940556968276; 0; false
void AddFriend(String clientMail, String friendMail); 7121851203613149387; 0; false
void addManualTestStep(long sessionId, int testId, com.borland.sctm.ws.planning.entities.ManualTestStep step); -1645344790977581778; 12; false
void addMiniProgramShare(String str, String str2, String str3); -3311458161462824077; 0; false
void addNotificationAPArtie(String nomPartie, int modif); -759403044246196145; 0; false
void addPackageDependency(String packageName); 2279334713642129203; 0; false
void addPersonToList(int cc, int list_id); -6115178447973141736; -1; false
void addPollingTable(String initials, int port); 4205571839252239740; 0; false
void addSharedOwner(java.lang.String in0, int in1, java.lang.String in2); 8466210621091929723; 0; false
void addShipper(java.lang.String shipperSymbol, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NameAddress nameAddress); 7477587733100398993; 0; false
void addStageProtectInfo(String str, String str2, long j); 4466513019715516724; 0; false
void addTimeSheetDummyLine(int intTimeSheetID, String status); -452803621295794620; 4; false
void addToProtokoll(String kommentar, int protokollTyp); -7495071523806460694; 0; false
void addVisibleOutsidePackage(String pkg); 2367811466428766704; 0; false
void addWindowToken(android.os.IBinder arg0, int arg1); 5240569954016142437; 0; false
void addWindowToken(android.os.IBinder arg0, int arg1, int arg2); 9052614827684462638; 0; false
void adjustVolume(int direction, int flags, String packageName); 1925053652424542405; 8; false
void aduna(double x); 5185907303691998977; -1; false
void afficheErreur(String message); -3508092905413915328; 0; false
void afficherPropositionsPotDeVin(java.util.HashMap listePropositions); 1509390941281033090; 0; false
void alert(String msg); -8897669050465004220; 0; false
void analyseConnexionJoueurs(String nom); -7783977900115011877; 0; false
void answerTradeOffer(String username, java.util.ArrayList selectedHandcardIndices); 8341553181897718315; 0; false
void applyRegulatoryList(java.util.Vector appRegList); 2956736245385434709; 0; false
void appNotRespondingViaProvider(android.os.IBinder connection); -5263466359933013600; 0; false
void archiveItem(java.lang.String in0, int in1); -6293553754563569483; 0; false
void arg(byte arg); 5027408813835784265; -1; false
void arg(byte[] bArg); 3230870513415376086; 0; false
void arg(char[] cArg); -1413934607662572584; 0; false
void arg(char charArg); 8414344296319893864; -1; false
void arg(double doubleArg); -8052016417649821496; -1; false
void arg(float[] fArg); -1354517704844906111; 0; false
void arg(float floatArg); -7531390689079327758; -1; false
void arg(int intArg); 2855123849624236136; -1; false
void arg(long longArg); 1748168807824596065; -1; false
void arg(short shortArg); 8045927470588057717; -1; false
void arg(String[] sArg); -5373260743314473741; 0; false
void arg(String stringArg); -1521552308016297213; 0; false
void asignarEmpleadoSectorSucursal(Long idEmpleado, String sucursal, int numero); -7952600722134360821; 0; false
void asignarHorasTrabajo(int horas, Long trabajoId); -2646664116214476477; 4; false
void assignPatient(String firstName, String middleName, String lastName); -5971214642501891534; 0; false
void attachAgent(String s); -2482316453077204212; 0; false
void attachScsiLun(String lunUuid); -605623395066999604; 0; false
void backgroundResourcesReleased(android.os.IBinder token); -7288619318490375971; 0; false
void backupAgentCreated(String packageName, android.os.IBinder agent); 6382419821297467517; 0; false
void bedrijvenComplexActivate(int diefId, int kaartId1, int slachtofferId, int kaartId2); 4768535850481581468; -1; false
void bedrijvenComplexActivate(int spelerId); -6819281502560036957; -1; false
void beginAdUnitExposure(String str, long j); -4438990910068896723; 0; false
void bind(String key, java.io.Serializable obj); 6641008244266488037; 0; false
void blockFriend(String clientMail, String friendMail); 3175268990682299574; 0; false
void block(String pathStr, String username); -3069295283471266964; 0; false
void boostScreenBrightness(long time); 4836883958539336755; -1; false
void broadcastBase(String data); 5604100896931442304; 0; false
void broadcastFromParent(String data); 3570936827609884024; 0; false
void buyItem(int userID, int itemID); 6776922503813619744; -1; false
void cambiarPanel(String nick, int nuevoPanel); -3177563938726049989; 0; false
void cancelItemEdit(java.lang.String in0, int in1); 2586418115739832096; 0; false
void cancelOrder(Integer orderID, boolean twoPhase); 1222287339951031993; 0; false
void cerrarMesa(Long idMesaOcupacion, Long idFormaDePago); 5101086418850491478; 0; false
void changeBeurt(String sessionToken); 2320190047639186640; 0; false
void changeRank(int gid, int cid, int newRank); 792438301121295476; -1; false
void changeRankTitle(int gid, String[] ranks); 4400945627705257709; 4; false
void changeShipperSymbol(java.lang.String currentShipper, java.lang.String newShipper); 5995585103186316689; 0; false
void chatExit(String userId, int chatIdx); 3729804328272879088; 0; false
void checkFunctionWithArgCount(String f, int argCount); 329426063108410998; 0; false
void chooseAByePlayer(java.util.ArrayList alPlayers, int roundNumber); -1371839792685443962; 0; false
void clearFlowInterfaceHash(String deviceIp); 3828835253601014831; 0; false
void clearForcedDisplayDensity(int displayId); 3611428416591482999; -1; false
void clearForcedDisplaySize(int displayId); -2096948024804923585; -1; false
void clearInterfaceIndexMap(String deviceIp); -4661199733442830590; 0; false
void clearLastInputMethodWindowForTransition(android.os.IBinder arg0); 7517288974790371296; 0; false
void clientClose(int ID); -1488353285160343029; -1; false
void closeSystemDialogs(String reason); -2811365472413862630; 0; false
void completePeer(Long page, Long n); 9195295454874295248; 0; false
void confirm_opmode(boolean oc); -7208988360119114857; -1; false
void connectBT(String str); -3525506951483087928; 0; false
void connection(String login, String password); -1992033609837913443; 0; false
void connectOBD(String str); 2045783011609175935; 0; false
void copy(String fromPathStr, String toPathStr); 2624336040400979856; 0; false
void cpuBoost(int duration); -5427344613015603409; -1; false
void crashMiddleware(int mode); 7401666449119936322; -1; false
void crashResourceManager(String name, int mode); -833618530067685523; 0; false
void crash(String arg0); 7068055830890088810; 0; false
void createAttendees(com.granicus.xsd.Attendee[] attendeesData); 2696589888182136976; 0; false
void createClipGeneratedMinutesDocument(java.lang.String clipUid, java.lang.String name, java.lang.String templateUid, boolean isPublished, boolean isDefault); 2333091146609090275; 0; false
void createMotionActions(java.lang.String[] motionActions); 8918351866145609982; 0; false
void createNewGame(String login, boolean isPrivate); -1557891231200062189; 0; false
void criarDpec(String cnpj); 2597932223714227239; 0; false
void declineChat(String target, String namefrom); 2581110499406513555; 0; false
void deleteanimal(String nom); 6011356455675165134; 0; false
void deleteAttributeOptions(long sessionId, int projectId, java.lang.String attributeName, com.borland.sctm.ws.planning.entities.AttributeOption[] options); 1539164812271373065; 12; false
void deleteAttributes(long sessionId, int projectId, com.borland.sctm.ws.planning.entities.Attribute[] attributes); -8647418217274998826; 12; false
void deleteBoat(java.util.UUID id); 7408752100982973864; 0; false
void deleteBT(String str); 4240619414092657088; 0; false
void deleteCamera(int cameraID); 5068468698602726266; -1; false
void deleteClip(int clipID); 2428196740076494489; -1; false
void deleteComment(java.lang.String in0, int in1, java.lang.String in2); -8783602945176787302; 0; false
void deleteDia(String num); 4932059844723357390; 0; false
void deleteEvent(int eventID); 4422820721993667613; -1; false
void deleteFd(String fdRegnum); 7521792405866879014; 0; false
void deleteFile(java.lang.String in0, java.lang.String in1); 8854515383949615233; 0; false
void deleteFolder(int folderID); 8594911647501418227; -1; false
void deletegbk(String num); -7270077389372823369; 0; false
void deleteHistory(int i); -6564603615158894518; -1; false
void deleteHistoryItem(java.lang.String carrier, java.lang.String shipper, int historyItem); -3930539127331400290; 0; false
void deleteHistoryItems(java.lang.String carrier, java.lang.String shipper, int[] historyItems); -5195521690194437345; 0; false
void deleteimg(String num); -2606163509633122066; 0; false
void deleteItem(java.lang.String in0, int in1); -1926087379995093147; 0; false
void deleteList(int ID); 1662793663184618061; -1; false
void delete(long guidObject); -4309379989353443610; -1; false
void deleteManualTestStep(long sessionId, int testId, int stepPos); -17225537247435895; -1; false
void deleteMetaData(int metaDataID); -6490913162649564343; -1; false
void deleteMinutesDocument(java.lang.String UID); 470814652674150041; 0; false
void deleteMsg(String num); 2984396338402548381; 0; false
void deleteNotifications(java.lang.String[] notificationId); -2193643508384630493; 0; false
void deleteOBD(String str); 5809678408701288248; 0; false
void DeletePlayer(String NomJ, String NomD, int x, int y); -8420885882552372478; 0; false
void deleteServer(int serverID); 5547913353430316233; -1; false
void deleteShipper(java.lang.String shipper); -196867438601233550; 0; false
void delete(String username, String filename); -8808515898119201701; 0; false
void deleteTimeSheet(String strTimeSheetIDList); 4223557388050654017; 0; false
void deleteTopic(java.lang.String in0); -4406206175015120880; 0; false
void deleteTransmitItem(java.lang.String carrier, java.lang.String shipper, java.lang.String itemToDelete); -1708124071100438806; 0; false
void deleteTransmitItems(java.lang.String carrier, java.lang.String shipper, java.lang.String[] itemsToDelete); -6259213869347125267; 0; false
void deleteVffsVolumeState(String vffsUuid); 4035526760203366341; 0; false
void deleteVRP(String vrpId); 2979475431479159307; 0; false
void deregister(long eventID); -5710588273959340668; -1; false
void desactivarUsuario(java.lang.Long id, java.lang.String admin); -5634572996384602158; 0; false
void destroyMark(long mark); 8486987938091002316; -1; false
void destroyVffs(String vffsPath); -3491023360134485212; 0; false
void detachScsiLun(String lunUuid); 1357149523457714897; 0; false
void dialOut(String str); -7648930661709943308; 0; false
void dialOutSub(char c); -8077899661460903066; -1; false
void disableKeyguard(android.os.IBinder arg0, String arg1); -521855089843113724; 0; false
void disableMultipathPath(String pathName); 5300369799942584601; 0; false
void disbandAlliance(int id); -3337090002264845774; -1; false
void disbandGuild(int gid); -302594381477382459; -1; false
void disconnectBT(String str); -373737400081004526; 0; false
void disconnection(String login); 5527439557676264853; 0; false
void disconnectOBD(String str); 3004491476757619511; 0; false
void disconnect(String key); 1113063878920970388; 0; false
void dispatchAppVisibility(boolean visible); 9020440283079477303; -1; false
void dispatchPackageBroadcast(int cmd, String[] packages); 7128823427827461656; 4; false
void dontOverrideDisplayInfo(int displayId); -6304588620310611138; -1; false
void download(String username, String filename); -2066504505554338337; 0; false
void draw(String userNameOtherPlayer); 5572442255660171534; 0; false
void dumpActivity(java.io.FileDescriptor fd, android.os.IBinder servicetoken, String prefix, String[] args); -1794691895173444077; 0; false
void dumpDbInfo(java.io.FileDescriptor fd, String[] args); -3672165891640462757; 0; false
void dumpGfxInfo(java.io.FileDescriptor fd, String[] args); -2287618919343380649; 0; false
void dumpHeapFinished(String path); 7361712467369317316; 0; false
void dumpProvider(java.io.FileDescriptor fd, android.os.IBinder servicetoken, String[] args); -2882408095399314119; 0; false
void dumpService(java.io.FileDescriptor fd, android.os.IBinder servicetoken, String[] args); 2137312918482041070; 0; false
void editTopic(java.lang.String in0, java.lang.String in1); -2513665322155550957; 0; false
void emitMap(Long key, String value); -8162405227884569463; 0; false
void emitReduce(Long page, String value); 3767328733483368580; 0; false
void enableMultipathPath(String pathName); -8519895426990767849; 0; false
void enablePanning(boolean z); 6560291367017234895; -1; false
void enableStreetNames(boolean z); 1354608702435327861; -1; false
void enableZoom(boolean z); -359106038794332915; -1; false
void endAdUnitExposure(String str, long j); 1089587106551348728; 0; false
void endSession(int sessionId); 3237324997766905377; -1; false
void enregistrePseudoEtMDP(String pseudo, String mdp); 807560139189185620; 0; false
void enterPictureInPictureMode(android.os.IBinder token); 1186822162111838082; 0; false
void enviarEmailNota(String id); -2394115724795442897; 0; false
void enviarMensajes(String msj, String[] destinatarios); 4554898420748454487; 0; false
void enviarNotasDpec(String cnpj); -1393004142863198803; 0; false
void excel(String tm_id, java.util.List list); 2375317509973754460; 0; false
void execRedisLoader(int flag, int serviceType); -9084763644140631462; -1; false
void execStartHttpLoader(int serviceType); -4336918384687333563; -1; false
void execStopHttpLoader(int serviceType); -3901154008737113211; -1; false
void executeProcess(String instanceId); 384760986921934963; 0; false
void executeStatement(String query); -9136058648931342631; 0; false
void execWrkLoader(int flag, int serviceType); -3439256777144543233; -1; false
void exitFreeformMode(android.os.IBinder token); -4916108335975509177; 0; false
void exitGame(String playerName); 8702650950291121249; 0; false
void extendToConference(String[] participants); -6568319123849582159; 0; false
void fileboo(String name); -4503851361651807681; 0; false
void fileset(String id); -3013368996442480285; 0; false
void fileUpdate(String id); -2545503913733808825; 0; false
void fillPairingInfo(int roundNumber); 3558728244206363777; -1; false
void finishSubActivity(android.os.IBinder token, String resultWho, int requestCode); -4454421977373955636; 0; false
void flowControl(String command, String instanceId, String tracingTag); 7787561520323465853; 0; false
void forceStopPackage(String packageName); 7315760022400439542; 0; false
void forceStopPackage(String packageName, int userId); 1194624756270642508; 0; false
void forgetVolume(String fsUuid); 3625201743327472564; 0; false
void format(String volId); -4423323132717831523; 0; false
void freezeRotation(int arg0); -4631901567827144992; -1; false
void fstrim(int flags); 1567663340208159560; -1; false
void gainGP(int gid, int amount); -4442688954527575993; -1; false
void geefMunten(int spelerId, int aantalMunten); 3685014674395732010; -1; false
void geefNotify(String sessionToken); 2927553722920790166; 0; false
void getValeur(String id, double valeur); 83037415052925153; 0; false
void GiveLife(int whois, String NomJ, String NomD, int x, int y); 5251148359666040145; 4; false
void gooiDobbelsteen(boolean tweeStenen); -775371372263578697; -1; false
void goToSleep(long arg0, int arg1, int arg2); 2167981642541264537; -1; false
void guildChat(int gid, String name, int cid, String msg); 1676595739619130514; 4; false
void handleAppForNotification(String str, int i, int i2); 4939789179284117100; 0; false
void handleAppFromControlCenter(String str, int i); 225505376292367243; 0; false
void hang(android.os.IBinder who, boolean allowRestart); 3162857500163505299; 0; false
void helloResponse(String message); -382733566565620441; 0; false
void hello(String message); 5440316329568782137; 0; false
void hideMySoftInput(android.os.IBinder arg0, int arg1); -795140843985779400; 0; false
void imparte(double x); -6823872614745071515; -1; false
void importFile(String file); 936612326403509187; 0; false
void incrementRound(String login); 7774947116436085472; 0; false
void initForTests(java.util.Map map); 3794807494369618533; 0; false
void inmulteste(double x); -4989721305770838673; -1; false
void insertAnswers(java.util.List a); 5152437203740529994; 0; false
void insertFamilyData(String[][] arr); -4510960287871263038; 0; false
void insertRemindedPassword(String email, String userPassword); -6231288639576308425; 0; false
void insertSoxDbPackage(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package pkg); 6045779149550549104; 0; false
void installSmartCardTrustAnchor(String cert); 1440099636486259639; 0; false
void instantiateWCF(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentRequest shipmentRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package _package); -772366576933625257; 0; false
void interuptGlobalPersonSearch(String idString); 2459471933675883711; 0; false
void invalidateAuthToken(int userId, String accountType, String authToken); 2522920811954729565; 4; false
void inviate(String sendId, String receveId, int ChatIdx); -7477908170391432099; 0; false
void inviteParticipants(String[] participants); -8492769281682277007; 0; false
void isWaitinPromotion(boolean bool); 7816639763174372226; -1; false
void joinAsNeighbour(String message); 2935025901698639873; 0; false
void joinRing(String Ip, int port); -4518921617394188334; 0; false
void keyguardGoingAway(int flags); 6512434018799924875; -1; false
void killAppByPkg(String pkg, int userId); -5554737833383518574; 0; false
void killApplicationProcess(String processName, int uid); -3688099893618956641; 0; false
void killApplicationWithAppId(String pkg, int appid); -1373600960406628389; 0; false
void killApplicationWithUid(String pkg, int uid); 3967678974174788565; 0; false
void killBackgroundProcesses(String packageName); -1822537627276831296; 0; false
void kill(boolean afterBuildFinished); -6739199195064625474; -1; false
void killPackageDependents(String packageName, int userId); -4276431666041567692; 0; false
void killPidForce(int i); -6060536003009948980; -1; false
void killUid(int appId, int userId, String reason); -9155627884517015019; 8; false
void killUid(int uid, String reason); -700184692387974644; 4; false
void lanzarPedido(Long idMesaOcupacion); 3357582967001570238; 0; false
void leaveAsNeighbour(String message); -6083588668175676583; 0; false
void leaveGame(String login); 8959922701388864013; 0; false
void loadLibrary(String className); 8737271316555181616; 0; false
void login(String email, String password); -8945521362303347951; 0; false
void logOut(String sessionToken); -8483103723176661250; 0; false
void main(String[] args); -1585215547985831794; 0; false
void majCaractElement(java.util.Hashtable nvCaract); -2567167387104402708; 0; false
void makeDirectory(String pathStr); 3802970874960613921; 0; false
void makeFile(String pathStr); 4864497595166385302; 0; false
void marcarComandaRealizada(int nroPedido); -5935066307601170004; -1; false
void markForRemoval(String hbaName, boolean remove); -2569459118910491913; 0; false
void messageReceivedCallback(byte[] message, String readerName); -8710157731405118033; 0; false
void messageTrace(String message); -2960573377565933712; 0; false
void messengerChat(int messengerid, String chattext, String namefrom); 6482535997010373752; 4; false
void metCanalEnEauAvecXY(String nomPartie, int x, int y, String postition, String couleur); -1566612188602218058; 0; false
void modidossier(String dossierDesc); -6683618556606312452; 0; false
void modidossier(String nom, String modification); -4744605012178378792; 0; false
void modificarGrupo(es.pode.soporte.seguridad.servicios.GrupoVO grupo); 554988965725606095; 0; false
void modifierDossier(String ajoutaudossier); 3370901140723336106; 0; false
void modifierEsepece(String nom, String modification); 8001820700879700448; 0; false
void modifierMotDePasse(String identifiant, String newMotDePasse); -2574787697115897629; 0; false
void modifyList(int op, int list_id, String change); -4883382245944248527; 8; false
void mount(String volId); 1595967761887334468; 0; false
void mountVffsVolume(String vffsUuid); -8502783367166497849; 0; false
void mountVmfsVolume(String vmfsUuid); 6274407132255965803; 0; false
void moveAppToken(int arg0, android.os.IBinder arg1); -2362931343980583543; 4; false
void moveAppTokensToBottom(java.util.List arg0); -1999950715415636977; 0; false
void moveAppTokensToTop(java.util.List arg0); 3198302095404890307; 0; false
void moved(int newX, int newY); 4982885357955170930; -1; false
void moveFolder(String defId, String parentFolder); 417010757415616883; 0; false
void move(String fromPathStr, String toPathStr); 8907157583254783224; 0; false
void moveTaskBackwards(int task); 3282851466526075009; -1; false
void moveTasksToFullscreenStack(int fromStackId, boolean onTop); -3059348969037491102; -1; false
void moveTaskToBack(int task); 6023961719311260324; -1; false
void moveTaskToBack(int task, int flag); 4869342310988024672; -1; false
void moveTaskToFront(int task); -7453571682256559569; -1; false
void moveTaskToFront(int task, int flags); 1721565303082796025; -1; false
void moveTaskToStack(int taskId, int stackId, boolean toTop); -3524405774722951496; -1; false
void moveTopic(java.lang.String in0, java.lang.String in1, int in2); -5115709774846700057; 0; false
void mudarEstadoContingencia(String cnpj); -8393301501240977644; 0; false
void mudarEstadoDpec(String cnpj); -8400343288249850337; 0; false
void mudarEstadoNormalSemEnvio(String cnpj); 5145507727046840935; 0; false
void mudarEstadoScan(String cnpj); -107732909060767329; 0; false
void multi(int i); 8914324456144348863; -1; false
void mute(boolean z); -965991840003691792; -1; false
void nap(long arg0); -8214386594345607190; -1; false
void notifyActivityDrawn(android.os.IBinder token); -3697293343730952696; 0; false
void notifyAppResumed(android.os.IBinder token, boolean wasStopped, boolean allowSavedSurface); -8913489826609285037; 0; false
void notifyAppStopped(android.os.IBinder token); 5816647417470713394; 0; false
void notifyCleartextNetwork(byte[] bytes); 6644771459425164255; 0; false
void notifyCleartextNetwork(int uid, byte[] firstPacket); -5071602235582822735; 4; false
void notifyEnterAnimationComplete(android.os.IBinder token); 8012308326356179132; 0; false
void notifyLaunchTaskBehindComplete(android.os.IBinder token); -385085690113736003; 0; false
void onActivityForcedResizable(String packageName, int taskId, int reason); 5729718351852686231; 0; false
void onActivityPinned(String packageName, int taskId); -9199835126319682212; 0; false
void onActivityPinned(String packageName, int userId, int taskId); 1054649887010929114; 0; false
void onActivityPinned(String string2, int n, int n2, int n3); -7873330981580878122; 0; false
void onActivityRequestedOrientationChanged(int taskId, int requestedOrientation); -4831794282896840803; -1; false
void onActivityResumed(int userId, android.os.IBinder token); -7433647665973135681; 4; false
void onAdFailedToLoad(int i); -7929417636171288370; -1; false
void onAppEvent(String str, String str2); -5485989114891192347; 0; false
void onClientRegistered(int status, int clientIf); -5234777091970420039; -1; false
void onConfigureMTU(String address, int mtu, int status); 6142642451547294447; 0; false
void onExecuteWrite(String address, int status); 5189566145674332754; 0; false
void onPinnedActivityRestartAttempt(boolean clearedTask); 7882294486380797019; -1; false
void onSearchComplete(String address, int status); 2266590779405346607; 0; false
void onSizeCompatModeActivityChanged(int n, android.os.IBinder iBinder); -5556461719104930859; 4; false
void onStopTyping(String str); 7175629652721592708; 0; false
void onTaskDisplayChanged(int n, int n2); -4085740641389893985; -1; false
void onTaskMovedToFront(int taskId); -9126756633596085929; -1; false
void onTaskProfileLocked(int taskId, int userId); 6586278599928716769; -1; false
void onTaskRemovalStarted(int taskId); 6554921378508916915; -1; false
void onTaskRemoved(int taskId); -2965072551638223066; -1; false
void onTyping(String str); 5309491772203280883; 0; false
void openServiceMenu(int i); -7733548553380859511; -1; false
void openSocket(String mail, String ip, int port, String file); 4476828034019625622; 0; false
void orderCompleted(String userID, Integer orderID); 2360200817352305634; 0; false
void partitionMixed(String diskId, int ratio); -1970908462983901517; 0; false
void partitionPrivate(String diskId); 3503276672520492586; 0; false
void partitionPublic(String diskId); 2464982395210240405; 0; false
void partyChat(int partyid, String chattext, String namefrom); 7993871224851719589; 4; false
void passerSonTour(String identifiant); -4852063746408646063; 0; false
void pass_set(String ps); -2964098918625632075; 0; false
void passTurnInGame(String gameID, String playerName, int turnCount); -1259673910640119029; 0; false
void passTurn(String clientname); 5976940390914697369; 0; false
void pauseKeyDispatching(android.os.IBinder arg0); 7777971031076485287; 0; false
void perdreVie(int viePerdue); 1645741241302704322; -1; false
void persistPrintKey(String id, String key); 8787812496641783762; 0; false
void placerPions(int[][] tab, String identifiant); -1181112689733467376; 0; false
void PlayerAttacked(String NomJ, int damage); 3982705449643232851; 0; false
void playHandCard(String playerName, int fieldIndex); -4627012029968041813; 0; false
void play(int id); 754245554032564261; -1; false
void playPlaylist(java.util.List songs, int id, String pid); -6619070752721456821; 0; false
void playReceivedCards(String playerName, int cardIndex, int fieldIndex); 8580080577465452701; 0; false
void pointerHeight(String name, int height); 5703227052224894503; 0; false
void pointerWidth(String name, int width); 247796574220919772; 0; false
void positionTaskInStack(int taskId, int stackId, int position); 1074002547986737809; -1; false
void prepareAppTransition(int arg0, boolean arg1); 1752107737618887516; -1; false
void printElection(int type); -1102828146130797115; -1; false
void printMsg(String msg); 4285886361945992938; 0; false
void processRestarted(String packageName, String processName, int userId); 3868676306663014875; 0; false
void promptErr(String str); -6335121125933089165; 0; false
void publishnewPosition(String messageIndicator, String messageType, Object object); -5836980831058784027; 0; false
void publishnewTrade(String messageIndicator, String messageType, Object object); -5953289193702154672; 0; false
void publishnewTransfer(String messageIndicator, String messageType, Object object); 5300074553304738587; 0; false
void putArgCount(int argCount); 2425626231026243859; -1; false
void put(boolean b); 367266848888537469; -1; false
void putByteString(byte[] s); 4921319707361321904; 0; false
void putData(byte[] data); 1707490566199767025; 0; false
void putData(byte[] data, int len); -3223044736956303255; 0; false
void put(double d); -7671978153085267449; -1; false
void putere(int x); -9042682722513709230; -1; false
void putFunction(String f, int argCount); -5131334581818615839; 0; false
void put(int i); -6947845164726441836; -1; false
void put(long guidObject, java.io.InputStream inputStream); -190890388560343631; 8; false
void put(long i); -5451969808669268034; -1; false
void putNext(int type); 431011167505714520; -1; false
void put(Object obj); -1635576820600370783; 0; false
void put(Object obj, String[] heads); -7068267322803028444; 0; false
void putSize(int size); -5154818993544830018; -1; false
void putSymbol(String s); -2431489408813159486; 0; false
void queueOrder(Integer orderID, boolean twoPhase); 5601724847519280674; 0; false
void quitterObservation(String identifiant, String idJ1); -333953940884086268; 0; false
void realizarReclamo(Long idMesaOcupacion, String reclamo); -857164570440489589; 0; false
void rebind(String key, java.io.Serializable obj); 8796397554146519373; 0; false
void receiveServerNot(String msg); -1585186480369669848; 0; false
void receive(String data, int source); 2311901449251243760; 0; false
void ReceiveSurrender(String loser); 8328885426199861232; 0; false
void recevoir(int npat, int nvacc, String date); 8876372467506576193; 8; false
void recReqFile(String fileName, long fileSize, String toMail, String fromMail); -6954605066943180554; 0; false
void reenableKeyguard(android.os.IBinder arg0); -3172438684836607088; 0; false
void refused(String mail, String fileName); 5837427070797673829; 0; false
void refuseFile(String mail, String fileName); 1224928609901398209; 0; false
void refuseFile(String sMail, String rMail, String fileName); 1397215377005481333; 0; false
void register(String username, String password); -461010663324792708; 0; false
void registration(String login, String password, String passwordConfirmation); -7404196373342680307; 0; false
void reImprimirNota(String idNota); 6297898240029198650; 0; false
void reject(int reason); 4654167496256140376; -1; false
void rejeterInvitation(String identifiant, String idJ1); 909019659852684049; 0; false
void releaseRecord(int recordID, String tableName, Integer remoteHashCode); -663494151646220077; 4; false
void releaseResultSet(String resultSetID); 3304131652584398306; 0; false
void releaseWakeLock(android.os.IBinder arg0, int arg1); 2534514459682150048; 0; false
void removeAddress(Integer aId); 3548431206487137840; 0; false
void removeAppToken(android.os.IBinder arg0); 8217918607635711293; 0; false
void removeAuthorizedBody(Integer aId); 5975686039405157591; 0; false
void removeBaseRate(Integer aId); -34323699297292376; 0; false
void removeContentProvider(android.os.IBinder connection, boolean stable); 7752346083623790194; 0; false
void removeContentProviderExternal(String name, android.os.IBinder token); 6039196134823708527; 0; false
void removeDepartment(Integer aId); 135232548737865763; 0; false
void removeDocumentsType(Integer aId); -34668539357023689; 0; false
void removeFile(String pathStr); -1601296509794930479; 0; false
void removeFolder(String folderName); 4473537849774881861; 0; false
void removeFriend(String clientMail, String friendMail); -9210261092981649544; 0; false
void removeFromQueue(int position); -4530537674178581606; -1; false
void removeGovern(Integer aId); 2947765672555084862; 0; false
void removeInterfaceMap(long deviceId, long ifindex); 760164657393473478; -1; false
void remove(int id); 6274393861135366882; -1; false
void removeIpVsIdMap(String deviceIp); -422788383953485345; 0; false
void removeManager(Integer aId); -2011610127957171270; 0; false
void removeMiniProgramShare(String str, String str2, String str3); -6694713086029087672; 0; false
void removeMqSchedulerSheet(Integer aId); 6292570993745704539; 0; false
void removeParticipants(String[] participants); -3754884643283153920; 0; false
void removePatternPaidPercentType(Integer aId); 1919823026479125179; 0; false
void removePersonFromList(int cc, int list_id); 2403864846890405320; -1; false
void removePlayerFromGame(String playerName); -1034932299233160455; 0; false
void removeProcessInstance(String instanceId); 8835933833779930615; 0; false
void removePunitiveMeasure(Integer aId); -2742382207876404491; 0; false
void removeQueueItemAt(int index); -7849692931453051514; -1; false
void removeRatingType(Integer aId); -4905099080989206386; 0; false
void removeRegion(Integer aId); 8896562251963115377; 0; false
void removeSharedOwner(java.lang.String in0, int in1, java.lang.String in2); 2212854538377559327; 0; false
void removeSmartCardTrustAnchorByFingerprint(String fingerprint, String digest); 4476849593552572666; 0; false
void removeSmartCardTrustAnchor(String issuer, String serial); -8190474717783224223; 0; false
void removeSpoSetting(Integer aId); 3570883895183934135; 0; false
void removeStack(int stackId); -3734499973448773779; -1; false
void removeStageProtectInfo(String str, String str2); 752513567655169600; 0; false
void removeTargetType(Integer aId); -6809403990118764091; 0; false
void removeVisibleOutsidePackage(String pkg); 4305105134614903065; 0; false
void removeWindowToken(android.os.IBinder arg0); -2074065549578594784; 0; false
void removeWindowToken(android.os.IBinder arg0, int arg1); -8172745296337447635; 0; false
void renumberTablesByBestScore(int roundNumber, java.util.ArrayList alGamesToRenumber); -6082626238342618914; 4; false
void reorderTeamMembersByRating(int roundNumber); 4578792494058307440; -1; false
void replaceSmartCardTrustAnchors(String[] certs); -5516842655385093613; 0; false
void reportActivityFullyDrawn(android.os.IBinder token); 7774291597128854504; 0; false
void reportFullscreenMode(android.os.IBinder token, boolean fullscreen); -5102917478035202766; 0; false
void reqReply(String reply, String mail); 3744449453601784674; 0; false
void requestActivityExtras(android.os.IBinder activityToken, android.os.IBinder requestToken, int requestType); -4601139935298273860; 0; false
void requestAssistContextExtras(android.os.IBinder activityToken, android.os.IBinder requestToken, int requestType); -6022929366961238400; 0; false
void requestBugReport(int bugreportType); 5718535121934641712; -1; false
void requestThumbnail(android.os.IBinder token); 4158027312677691314; 0; false
void rescanHba(String hbaDevice); -7658429038234674086; 0; false
void resetAnalyticsData(long j); 7452774537189927598; -1; false
void resize(double baseScale, double scale); 6445607475636851261; -1; false
void resizeStackBox(int stackBoxId, float weight); 8618224828301362428; -1; false
void restart(boolean afterBuildFinished); 5569757779420484420; -1; false
void resumeKeyDispatching(android.os.IBinder arg0); -5332410177202105601; 0; false
void saveLiqudation(java.util.Vector collectLiqudiation); 2891037807244425702; 0; false
void scade(double x); -398053903471654936; -1; false
void scheduleBackgroundVisibleBehindChanged(android.os.IBinder token, boolean enabled); 5910560227754964831; 0; false
void scheduleCancelVisibleBehind(android.os.IBinder token); 1515929452716477710; 0; false
void scheduleCrash(String msg); -6620642731295085384; 0; false
void scheduleEnterAnimationComplete(android.os.IBinder token); -2085489235324993377; 0; false
void scheduleJobs(java.util.Map triggersAndJobs, boolean replace); 2404438458719160003; 0; false
void scheduleResumeActivity(android.os.IBinder token, boolean isForward); -8012154496189006609; 0; false
void scheduleSendResult(android.os.IBinder token, java.util.List results); -6996975014246884182; 0; false
void scheduleSleeping(android.os.IBinder token, boolean sleeping); 3039882327196876436; 0; false
void scheduleStopService(android.os.IBinder token); -7750398159097097876; 0; false
void scheduleTranslucentConversionComplete(android.os.IBinder token, boolean timeout); 1489847407042781406; 0; false
void scheduleTrimMemory(int level); -8692902570050275889; -1; false
void scheduleWindowVisibility(android.os.IBinder token, boolean showWindow); 4486852595552437057; 0; false
void secdiscard(String path); -2167901728851468495; 0; false
void seekMark(long mark); -8401822581380247572; -1; false
void seekTo(int position); -3821580787319578868; -1; false
void seekTo(long pos); 2872811739523322437; -1; false
void sendAnnoun(String msg); -3474531964230570283; 0; false
void send(byte[] message); 4589847519012958480; 0; false
void sendChallengeResponse(java.lang.String challenge, java.lang.String response); 222804901710381252; 0; false
void sendGameOver(String userNameOtherPlayer); -928858205783337365; 0; false
void sendImg(String filepath, int rnd); 8897026541112585142; 0; false
void sendNotification(java.util.ArrayList contactList, String onlineName); 1374466464749277169; 0; false
void sendNotToAll(String msg); 7829325698824110013; 0; false
void sendOfflineNotification(String mail, java.util.ArrayList friends); -6882070480551801712; 0; false
void send_opmode(int op); 8346910365278247981; -1; false
void send_pubkey(byte[] data); 4871526706575355724; 0; false
void sendReq(String userMail, String friendMail); 8451860002195816955; 0; false
void sendRequstFile(String fileName, long fileSize, String toMail, String fromMail); 8208097382351695426; 0; false
void sendSpouseChat(String sender, String target, String message); 1335222116730412303; 0; false
void send(String msg); 4948365269230768819; 0; false
void send(String s, boolean enc, boolean verify); 1592742178558471681; 0; false
void sendString(String s); -1683715236238101498; 0; false
void send_symmkey(byte[] data); 3147532923630912463; 0; false
void sendToChildren(String data); 2749739299206466928; 0; false
void sendToChildren(String data, int id); -5616094899305937807; 0; false
void sendToParent(String data); -3120162035665854569; 0; false
void serviceDoneExecuting(android.os.IBinder token, int type, int startId, int res, int userId); -341621927284048643; 0; false
void setActivationTime(int h, int m); 2562762659002446617; -1; false
void setActivityInstanceProperty(String instanceId, String tracingTag, String propertyName, java.io.Serializable value); -2551902670035332856; 0; false
void setActivityInstanceProperty(String instanceId, String tracingTag, String propertyName, java.io.Serializable value, Class valueType); 8054429664319558584; 0; false
void setAdaptorName(String adaptorName); 2564386457573649971; 0; false
void setAddress(String Address); -3074136366265904216; 0; false
void setAllCell(int userId, String pkg, java.util.List cell); -1557197569066929899; 4; false
void setAllGesturesEnabled(boolean z); 4633068787078128032; -1; false
void setAlpha(float v); 2414562400322568449; -1; false
void setAlwaysFinish(boolean enabled); -963295199473144122; -1; false
void setAnchor(float v, float v1); 4138011509869077941; -1; false
void setAnimationScale(int arg0, float arg1); 7799643179323453710; -1; false
void setAnimationScales(float[] arg0); 5864572645977641166; 0; false
void setAppTask(android.os.IBinder arg0, int arg1); 1306556103023888350; 0; false
void setAppVisibility(android.os.IBinder arg0, boolean arg1); -742734651856293653; 0; false
void setAppWillBeHidden(android.os.IBinder arg0); -6373146411631590561; 0; false
void setAsServer(boolean bool); 2648373063752084153; -1; false
void setAttentionLight(boolean arg0, int arg1); 2661783207595325067; -1; false
void setAutoAnswer(boolean z); 2287555723534935247; -1; false
void setAutoConnect(boolean z); 3654388159382892240; -1; false
void setAvatar(int avt, String nick); 8459650669920790714; 4; false
void setBatch(String Batch); -5574906652744494111; 0; false
void setBearing(float f); 2757928608219287210; -1; false
void setBezeichnung(String bezeichnung); 2046585969768093940; 0; false
void setBic(String bic); -5920034671234244803; 0; false
void setBLZ(String blz); 7783076583154431874; 0; false
void setBoatName(java.util.UUID id, String BoatName); -3651102826102453227; 0; false
void setBuildingsEnabled(boolean z); -1832603206029407559; -1; false
void setCallSign(java.util.UUID id, String CallSign); -1909300284611588973; 0; false
void setChannelId(int id); 6396029102102574178; -1; false
void setChatMsg(int newChatIdx, String msg); -5317451018867107027; 4; false
void setCheckBackup(boolean checkBackup); 6099143147565476407; -1; false
void setCheckPrimary(boolean checkPrimary); 1204230723708662054; -1; false
void setClickable(boolean z); -6274120777269094787; -1; false
void setClientInitiated(boolean clientInitiated); 9223143827446414041; -1; false
void setClients(java.util.HashSet clients); 854994806159263094; 0; false
void setClipAgendaURL(int clipID, java.lang.String URL); -8132149232031796938; 4; false
void setClipMinutesURL(int clipID, java.lang.String URL); 4706435226676430226; 4; false
void setClipMinutesURLWithName(int clipID, java.lang.String URL, java.lang.String name); -7381718322871380949; 4; false
void setCloseOutMode(java.lang.String carrier, long global_msn, int closeOutMode); 3091890922527904110; 0; false
void setColManos(java.util.ArrayList colManos); -2332200125616191564; 0; false
void setColor(int i); 4937115091876740062; -1; false
void setCompassEnabled(boolean z); -3469654572626007923; -1; false
void setConnectImmediate(boolean value); -736490230667017202; -1; false
void setConstructor(java.util.UUID id, String Constructor); 7484359481575870797; 0; false
void setConsumption(double consumption); -4022338582379636307; -1; false
void setContentDescription(String str); -32048683054600910; 0; false
void setCosmetics(int playerNumber, int lobbyID, int headID, int tailID); -3198310052159082025; -1; false
void setCpuFrequencies(java.util.List cpuFrequencies); 7709171452746678243; 0; false
void setCpuStates(java.util.List cpuStates); 9008798498874443958; 0; false
void setCurrentlyExecutingCommand(String command); 1007709774608900197; 0; false
void setCurrentProject(long sessionId, java.lang.String projectId); 7885838020968301086; 8; false
void setDataAboutServersChanged(boolean dataAboutServersChanged); -5302371500348454633; -1; false
void setDataAboutTasksChanged(boolean dataAboutTasksChanged); 4426976455962932791; -1; false
void setDataCollectionEnabled(boolean z); 7940599162953803776; -1; false
void setDebugFlags(int flags, int mask); 2452650195986343362; -1; false
void setDesc(String desc); -3013828243797376349; 0; false
void setDestination(String destination); 5716523579775523311; 0; false
void setDice(String clientname, int diceindex, int row, int column); -6604065707390261367; 0; false
void setDimensions(float f); 4095610227816915391; -1; false
void setDisplacement(java.util.UUID id, double displacement); 3375269209866960915; 0; false
void setDockedStackResizing(boolean resizing); -4637714687227970931; -1; false
void setDossierDesc(String dossierDescc); 5302168447740186929; 0; false
void setDozeAfterScreenOff(boolean mode); -880487106962048535; -1; false
void setDraft(java.util.UUID id, double draft); -8208646698001662985; 0; false
void setDraggable(boolean z); -8805407003002644984; -1; false
void setDutyTime(int i); 7019023800982125025; -1; false
void seteaza(double x); -5884314273818803600; -1; false
void seteazamem(double x); 9094766481510080168; -1; false
void setElectionParticipant(boolean isParticipant); -7926457038967672593; -1; false
void setError(int err); -2852454753654284208; -1; false
void setEventAgendaURLByUID(java.lang.String eventUID, java.lang.String URL); 4879548063170876209; 0; false
void setEventAgendaURL(int eventID, java.lang.String URL); 1894137765144373620; 4; false
void setEventDispatching(boolean arg0); 6564513758617410009; -1; false
void setExecutingCommandInfoChanged(boolean val); -6442095351369804987; -1; false
void setExternalIPAddress(String externalIPAddress); 4459913025999009576; 0; false
void setFactory(int facto); -8881367503888264352; -1; false
void setFaculty(String Faculty); 7077704318070916893; 0; false
void setFadeIn(boolean z); 8922928397602574410; -1; false
void setFault(String instanceId, String tracingTag, Exception fault); 4319008922172250265; 0; false
void setFeature(String name, boolean state); 1538537967442445750; 0; false
void setField(String field, String contents); 2082902345666305375; 0; false
void setFile(String f); 2125428495065814772; 0; false
void setFillColor(int i); -5280338052499026478; -1; false
void setFirstName(String firstName); -167539222323728091; 0; false
void setFirstPeer(boolean firstPeer); 6678011172532370280; -1; false
void setFlat(boolean z); -6960255887247414718; -1; false
void setFocusedApp(android.os.IBinder arg0, boolean arg1); 7990018565879240658; 0; false
void setFocusedStack(int stackId); -7242984515584128477; -1; false
void setFocusedTask(int taskId); 754497353456446161; -1; false
void setForcedDisplayDensity(int displayId, int density); -990532790904632746; -1; false
void setForcedDisplaySize(int arg0, int arg1); -698496877759678825; -1; false
void setForcedDisplaySize(int displayId, int arg0, int arg1); -923810142225887895; -1; false
void setFreshWaterTankSize(java.util.UUID id, double freshWaterTankSize); 4217838904246844201; 0; false
void setFrontActivityScreenCompatMode(int mode); 4349874388073506544; -1; false
void setGender(String Gender); -4981334810550413560; 0; false
void setGenericContext(java.util.Map genericContext); -8381243437939217931; 0; false
void setGenuaSize(java.util.UUID id, double genuaSize); -8918629267159615437; 0; false
void setGeodesic(boolean z); -1265791259000668522; -1; false
void setGlobalAllCell(java.util.List cell); 7429414576682603452; 0; false
void setGlobalNeighboringCell(java.util.List cell); 6674178853752143704; 0; false
void setGuestEnabled(boolean enable); -6650764731558607671; -1; false
void setGuildAndRank(int cid, int guildid, int rank); -4648323595203616159; -1; false
void setGuildAndRank(java.util.List cids, int guildid, int rank, int exception); 1923239028297761015; 0; false
void setGuildEmblem(int gid, short bg, byte bgcolor, short logo, byte logocolor); 390189758968939895; -1; false
void setGuildNotice(int gid, String notice); -3884419994624729627; 4; false
void setHasBeenSavedOnce(boolean hasBeenSavedOnce); -6161348783438004589; -1; false
void setHasOptionsMenu(boolean z); -2525390032117741900; -1; false
void setHasToken(boolean b); 1506805751194735769; -1; false
void setHasTopUi(boolean hasTopUi); 8770483152766010702; -1; false
void setHeadID(int headID); 120828507157933198; -1; false
void setHoles(java.util.List list); -8197774837841383130; 0; false
void setHomePort(java.util.UUID id, String HomePort); 6971233108783860865; 0; false
void setHost(String host); 1781876760433506767; 0; false
void setHttpProxy(String proxy, String port, String exclList); -5365090796121166135; 0; false
void setIban(String iban); 3687050960787882672; 0; false
void setId(int id); 3383135689147019544; -1; false
void setID(int ID); 8493170385224590595; -1; false
void setImeWindowStatus(android.os.IBinder arg0, int arg1, int arg2); -6684802025148341839; 0; false
void setImmersive(android.os.IBinder token, boolean immersive); -7429521077166182839; 0; false
void setImmersiveMode(boolean z); 4887909213718542626; -1; false
void setIndoorLevelPickerEnabled(boolean z); 7458249997385238792; -1; false
void setInfoFromLocalLoop(java.util.List freq, java.util.List states); -8512082057881174451; 0; false
void setInfoWindowAnchor(float v, float v1); -5562370087550866438; -1; false
void setInput(java.io.Reader in); -8020552329342344463; 0; false
void setInputMethod(android.os.IBinder arg0, String arg1); -2240943331631408100; 0; false
void setInsurance(java.util.UUID id, String Insurance); 7316556426004477019; 0; false
void setIntegrationDefaultFolder(long sessionId, int projectId, int folderId); -5104826696195114952; -1; false
void setInTouchMode(boolean arg0); -131869441527505895; -1; false
void setisPromoting(boolean bool); 3306056461643262116; -1; false
void setIsWaitForPromotion(boolean bool); 1721768628828155475; -1; false
void setJointType(int i); -2699245498791538584; -1; false
void setKeepAlivePeriod(int keepAlivePeriod, int times, boolean report, boolean throwException); -4061926553734796510; -1; false
void setKeyboardLight(boolean on, int key); -3000572864758580659; -1; false
void setKeyboardVisibility(boolean visible); 7340582510607925628; -1; false
void setKommentar(String kommentar); -150906284379607451; 0; false
void setKontonummer(String kontonummer); 7240357506829555501; 0; false
void setKundennummer(String kundennummer); 7741938996734120373; 0; false
void setLastName(String lastName ); -2602503818487600169; 0; false
void setLastTournamentModificationTime(long lastTournamentModificationTime); 6865198469230494999; -1; false
void setLeaderID(String leaderID); -7452111323139828664; 0; false
void setLength(java.util.UUID id, double Length); 2606076118201749122; 0; false
void setLenientBackgroundCheck(boolean enabled); -5599600693636629115; -1; false
void setLightState(int room, boolean b); -2434539248296701580; -1; false
void setLinkCondition(String linkCondition, java.util.Vector binds); -6067867938089816662; 0; false
void setLockScreenShown(boolean showing, boolean occluded); -6483245853040016127; -1; false
void setLockScreenShown(boolean shown); -1219791601121955783; -1; false
void setLoopMode(int loopmode); 1515793187578019080; -1; false
void setMainSailSize(java.util.UUID id, double mainSailSize); 1652409614835696921; 0; false
void setMaitre(String maitre); -7828346152055720125; 0; false
void setMajor(String Major); -604648135292968175; 0; false
void setManualImpressionsEnabled(boolean z); -919459713105552896; -1; false
void setMapToolbarEnabled(boolean z); 8236920561498352983; -1; false
void setMapType(int i); -6160733789637811464; -1; false
void setMastHeight(java.util.UUID id, double mastHeight); 7151014940907283385; 0; false
void setMaxZoomPreference(float f); -4485805942015208541; -1; false
void setMeasurementEnabled(boolean z, long j); -3227773112472062016; -1; false
void setMenuVisibility(boolean z); -4025175618367447600; -1; false
void setMinimize(boolean minimize); 7365288249144819566; -1; false
void setMinimumSessionDuration(long j); -5697145610306464166; -1; false
void setMinZoomPreference(float f); 3821075118086563819; -1; false
void setMode(int userId, String pkg, int mode); -3937012201423994618; 4; false
void setModuleName(String str); -78691315376759200; 0; false
void setModulePassword(String str); -977057291603103923; 0; false
void setMotor(java.util.UUID id, String motor); 2658216341709993886; 0; false
void setMun(int ammo, int ID); -5464887246650166274; -1; false
void setMute(boolean muted); 4196490543973323004; -1; false
void setMyLocationButtonEnabled(boolean z); 798647747179059197; -1; false
void setMyLocationEnabled(boolean z); 5741645336777053402; -1; false
void setName(String name); 1344297395548290975; 0; false
void setNavBarVirtualKeyHapticFeedbackEnabled(boolean enabled); 9011598027585866812; -1; false
void setNeighboringCell(int userId, String pkg, java.util.List cell); 906693012534817892; 4; false
void setNetworkBlockSeq(long l); -1705024942370388255; -1; false
void setNombrePatients(int nombrePatients); 2906224910785082442; -1; false
void setNom(String nom); -5889446409456961040; 0; false
void setNumero(int numero); -6966209109760780720; -1; false
void setOfflineClient(String mail); -2755305182325891565; 0; false
void setOfflineGuildStatus(int guildid, byte guildrank, int cid); -7296713496256476124; -1; false
void setOnlineStatus(String mail); -9156719135656352700; 0; false
void setOrigin(String origin); -388319212568997056; 0; false
void setOwner(java.lang.String in0, int in1, java.lang.String in2); 7238605017239014956; 0; false
void setOwner(java.util.UUID id, String Owner); -7146792981445128350; 0; false
void setPackageHidden(int userId, String packageName, boolean hidden); -3486901169041652775; 4; false
void setPadding(int i, int i2, int i3, int i4); 631340160293081158; -1; false
void setPassportClass(String passport); 6684699924655653993; 0; false
void setPassword( String newPassword ); -2859963922075875313; 0; false
void setPattern(java.util.List list); -5736930241924985984; 0; false
void setPermissionInterceptEnable(boolean z); -8261568345282611013; -1; false
void setPhoneBookList(java.util.List list); -6674980221711272512; 0; false
void setPhoneNumber(String PhoneNumber); 3602690426565776921; 0; false
void setPlayList(java.util.List playList); 5953875282217664019; 0; false
void setPlayStatus(boolean isPlay); -3599198589389734575; -1; false
void setPort(int port); 8549541433352870358; -1; false
void setPorts(java.util.HashMap ports); -4685216713020254333; 0; false
void setPositionWithID(String str); 1383508506433648553; 0; false
void setPozo(float pozo); -4943455458166184841; -1; false
void setPred(int id, String ip); 5082550895981736367; 4; false
void setPrice(double newPrice); 5757205011461632126; -1; false
void setProcessForeground(android.os.IBinder token, int pid, boolean isForeground); 1749627729190159438; 0; false
void setProcessInstanceInfo(String instanceId, String info); 78767354557952236; 0; false
void setProcessInstanceStatus(String instanceId, String status); 2699449368589403363; 0; false
void setProcessState(int state); -403317057461740462; -1; false
void setProcessVariable(String instanceId, String scope, String varKey, java.io.Serializable val); 4713498779282772328; 0; false
void setProperty(String name, Object value); 6360251723481875451; 0; false
void setPword(String Pword); -7405251681588875528; 0; false
void setQuant(java.util.Map quant); 1079292999310399554; 0; false
void setRace(String race); -397235659972112376; 0; false
void setRadius(double d); 5490326255042251943; -1; false
void SetRealTurn(boolean MyRealTurn); 3436841269464775099; -1; false
void setRegisterNr(java.util.UUID id, String registerNr); -8954419450857659727; 0; false
void setRenderThread(int tid); -1495185074890010869; -1; false
void setRepeatMode(int repeatMode); 2514990926375837721; -1; false
void setReportKeepAlive(boolean report); -6044278858068453496; -1; false
void setRetainInstance(boolean z); 5192046564231491374; -1; false
void setRigging(java.util.UUID id, String rigging); -5782618803189082688; 0; false
void setRotateGesturesEnabled(boolean z); 2166112478097539693; -1; false
void setRotation(float v); 3495117206771805260; -1; false
void setSailSign(java.util.UUID id, String SailSign); -4182306504886106046; 0; false
void setSaldoAvailable(double saldo); 3365717649550629672; -1; false
void setSaldo(double saldo); -4747386923732180150; -1; false
void setSchemeCard(String clientname, int cardid); -2671738921459094308; 0; false
void setScrollGesturesEnabled(boolean z); -8425521484362861277; -1; false
void setScrollGesturesEnabledDuringRotateOrZoom(boolean z); 762737204993536840; -1; false
void setServer(boolean b); -4525041094607396449; -1; false
void setServerName(String name); -3092651585990866505; 0; false
void setServersInfo(java.util.List servers); 8202916201898002066; 0; false
void setSessionTimeoutDuration(long j); -897473508031323260; -1; false
void setSettedTemperature(double d); -58294852174406929; -1; false
void setShortName(String shortName); -3694369667061697004; 0; false
void setShuffleModeEnabledRemoved(boolean shuffleMode); -3332777871541843968; -1; false
void setShuffleMode(int shuffleMode); -858779328213254113; -1; false
void setShutterState(int room, boolean b); 926884517074830477; -1; false
void setSignature(byte[] sig); 2349150675406252049; 0; false
void setSkdArrival(String skdArrival); 8367576835628650763; 0; false
void setSkdDeparture(String skdDeparture); 4419466535101859575; 0; false
void setSnippet(String str); 8955536305051179272; 0; false
void setSpiSize(java.util.UUID id, double spiSize); -8864681324895587313; 0; false
void setSprinklerState(boolean b); 3547361301926990862; -1; false
void setStatus(boolean b, int id); -5617270806305170856; -1; false
void setStatus(String status); -7974096402048174143; 0; false
void setStayOnSetting(int arg0); -7958946528268844495; -1; false
void setStrictModeVisualIndicatorPreference(String arg0); 6131860715560300099; 0; false
void setStrokeColor(int i); -8441454379513687778; -1; false
void setStrokeJointType(int i); 4453261480746683016; -1; false
void setStrokePattern(java.util.List list); 3179448859451253136; 0; false
void setStrokeWidth(float v); 126261006447861466; -1; false
void setSubPart(java.util.Map subPart); 560357703193874537; 0; false
void setSystemProperties(String str, String str2); -8417542041021933881; 0; false
void setTabBordName(String id, String name); 1160923586477330929; 0; false
void setTailID(int tailID); -55349244671129482; -1; false
void setTankSize(java.util.UUID id, double tankSize); -3925299987031061417; 0; false
void setTaskResizeable(int taskId, boolean resizeable); 2157940339075392472; -1; false
void setTaskResizeable(int taskId, int resizeableMode); 1966728284031939693; -1; false
void setTasksInfo(java.util.List tasks); -219080783910792422; 0; false
void setTeamSize(int teamSize); 8047315371312626173; -1; false
void setTemperature(double temperature); -4688973845179905471; -1; false
void setTemporaryScreenAutoBrightnessAdjustmentSettingOverride(float arg0); 5138315036392500489; -1; false
void setTemporaryScreenBrightnessSettingOverride(int arg0); 666747219898815052; -1; false
void setThermostatState(boolean b); 8113206791808191397; -1; false
void setTiltGesturesEnabled(boolean z); 70138815428649607; -1; false
void setTitle(String title); 7689428854650362573; 0; false
void setToolCardDiceIntensity(String clientname, int intensity); -6696167668010465253; 0; false
void setToolCardDice(String clientname, int row, int column); 9107057683599371225; 0; false
void setTrafficEnabled(boolean z); -3384447880110721972; -1; false
void setTransparency(float f); -5276729433296895532; -1; false
void setType(java.util.UUID id, String Type); 7166328792150229112; 0; false
void setUKMName(String UKMName); 8824757550202923670; 0; false
void setUname(String Uname); -5708082205757345095; 0; false
void setUnterkonto(String unterkonto); 1647316362316434899; 0; false
void setUsbMassStorageEnabled(boolean enable); -5997677882916627098; -1; false
void set_verifyier(byte[] key); 2349379980859837374; 0; false
void setVisible(boolean z); 1163712623941842538; -1; false
void setVolume(float volume); 2716798744331738684; -1; false
void setVolumeNickname(String fsUuid, String nickname); -2983782374745255100; 0; false
void setVolumeTo(int value, int flags, String packageName); -5724554168258901273; 8; false
void setVrThread(int tid); -3925112754393187419; -1; false
void setWaehrung(String waehrung); 5465800931151959222; 0; false
void setWasteWaterTankSize(java.util.UUID id, double wasteWaterTankSize); -7664788420863502772; 0; false
void setWatermarkEnabled(boolean z); -1400612670136006953; -1; false
void setWidth(float f); -2189326080946474945; -1; false
void setWidth(java.util.UUID id, double width); -5226015444267938013; 0; false
void setWorkingPeer(Long page); 2267489942727075504; 0; false
void setYachtclub(java.util.UUID id, String yachtclub); 422126216824908379; 0; false
void setYearOfConstruction(java.util.UUID id, int yearOfConstruction); -3681839740146433117; 0; false
void setZIndex(float v); 3413960920252674767; -1; false
void setZoomControlsEnabled(boolean z); -7088458193921503970; -1; false
void setZoomGesturesEnabled(boolean z); -7211099871309927274; -1; false
void showDesktopLyric(boolean show); -4001683039021894268; -1; false
void showMySoftInput(android.os.IBinder arg0, int arg1); 2207871196301377373; 0; false
void showStrictModeViolation(boolean arg0); -3974120264514802753; -1; false
void shutdown(boolean waitForJobsToComplete); -7158426071079062438; -1; false
void shutDown(String cause); -2725516241255244918; 0; false
void signalPersistentProcesses(int signal); 1280629372067825095; -1; false
void SimpleDeletePlayer(String NomJ); 504430372827312905; 0; false
void singOut(String mail); -4511926458515365880; 0; false
void skipToQueueItem(long j); -482356882750220926; -1; false
void startAppFreezingScreen(android.os.IBinder arg0, int arg1); 8364572676958395555; 0; false
void startDelayed(int seconds); -1476976461109028800; -1; false
void startDtmf(char c); 1213260952004010367; -1; false
void startFailureDetector(String host, int port); -5024137581483858333; 0; false
void startGame(java.util.ArrayList players); 2312831657430830530; 0; false
void start(int id); 1449407963725644360; -1; false
void startLockTaskMode(android.os.IBinder token); -7661221651261311905; 0; false
void startLockTaskMode(int taskId); -4635347679627926137; -1; false
void startSystemLockTaskMode(int taskId); -5892941478536894148; -1; false
void statusBarVisibilityChanged(int arg0); -7602124839455614405; -1; false
void steelMunten(int diefID, int slachtofferID, int aantalMunten); 2729004784824496399; -1; false
void stopAppFreezingScreen(android.os.IBinder arg0, boolean arg1); -5088055467696300954; 0; false
void stopLocalVoiceInteraction(android.os.IBinder token); -1221530035438657554; 0; false
void stopProcessInstance(String instanceId); -6743237695243826389; 0; false
void suppressResizeConfigChanges(boolean suppress); 8191481869601042497; -1; false
void switchOrientation(int player); -7193900975923394779; -1; false
void SyncReceiveWsTrafficData(String type, java.util.LinkedHashMap data); -2028599213083753001; 0; false
void SyncSendConfigureData(String type, String actionType, java.util.Properties data); -3694067022456766787; 0; false
void SyncSendQueryTrafficData(java.util.LinkedHashMap data); -6849200131216154980; 0; false
void tentarEnvioNotas(String cnpj); 1957110326669360660; 0; false
void terminate(int reason); 3467770409967797907; -1; false
void tirer(int x, int y, int player); 3509613477071872538; -1; false
void toTmpObjects(Class objectClass, Integer[] ids, boolean tmp); -3221536476752870683; 0; false
void trocarSenha(String login, String senha); -5902513398849114296; 0; false
void tvStationActivatie(int slachtofferId); -6235122700683612049; -1; false
void unassignByePlayer(int roundNumber); -4876888456372505174; -1; false
void unbind(String name); 7305022919901907578; 0; false
void unblockFriend(String clientMail, String friendMail); -5513001793657263734; 0; false
void unblock(String pathStr, String user); 7323175774039964723; 0; false
void undefine(String readerName); -5682179481624457076; 0; false
void unloadLibrary(String className); 3488658048261120686; 0; false
void unlock(java.lang.String in0, int in1); -5493136858966253775; 0; false
void unmountForceMountedVmfsVolume(String vmfsUuid); 5403000114875797546; 0; false
void unmount(String volId); -918343401081973453; 0; false
void unmountVffsVolume(String vffsUuid); 7665083572803563058; 0; false
void unmountVmfsVolume(String vmfsUuid); -6132055612389937179; 0; false
void unregister(String username); 7804719300066395214; 0; false
void unstableProviderDied(android.os.IBinder provider); -2234443281251866048; 0; false
void unteamAllTeams(int roundNumber); 686594920539120420; -1; false
void unzipFile(java.lang.String in0, java.lang.String in1, java.lang.String in2); -5601651467157410761; 0; false
void updateAnswers(java.util.List a); 8733503191339278796; 0; false
void updateAssets(int userId, java.util.List packageNames); -8158196212539919722; 4; false
void updateBlockedUids(int uid, boolean isBlocked); -1663082709944144034; -1; false
void updateCamera(com.granicus.xsd.CameraData camera); -2251580216036835783; 0; false
void updateClip(com.granicus.xsd.ClipData clip); 5943796453656333097; 0; false
void updateCurrency(int id); -4109725233734593440; -1; false
void updateDeviceMaxIndex(String deviceIp, int maxIndex); 4961737391151655918; 0; false
void updateDeviceMaxIndex(String deviceIp, long maxIndex); 1739790875806821618; 0; false
void updateDeviceOwner(String packageName); 4226110599953433824; 0; false
void updateDeviceSnmp(String deviceIp); 8594585728698059343; 0; false
void updateEvent(com.granicus.xsd.EventData event); -3147301729731357588; 0; false
void updateFingers(java.util.List nodes); -2119095043114511898; 0; false
void updateFlowDeviceSnmpStatus(String deviceIp, boolean status); -6267811751181907749; 0; false
void updateFlowDevice(String deviceIp); 1136000841747860262; 0; false
void updateFolder(com.granicus.xsd.FolderData folder); 5768316320929766144; 0; false
void updateGlobalBaselineStatus(int status); 3027947711139792245; -1; false
void updateGlobalSnmpRoCommunity(String rostring); -8503877473148232893; 0; false
void updateHighscore(int userID, int score); -2292159657130725786; -1; false
void updateInterfaceHash(String deviceIp, long ifIndex, long interfaceId); -3900886007027986120; 0; false
void updateInterfaceIndexMap(String deviceIp, long ifIndex, long ifIndexsnmp); 8708619522602565731; 0; false
void updateInterfaceMap(long deviceId, long interfaceid, long ifIndex, int sampleratio); 8743463821855724158; -1; false
void updateInternetScsiAlias(String iScsiHbaDevice, String iScsiAlias); -4824371053416299280; 0; false
void updateInternetScsiName(String iScsiHbaDevice, String iScsiName); 8962096261051293203; 0; false
void updateIpVsIdMap(String deviceIp, long deviceId); 6706674940245505377; 0; false
void updateLockTaskPackages(int userId, String[] packages); -224191588607999650; 4; false
void updateManualTestStep(long sessionId, int testId, com.borland.sctm.ws.planning.entities.ManualTestStep step); -246426387463154721; 12; false
void updateMap(java.util.HashMap map); -7174974074421350401; 0; false
void updateMessenger(int messengerid, String namefrom, int fromchannel); 8360106224652317978; 4; false
void updateMetaData(com.granicus.xsd.MetaDataData metaData); -826131659750645457; 0; false
void updateOpenPosition(java.util.Vector collectOpenPositionforUpdate); 592015167464961783; 0; false
void updatePassword(String email, String pasword); -4003422264029268719; 0; false
void updatePermissionChoice(String str, String str2, int i); -6567383746487276852; 0; false
void updateReady(String playerName); 4316527676795250975; 0; false
void updateRotation(boolean arg0); 1051067082970219649; -1; false
void updateRotation(boolean arg0, boolean arg1); 3140307773642513044; -1; false
void updateRouterSamplingInterval(String deviceIp, int sampleRatio); -3984031206514369229; 0; false
void updateScsiLunDisplayName(String lunUuid, String displayName); 4295049453379034204; 0; false
void updateServer(com.granicus.xsd.ServerData server); -7216660867050286742; 0; false
void updateSoftwareInternetScsiEnabled(boolean enabled); -2368005014552505838; -1; false
void updateSoxDbPackage(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package pkg); -4006284182353763298; 0; false
void updateStatusIcon(android.os.IBinder arg0, String arg1, int arg2); -517031704955561140; 0; false
void updateStatus(int userID, int lobbyID); -3225090097589613295; -1; false
void updateSwitchPollingInterval(int interval); 7062026846568686777; -1; false
void updateSwitchPolling(int status); 8733028560258769562; -1; false
void updateTemplate(com.granicus.xsd.TemplateData template); -892256841749704672; 0; false
void updateTimePrefs(boolean is24Hour); 5546870461568029935; -1; false
void updateTimePrefs(int i); -2352466074401797108; -1; false
void updateTimeSheetDummyLine(int intTimeSheetID); -3025250565274043677; -1; false
void updateTimeSheetMigrateLine(int intTimeSheetID, String status); 8460775074097941424; 4; false
void updateView(com.granicus.xsd.ViewData view); 4158070164477329344; 0; false
void updateWakeLockUids(android.os.IBinder arg0, int[] arg1); 2158427104303096313; 0; false
void updatexFlowCollectingStatus(int status); 6974409138714849201; -1; false
void upgradeVmfs(String vmfsPath); -7934581874481001671; 0; false
void upgradeVmLayout(String vmfsPath); -9156266476311909799; 0; false
void upload(byte[] buff, String name); 8336292834507623511; 0; false
void uploadClipMinutesDocument(int clipID, com.granicus.xsd.Document document, java.lang.String name); 399515981230247610; 4; false
void uploadEventAgendaDocument(int eventID, com.granicus.xsd.Document document); 6209935975221618296; 4; false
void uploadFile(java.lang.String in0, java.lang.String in1, java.lang.String in2, boolean in3); -4309116236653720415; 0; false
void upload(String username, String filename, long size, String access, String permissions); -3982794551480230505; 0; false
void userActivity(long time, int event, int flags); -3947053358364587220; -1; false
void userlogOut(String userId); 4283787935534593683; 0; false
void userSave(String id, String user); 2118097011399531586; 0; false
void validate(java.lang.String user_name, java.lang.String password); -3120267641659755201; 0; false
void voidReturn(int i); -5298702879292665781; -1; false
void voidReturn(int i, Object o); 4325739883585102994; 4; false
void wakeUp(long time); 2025172730349555639; -1; false
void wakeUp(long time, String reason, String opPackageName); -303913551591220504; 8; false
